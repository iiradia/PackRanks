{"ast":null,"code":"import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\"; // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (!isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/node_modules/@popperjs/core/lib/dom-utils/getCompositeRect.js"],"names":["getBoundingClientRect","getNodeScroll","getNodeName","isHTMLElement","getWindowScrollBarX","getDocumentElement","isScrollParent","getCompositeRect","elementOrVirtualElement","offsetParent","isFixed","documentElement","rect","scroll","scrollLeft","scrollTop","offsets","x","y","clientLeft","clientTop","left","top","width","height"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,4BAAlC;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,OAAOC,mBAAP,MAAgC,0BAAhC;AACA,OAAOC,kBAAP,MAA+B,yBAA/B;AACA,OAAOC,cAAP,MAA2B,qBAA3B,C,CAAkD;AAClD;;AAEA,eAAe,SAASC,gBAAT,CAA0BC,uBAA1B,EAAmDC,YAAnD,EAAiEC,OAAjE,EAA0E;AACvF,MAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,KAAV;AACD;;AAED,MAAIC,eAAe,GAAGN,kBAAkB,CAACI,YAAD,CAAxC;AACA,MAAIG,IAAI,GAAGZ,qBAAqB,CAACQ,uBAAD,CAAhC;AACA,MAAIK,MAAM,GAAG;AACXC,IAAAA,UAAU,EAAE,CADD;AAEXC,IAAAA,SAAS,EAAE;AAFA,GAAb;AAIA,MAAIC,OAAO,GAAG;AACZC,IAAAA,CAAC,EAAE,CADS;AAEZC,IAAAA,CAAC,EAAE;AAFS,GAAd;;AAKA,MAAI,CAACR,OAAL,EAAc;AACZ,QAAIR,WAAW,CAACO,YAAD,CAAX,KAA8B,MAA9B,IAAwC;AAC5CH,IAAAA,cAAc,CAACK,eAAD,CADd,EACiC;AAC/BE,MAAAA,MAAM,GAAGZ,aAAa,CAACQ,YAAD,CAAtB;AACD;;AAED,QAAIN,aAAa,CAACM,YAAD,CAAjB,EAAiC;AAC/BO,MAAAA,OAAO,GAAGhB,qBAAqB,CAACS,YAAD,CAA/B;AACAO,MAAAA,OAAO,CAACC,CAAR,IAAaR,YAAY,CAACU,UAA1B;AACAH,MAAAA,OAAO,CAACE,CAAR,IAAaT,YAAY,CAACW,SAA1B;AACD,KAJD,MAIO,IAAIT,eAAJ,EAAqB;AAC1BK,MAAAA,OAAO,CAACC,CAAR,GAAYb,mBAAmB,CAACO,eAAD,CAA/B;AACD;AACF;;AAED,SAAO;AACLM,IAAAA,CAAC,EAAEL,IAAI,CAACS,IAAL,GAAYR,MAAM,CAACC,UAAnB,GAAgCE,OAAO,CAACC,CADtC;AAELC,IAAAA,CAAC,EAAEN,IAAI,CAACU,GAAL,GAAWT,MAAM,CAACE,SAAlB,GAA8BC,OAAO,CAACE,CAFpC;AAGLK,IAAAA,KAAK,EAAEX,IAAI,CAACW,KAHP;AAILC,IAAAA,MAAM,EAAEZ,IAAI,CAACY;AAJR,GAAP;AAMD","sourcesContent":["import getBoundingClientRect from \"./getBoundingClientRect.js\";\nimport getNodeScroll from \"./getNodeScroll.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport { isHTMLElement } from \"./instanceOf.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\";\nimport getDocumentElement from \"./getDocumentElement.js\";\nimport isScrollParent from \"./isScrollParent.js\"; // Returns the composite rect of an element relative to its offsetParent.\n// Composite means it takes into account transforms as well as layout.\n\nexport default function getCompositeRect(elementOrVirtualElement, offsetParent, isFixed) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n\n  var documentElement = getDocumentElement(offsetParent);\n  var rect = getBoundingClientRect(elementOrVirtualElement);\n  var scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  var offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (!isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || // https://github.com/popperjs/popper-core/issues/1078\n    isScrollParent(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      offsets = getBoundingClientRect(offsetParent);\n      offsets.x += offsetParent.clientLeft;\n      offsets.y += offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}"]},"metadata":{},"sourceType":"module"}