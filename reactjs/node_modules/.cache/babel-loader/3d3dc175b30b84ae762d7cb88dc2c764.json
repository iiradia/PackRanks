{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup); // Add checksum (handle both parent tags, comments and self-closing tags)\n\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\nmodule.exports = ReactMarkupChecksum;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/node_modules/react-simplert/node_modules/react-dom/lib/ReactMarkupChecksum.js"],"names":["adler32","require","TAG_END","COMMENT_START","ReactMarkupChecksum","CHECKSUM_ATTR_NAME","addChecksumToMarkup","markup","checksum","test","replace","canReuseMarkup","element","existingChecksum","getAttribute","parseInt","markupChecksum","module","exports"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAArB;;AAEA,IAAIC,OAAO,GAAG,MAAd;AACA,IAAIC,aAAa,GAAG,UAApB;AAEA,IAAIC,mBAAmB,GAAG;AACxBC,EAAAA,kBAAkB,EAAE,qBADI;;AAGxB;;;;AAIAC,EAAAA,mBAAmB,EAAE,UAAUC,MAAV,EAAkB;AACrC,QAAIC,QAAQ,GAAGR,OAAO,CAACO,MAAD,CAAtB,CADqC,CAGrC;;AACA,QAAIJ,aAAa,CAACM,IAAd,CAAmBF,MAAnB,CAAJ,EAAgC;AAC9B,aAAOA,MAAP;AACD,KAFD,MAEO;AACL,aAAOA,MAAM,CAACG,OAAP,CAAeR,OAAf,EAAwB,MAAME,mBAAmB,CAACC,kBAA1B,GAA+C,IAA/C,GAAsDG,QAAtD,GAAiE,KAAzF,CAAP;AACD;AACF,GAhBuB;;AAkBxB;;;;;AAKAG,EAAAA,cAAc,EAAE,UAAUJ,MAAV,EAAkBK,OAAlB,EAA2B;AACzC,QAAIC,gBAAgB,GAAGD,OAAO,CAACE,YAAR,CAAqBV,mBAAmB,CAACC,kBAAzC,CAAvB;AACAQ,IAAAA,gBAAgB,GAAGA,gBAAgB,IAAIE,QAAQ,CAACF,gBAAD,EAAmB,EAAnB,CAA/C;AACA,QAAIG,cAAc,GAAGhB,OAAO,CAACO,MAAD,CAA5B;AACA,WAAOS,cAAc,KAAKH,gBAA1B;AACD;AA5BuB,CAA1B;AA+BAI,MAAM,CAACC,OAAP,GAAiBd,mBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar adler32 = require('./adler32');\n\nvar TAG_END = /\\/?>/;\nvar COMMENT_START = /^<\\!\\-\\-/;\n\nvar ReactMarkupChecksum = {\n  CHECKSUM_ATTR_NAME: 'data-react-checksum',\n\n  /**\n   * @param {string} markup Markup string\n   * @return {string} Markup string with checksum attribute attached\n   */\n  addChecksumToMarkup: function (markup) {\n    var checksum = adler32(markup);\n\n    // Add checksum (handle both parent tags, comments and self-closing tags)\n    if (COMMENT_START.test(markup)) {\n      return markup;\n    } else {\n      return markup.replace(TAG_END, ' ' + ReactMarkupChecksum.CHECKSUM_ATTR_NAME + '=\"' + checksum + '\"$&');\n    }\n  },\n\n  /**\n   * @param {string} markup to use\n   * @param {DOMElement} element root React element\n   * @returns {boolean} whether or not the markup is the same\n   */\n  canReuseMarkup: function (markup, element) {\n    var existingChecksum = element.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n    existingChecksum = existingChecksum && parseInt(existingChecksum, 10);\n    var markupChecksum = adler32(markup);\n    return markupChecksum === existingChecksum;\n  }\n};\n\nmodule.exports = ReactMarkupChecksum;"]},"metadata":{},"sourceType":"script"}