{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/src/components/Table.jsx\";\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport \"../css/table.css\";\nimport ReactTooltip from \"react-tooltip\"; // Put data into each row \n\nconst RenderRow = props => {\n  return props.keys.map((key, index) => {\n    /* Check if key is professor */\n    if (key === \"Professor\" || key === \"Location\") {\n      /* If there is no link, just return professor name. */\n      if (props.data[key][1] === 'None') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: props.data[key][0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 53\n          }\n        }, props.data[key][0]));\n      } else {\n        /* Else, return hyperlink that opens in new tab. */\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: props.data[key][0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          href: props.data[key][1],\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }\n        }, props.data[key][0])));\n      }\n    } else if (key === \"Course\") {\n      const title = props.data[key][\"course_title\"];\n      const code = props.data[key][\"code\"];\n      const descr = props.data[key][\"descr\"];\n      const titleStr = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 30\n        }\n      }, \"Course Title: \\\" + \", title);\n      const descrStr = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 30\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"td\", {\n        id: \"cdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        \"data-tip\": ttS,\n        \"data-for\": \"ctool\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }\n      }, code)), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: 50\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(ReactTooltip //multiline={true} \n      , {\n        id: \"ctool\",\n        place: \"right\",\n        effect: \"solid\",\n        backgroundColor: \"white\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }\n      })));\n    }\n    /* If normal element, return normal table */\n    else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: props.data[key],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 46\n          }\n        }, props.data[key]));\n      }\n  });\n};\n\nclass table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getKeys = function () {\n      return Object.keys(this.props.data[0]);\n    };\n\n    this.getHeader = function () {\n      var keys = this.getKeys();\n      return keys.map((key, index) => {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 20\n          }\n        }, key.toUpperCase());\n      });\n    };\n\n    this.getRowsData = function () {\n      var items = this.props.data;\n      var keys = this.getKeys();\n      return items.map((row, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(RenderRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 34\n          }\n        }));\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n  } // Gets the keys of the whole table \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      varaint: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, this.getHeader())), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default table;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/src/components/Table.jsx"],"names":["React","Table","ReactTooltip","RenderRow","props","keys","map","key","index","data","title","code","descr","titleStr","descrStr","ttS","width","table","Component","constructor","getKeys","Object","getHeader","toUpperCase","getRowsData","items","row","bind","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport \"../css/table.css\"\nimport ReactTooltip from \"react-tooltip\";\n\n// Put data into each row \nconst RenderRow = (props) =>{\n    return props.keys.map((key, index)=>{\n\n        /* Check if key is professor */\n        if (key === \"Professor\" || key === \"Location\") {\n\n            /* If there is no link, just return professor name. */\n            if (props.data[key][1] === 'None') {\n                return <td key={props.data[key][0]}><strong>{props.data[key][0]}</strong></td>\n            }\n            else { \n                /* Else, return hyperlink that opens in new tab. */   \n                return <td key={props.data[key][0]}>\n                            <a href={props.data[key][1]} target=\"_blank\">\n                                <strong>{props.data[key][0]}</strong>\n                            </a>\n                        </td>\n            }\n        }\n        else if (key === \"Course\") {\n            \n            const title = props.data[key][\"course_title\"];\n            const code = props.data[key][\"code\"];\n            const descr = props.data[key][\"descr\"];\n            const titleStr = <div>Course Title: \" + {title}</div>;\n            const descrStr = <div></div>\n            \n            \n            return <td id=\"cdiv\">\n                        <strong><p data-tip={ttS} data-for=\"ctool\">{code}</p></strong>\n                        <div style={{width:50}}>\n                            <ReactTooltip \n                                //multiline={true} \n                                id=\"ctool\" \n                                place=\"right\" \n                                effect=\"solid\"\n                                backgroundColor={\"white\"}\n\n                            />\n                        </div>\n                   </td>\n        }\n        /* If normal element, return normal table */\n        else{\n            return <td key={props.data[key]}><strong>{props.data[key]}</strong></td>\n        }\n    })\n   }\n\nclass table extends React.Component {\n \n    \n    constructor(props){\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.getRowsData = this.getRowsData.bind(this);\n        this.getKeys = this.getKeys.bind(this);\n    }\n\n    \n    \n    // Gets the keys of the whole table \n    getKeys = function(){\n        return Object.keys(this.props.data[0]);\n    }\n    \n    // Gets the headers of table from the keys \n    getHeader = function(){\n        var keys = this.getKeys();\n        return keys.map((key, index)=>{\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n    \n\n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        return items.map((row, index)=>{\n          \n            \n          return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n        \n        })\n      }\n    \n    render() {\n        return (\n        <div>\n            <Table striped bordered hover varaint = \"dark\">\n            <thead>\n                <tr>{this.getHeader()}</tr>\n            </thead>\n            <tbody>\n                {this.getRowsData()}\n            </tbody>\n        </Table>\n        </div>\n    \n     );\n    }\n   }\n\n\nexport default table; "]},"metadata":{},"sourceType":"module"}