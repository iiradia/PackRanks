{"ast":null,"code":"var React = require('react');\n\nvar $ = React.DOM; // Some shared attrs for JsonTable and JsonRow\n\nvar defaultSettings = {\n  header: true,\n  noRowsMessage: 'No items',\n  classPrefix: 'json'\n},\n    getSetting = function (name) {\n  var settings = this.props.settings;\n  if (!settings || typeof settings[name] == 'undefined') return defaultSettings[name];\n  return settings[name];\n};\n\nvar JsonTable = React.createClass({\n  getSetting: getSetting,\n  render: function () {\n    var cols = this.normalizeColumns(),\n        contents = [this.renderRows(cols)];\n    if (this.getSetting('header')) contents.unshift(this.renderHeader(cols));\n    var tableClass = this.props.className || this.getSetting('classPrefix') + 'Table';\n    return $.table({\n      className: tableClass\n    }, contents);\n  },\n  renderHeader: function (cols) {\n    var me = this,\n        prefix = this.getSetting('classPrefix'),\n        headerClass = this.getSetting('headerClass'),\n        cells = cols.map(function (col) {\n      var className = prefix + 'Column';\n      if (headerClass) className = headerClass(className, col.key);\n      return $.th({\n        className: className,\n        key: col.key,\n        onClick: me.onClickHeader,\n        \"data-key\": col.key\n      }, col.label);\n    });\n    return $.thead({\n      key: 'th'\n    }, $.tr({\n      className: prefix + 'Header'\n    }, cells));\n  },\n  renderRows: function (cols) {\n    var me = this,\n        items = this.props.rows,\n        settings = this.props.settings || {},\n        i = 1;\n    if (!items || !items.length) return $.tbody({\n      key: 'body'\n    }, [$.tr({\n      key: 'row'\n    }, $.td({\n      key: 'column'\n    }, this.getSetting('noRowsMessage')))]);\n    var rows = items.map(function (item) {\n      var key = me.getKey(item, i);\n      return React.createElement(Row, {\n        key: key,\n        reactKey: key,\n        item: item,\n        settings: settings,\n        columns: cols,\n        i: i++,\n        onClickRow: me.onClickRow,\n        onClickCell: me.onClickCell\n      });\n    });\n    return $.tbody({\n      key: 'body'\n    }, rows);\n  },\n  getItemField: function (item, field) {\n    return item[field];\n  },\n  normalizeColumns: function () {\n    var getItemField = this.props.cellRenderer || this.getItemField,\n        cols = this.props.columns,\n        items = this.props.rows;\n\n    if (!cols) {\n      if (!items || !items.length) return [];\n      return Object.keys(items[0]).map(function (key) {\n        return {\n          key: key,\n          label: key,\n          cell: getItemField\n        };\n      });\n    }\n\n    return cols.map(function (col) {\n      var key;\n\n      if (typeof col == 'string') {\n        return {\n          key: col,\n          label: col,\n          cell: getItemField\n        };\n      }\n\n      if (typeof col == 'object') {\n        key = col.key || col.label; // This is about get default column definition\n        // we use label as key if not defined\n        // we use key as label if not defined\n        // we use getItemField as cell function if not defined\n\n        return {\n          key: key,\n          label: col.label || key,\n          cell: col.cell || getItemField\n        };\n      }\n\n      return {\n        key: 'unknown',\n        name: 'unknown',\n        cell: 'Unknown'\n      };\n    });\n  },\n  getKey: function (item, i) {\n    var field = this.props.settings && this.props.settings.keyField;\n    if (field && item[field]) return item[field];\n    if (item.id) return item.id;\n    if (item._id) return item._id;\n    return i;\n  },\n  shouldComponentUpdate: function () {\n    return true;\n  },\n  onClickRow: function (e, item) {\n    if (this.props.onClickRow) {\n      this.props.onClickRow(e, item);\n    }\n  },\n  onClickHeader: function (e) {\n    if (this.props.onClickHeader) {\n      this.props.onClickHeader(e, e.target.dataset.key);\n    }\n  },\n  onClickCell: function (e, key, item) {\n    if (this.props.onClickCell) {\n      this.props.onClickCell(e, key, item);\n    }\n  }\n});\nvar Row = React.createClass({\n  getSetting: getSetting,\n  render: function () {\n    var me = this,\n        props = this.props,\n        cellClass = this.getSetting('cellClass'),\n        rowClass = this.getSetting('rowClass'),\n        prefix = this.getSetting('classPrefix'),\n        cells = props.columns.map(function (col) {\n      var content = col.cell,\n          key = col.key,\n          className = prefix + 'Cell ' + prefix + 'Cell_' + key;\n      if (cellClass) className = cellClass(className, key, props.item);\n      if (typeof content == 'function') content = content(props.item, key);\n      return $.td({\n        className: className,\n        key: key,\n        \"data-key\": key,\n        onClick: me.onClickCell\n      }, content);\n    });\n    var className = prefix + 'Row ' + prefix + (props.i % 2 ? 'Odd' : 'Even');\n    if (props.reactKey) className += ' ' + prefix + 'Row_' + props.reactKey;\n    if (rowClass) className = rowClass(className, props.item);\n    return $.tr({\n      className: className,\n      onClick: me.onClickRow,\n      key: this.props.reactKey\n    }, cells);\n  },\n  onClickCell: function (e) {\n    this.props.onClickCell(e, e.target.dataset.key, this.props.item);\n  },\n  onClickRow: function (e) {\n    this.props.onClickRow(e, this.props.item);\n  }\n});\nmodule.exports = JsonTable;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/node_modules/react-json-table/rjt.js"],"names":["React","require","$","DOM","defaultSettings","header","noRowsMessage","classPrefix","getSetting","name","settings","props","JsonTable","createClass","render","cols","normalizeColumns","contents","renderRows","unshift","renderHeader","tableClass","className","table","me","prefix","headerClass","cells","map","col","key","th","onClick","onClickHeader","label","thead","tr","items","rows","i","length","tbody","td","item","getKey","createElement","Row","reactKey","columns","onClickRow","onClickCell","getItemField","field","cellRenderer","Object","keys","cell","keyField","id","_id","shouldComponentUpdate","e","target","dataset","cellClass","rowClass","content","module","exports"],"mappings":"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","sourcesContent":["var React = require('react');\n\nvar $ = React.DOM;\n\n// Some shared attrs for JsonTable and JsonRow\nvar defaultSettings = {\n\t\theader: true,\n\t\tnoRowsMessage: 'No items',\n\t\tclassPrefix: 'json'\n\t},\n\tgetSetting = function( name ){\n\t\tvar settings = this.props.settings;\n\n\t\tif( !settings || typeof settings[ name ] == 'undefined' )\n\t\t\treturn defaultSettings[ name ];\n\n\t\treturn settings[ name ];\n\t}\n;\n\nvar JsonTable = React.createClass({\n\tgetSetting: getSetting,\n\n\trender: function(){\n\t\tvar cols = this.normalizeColumns(),\n\t\t\tcontents = [this.renderRows( cols )]\n\t\t;\n\n\t\tif( this.getSetting('header') )\n\t\t\tcontents.unshift( this.renderHeader( cols ) );\n\n\t\tvar tableClass = this.props.className || this.getSetting( 'classPrefix' ) + 'Table';\n\n\t\treturn $.table({ className: tableClass }, contents );\n\t},\n\n\trenderHeader: function( cols ){\n\t\tvar me = this,\n\t\t\tprefix = this.getSetting( 'classPrefix' ),\n\t\t\theaderClass = this.getSetting( 'headerClass' ),\n\t\t\tcells = cols.map( function(col){\n\t\t\t\tvar className = prefix + 'Column';\n\t\t\t\tif( headerClass )\n\t\t\t\t\tclassName = headerClass( className, col.key );\n\n\t\t\t\treturn $.th(\n\t\t\t\t\t{ className: className, key: col.key, onClick: me.onClickHeader, \"data-key\": col.key },\n\t\t\t\t\tcol.label\n\t\t\t\t);\n\t\t\t})\n\t\t;\n\n\t\treturn $.thead({ key: 'th' },\n\t\t\t$.tr({ className: prefix + 'Header' }, cells )\n\t\t);\n\t},\n\n\trenderRows: function( cols ){\n\t\tvar me = this,\n\t\t\titems = this.props.rows,\n\t\t\tsettings = this.props.settings || {},\n\t\t\ti = 1\n\t\t;\n\n\t\tif( !items || !items.length )\n\t\t\treturn $.tbody({key:'body'}, [$.tr({key:'row'}, $.td({key:'column'}, this.getSetting('noRowsMessage') ))]);\n\n\t\tvar rows = items.map( function( item ){\n\t\t\tvar key = me.getKey( item, i );\n\t\t\treturn React.createElement(Row, {\n\t\t\t\tkey: key,\n\t\t\t\treactKey: key,\n\t\t\t\titem: item,\n\t\t\t\tsettings: settings,\n\t\t\t\tcolumns: cols,\n\t\t\t\ti: i++,\n\t\t\t\tonClickRow: me.onClickRow,\n\t\t\t\tonClickCell: me.onClickCell\n\t\t\t});\n\t\t});\n\n\t\treturn $.tbody({key:'body'}, rows);\n\t},\n\n\tgetItemField: function( item, field ){\n\t\treturn item[ field ];\n\t},\n\n\tnormalizeColumns: function(){\n\t\tvar getItemField = this.props.cellRenderer || this.getItemField,\n\t\t\tcols = this.props.columns,\n\t\t\titems = this.props.rows\n\t\t;\n\n\t\tif( !cols ){\n\t\t\tif( !items || !items.length )\n\t\t\t\treturn [];\n\n\t\t\treturn Object.keys( items[0] ).map( function( key ){\n\t\t\t\treturn { key: key, label: key, cell: getItemField };\n\t\t\t});\n\t\t}\n\n\t\treturn cols.map( function( col ){\n\t\t\tvar key;\n\t\t\tif( typeof col == 'string' ){\n\t\t\t\treturn {\n\t\t\t\t\tkey: col,\n\t\t\t\t\tlabel: col,\n\t\t\t\t\tcell: getItemField\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tif( typeof col == 'object' ){\n\t\t\t\tkey = col.key || col.label;\n\n\t\t\t\t// This is about get default column definition\n\t\t\t\t// we use label as key if not defined\n\t\t\t\t// we use key as label if not defined\n\t\t\t\t// we use getItemField as cell function if not defined\n\t\t\t\treturn {\n\t\t\t\t\tkey: key,\n\t\t\t\t\tlabel: col.label || key,\n\t\t\t\t\tcell: col.cell || getItemField\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tkey: 'unknown',\n\t\t\t\tname:'unknown',\n\t\t\t\tcell: 'Unknown'\n\t\t\t};\n\t\t});\n\t},\n\n\tgetKey: function( item, i ){\n\t\tvar field = this.props.settings && this.props.settings.keyField;\n\t\tif( field && item[ field ] )\n\t\t\treturn item[ field ];\n\n\t\tif( item.id )\n\t\t\treturn item.id;\n\n\t\tif( item._id )\n\t\t\treturn item._id;\n\n\t\treturn i;\n\t},\n\n\tshouldComponentUpdate: function(){\n\t\treturn true;\n\t},\n\n\tonClickRow: function( e, item ){\n\t\tif( this.props.onClickRow ){\n\t\t\tthis.props.onClickRow( e, item );\n\t\t}\n\t},\n\n\tonClickHeader: function( e ){\n\t\tif( this.props.onClickHeader ){\n\t\t\tthis.props.onClickHeader( e, e.target.dataset.key );\n\t\t}\n\t},\n\n\tonClickCell: function( e, key, item ){\n\t\tif( this.props.onClickCell ){\n\t\t\tthis.props.onClickCell( e, key, item );\n\t\t}\n\t}\n});\n\nvar Row = React.createClass({\n\tgetSetting: getSetting,\n\n\trender: function() {\n\t\tvar me = this,\n\t\t\tprops = this.props,\n\t\t\tcellClass = this.getSetting('cellClass'),\n\t\t\trowClass = this.getSetting('rowClass'),\n\t\t\tprefix = this.getSetting('classPrefix'),\n\t\t\tcells = props.columns.map( function( col ){\n\t\t\t\tvar content = col.cell,\n\t\t\t\t\tkey = col.key,\n\t\t\t\t\tclassName = prefix + 'Cell ' + prefix + 'Cell_' + key\n\t\t\t\t;\n\n\t\t\t\tif( cellClass )\n\t\t\t\t\tclassName = cellClass( className, key, props.item );\n\n\t\t\t\tif( typeof content == 'function' )\n\t\t\t\t\tcontent = content( props.item, key );\n\n\t\t\t\treturn $.td( {\n\t\t\t\t\tclassName: className,\n\t\t\t\t\tkey: key,\n\t\t\t\t\t\"data-key\": key,\n\t\t\t\t\tonClick: me.onClickCell\n\t\t\t\t}, content );\n\t\t\t})\n\t\t;\n\n\t\tvar className = prefix + 'Row ' + prefix +\n\t\t\t(props.i % 2 ? 'Odd' : 'Even')\n\t\t;\n\n\t\tif( props.reactKey )\n\t\t\tclassName += ' ' + prefix + 'Row_' + props.reactKey;\n\n\t\tif( rowClass )\n\t\t\tclassName = rowClass( className, props.item );\n\n\t\treturn $.tr({\n\t\t\tclassName: className,\n\t\t\tonClick: me.onClickRow,\n\t\t\tkey: this.props.reactKey\n\t\t}, cells );\n\t},\n\n\tonClickCell: function( e ){\n\t\tthis.props.onClickCell( e, e.target.dataset.key, this.props.item );\n\t},\n\n\tonClickRow: function( e ){\n\t\tthis.props.onClickRow( e, this.props.item );\n\t}\n});\n\nmodule.exports = JsonTable;\n"]},"metadata":{},"sourceType":"script"}