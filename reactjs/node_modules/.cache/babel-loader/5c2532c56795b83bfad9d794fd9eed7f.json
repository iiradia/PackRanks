{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\n\nvar propTypesFactory = require('prop-types/factory');\n\nvar React = require('react/lib/React');\n\nvar PropTypes = propTypesFactory(React.isValidElement);\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\n\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: PropTypes.func\n};\nvar loggedTypeFailures = {};\n\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n\n  return '';\n}\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\n\n\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n\n      return inputProps.valueLink.value;\n    }\n\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n\n      return inputProps.checkedLink.value;\n    }\n\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\nmodule.exports = LinkedValueUtils;","map":{"version":3,"sources":["/Users/mathew/EasyA/reactjs/node_modules/react-simplert/node_modules/react-dom/lib/LinkedValueUtils.js"],"names":["_prodInvariant","require","ReactPropTypesSecret","propTypesFactory","React","PropTypes","isValidElement","invariant","warning","hasReadOnlyValue","button","checkbox","image","hidden","radio","reset","submit","_assertSingleLink","inputProps","checkedLink","valueLink","process","env","NODE_ENV","_assertValueLink","value","onChange","_assertCheckedLink","checked","propTypes","props","propName","componentName","type","readOnly","disabled","Error","func","loggedTypeFailures","getDeclarationErrorAddendum","owner","name","getName","LinkedValueUtils","checkPropTypes","tagName","hasOwnProperty","error","message","addendum","getValue","getChecked","executeOnChange","event","requestChange","target","call","undefined","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactPropTypesSecret = require('./ReactPropTypesSecret');\nvar propTypesFactory = require('prop-types/factory');\n\nvar React = require('react/lib/React');\nvar PropTypes = propTypesFactory(React.isValidElement);\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  button: true,\n  checkbox: true,\n  image: true,\n  hidden: true,\n  radio: true,\n  reset: true,\n  submit: true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use checkedLink, you probably don\\'t want to use valueLink and vice versa.') : _prodInvariant('87') : void 0;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want to use value or onChange, you probably don\\'t want to use valueLink.') : _prodInvariant('88') : void 0;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. If you want to use checked or onChange, you probably don\\'t want to use checkedLink') : _prodInvariant('89') : void 0;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: PropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, 'prop', null, ReactPropTypesSecret);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : void 0;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;"]},"metadata":{},"sourceType":"script"}