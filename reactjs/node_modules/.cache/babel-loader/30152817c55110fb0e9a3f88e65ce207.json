{"ast":null,"code":"/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\nvar ReactComponentEnvironment = {\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n};\nmodule.exports = ReactComponentEnvironment;","map":{"version":3,"sources":["/Users/mathew/EasyA/reactjs/node_modules/react-simplert/node_modules/react-dom/lib/ReactComponentEnvironment.js"],"names":["_prodInvariant","require","invariant","injected","ReactComponentEnvironment","replaceNodeWithMarkup","processChildrenUpdates","injection","injectEnvironment","environment","process","env","NODE_ENV","module","exports"],"mappings":"AAAA;;;;;;;;AASA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,sBAAD,CAA5B;;AAEA,IAAIC,SAAS,GAAGD,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAIE,QAAQ,GAAG,KAAf;AAEA,IAAIC,yBAAyB,GAAG;AAC9B;;;;AAIAC,EAAAA,qBAAqB,EAAE,IALO;;AAO9B;;;;AAIAC,EAAAA,sBAAsB,EAAE,IAXM;AAa9BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBAAiB,EAAE,UAAUC,WAAV,EAAuB;AACxC,OAAC,CAACN,QAAF,GAAaO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,SAAS,CAAC,KAAD,EAAQ,uEAAR,CAAjD,GAAoIF,cAAc,CAAC,KAAD,CAA/J,GAAyK,KAAK,CAA9K;AACAI,MAAAA,yBAAyB,CAACC,qBAA1B,GAAkDI,WAAW,CAACJ,qBAA9D;AACAD,MAAAA,yBAAyB,CAACE,sBAA1B,GAAmDG,WAAW,CAACH,sBAA/D;AACAH,MAAAA,QAAQ,GAAG,IAAX;AACD;AANQ;AAbmB,CAAhC;AAuBAU,MAAM,CAACC,OAAP,GAAiBV,yBAAjB","sourcesContent":["/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar injected = false;\n\nvar ReactComponentEnvironment = {\n  /**\n   * Optionally injectable hook for swapping out mount images in the middle of\n   * the tree.\n   */\n  replaceNodeWithMarkup: null,\n\n  /**\n   * Optionally injectable hook for processing a queue of child updates. Will\n   * later move into MultiChildComponents.\n   */\n  processChildrenUpdates: null,\n\n  injection: {\n    injectEnvironment: function (environment) {\n      !!injected ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactCompositeComponent: injectEnvironment() can only be called once.') : _prodInvariant('104') : void 0;\n      ReactComponentEnvironment.replaceNodeWithMarkup = environment.replaceNodeWithMarkup;\n      ReactComponentEnvironment.processChildrenUpdates = environment.processChildrenUpdates;\n      injected = true;\n    }\n  }\n};\n\nmodule.exports = ReactComponentEnvironment;"]},"metadata":{},"sourceType":"script"}