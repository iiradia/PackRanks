{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilter = undefined;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _diacritics = require('./diacritics');\n\nvar trimString = function trimString(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\n\nvar defaulStringify = function defaulStringify(option) {\n  return option.label + ' ' + option.value;\n};\n\nvar createFilter = exports.createFilter = function createFilter(config) {\n  return function (option, rawInput) {\n    var _ignoreCase$ignoreAcc = _extends({\n      ignoreCase: true,\n      ignoreAccents: true,\n      stringify: defaulStringify,\n      trim: true,\n      matchFrom: 'any'\n    }, config),\n        ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,\n        ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,\n        stringify = _ignoreCase$ignoreAcc.stringify,\n        trim = _ignoreCase$ignoreAcc.trim,\n        matchFrom = _ignoreCase$ignoreAcc.matchFrom;\n\n    var input = trim ? trimString(rawInput) : rawInput;\n    var candidate = trim ? trimString(stringify(option)) : stringify(option);\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n      candidate = candidate.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = (0, _diacritics.stripDiacritics)(input);\n      candidate = (0, _diacritics.stripDiacritics)(candidate);\n    }\n\n    return matchFrom === 'start' ? candidate.substr(0, input.length) === input : candidate.indexOf(input) > -1;\n  };\n};","map":{"version":3,"sources":["/mnt/c/Users/Harry-PC/Documents/ProgrammingProjects/EasyA/node_modules/react-select/lib/filters.js"],"names":["Object","defineProperty","exports","value","createFilter","undefined","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_diacritics","require","trimString","str","replace","defaulStringify","option","label","config","rawInput","_ignoreCase$ignoreAcc","ignoreCase","ignoreAccents","stringify","trim","matchFrom","input","candidate","toLowerCase","stripDiacritics","substr","indexOf"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilter = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _diacritics = require('./diacritics');\n\nvar trimString = function trimString(str) {\n  return str.replace(/^\\s+|\\s+$/g, '');\n};\nvar defaulStringify = function defaulStringify(option) {\n  return option.label + ' ' + option.value;\n};\n\nvar createFilter = exports.createFilter = function createFilter(config) {\n  return function (option, rawInput) {\n    var _ignoreCase$ignoreAcc = _extends({\n      ignoreCase: true,\n      ignoreAccents: true,\n      stringify: defaulStringify,\n      trim: true,\n      matchFrom: 'any'\n    }, config),\n        ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,\n        ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,\n        stringify = _ignoreCase$ignoreAcc.stringify,\n        trim = _ignoreCase$ignoreAcc.trim,\n        matchFrom = _ignoreCase$ignoreAcc.matchFrom;\n\n    var input = trim ? trimString(rawInput) : rawInput;\n    var candidate = trim ? trimString(stringify(option)) : stringify(option);\n    if (ignoreCase) {\n      input = input.toLowerCase();\n      candidate = candidate.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = (0, _diacritics.stripDiacritics)(input);\n      candidate = (0, _diacritics.stripDiacritics)(candidate);\n    }\n    return matchFrom === 'start' ? candidate.substr(0, input.length) === input : candidate.indexOf(input) > -1;\n  };\n};"]},"metadata":{},"sourceType":"script"}