"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var GridRowCell = /** @class */ (function (_super) {
    __extends(GridRowCell, _super);
    function GridRowCell() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GridRowCell.prototype.render = function () {
        var cellClass = this.props.settings.cellClass;
        var className = this.props.settings.classPrefix + "Cell " + this.props.settings.classPrefix + "Cell_" + this.props.column.key;
        if (cellClass) {
            className = cellClass(className, this.props.column.key, this.props.row);
        }
        return React.createElement("td", { className: className, "data-key": this.props.column.key, onClick: this.onClick.bind(this, this.props.column.key) }, this.props.item);
    };
    GridRowCell.prototype.onClick = function (key, e) {
        if (this.props.onClickCell) {
            this.props.onClickCell(e, key, this.props.row);
        }
    };
    return GridRowCell;
}(React.Component));
exports.GridRowCell = GridRowCell;
//# sourceMappingURL=gridRowCell.js.map