{"version":3,"sources":["../src/ReactHover.js"],"names":["ReactHover","props","state","children","PropTypes","object","hoverComponentStyle","display","position","item","index","type","name","childrenWithProps","child","push","React","cloneElement","setVisibility","bind","getCursorPos","styles","map","renderItem","flag","updatedStyles","setState","e","cursorX","pageX","cursorY","pageY","options","followCursor","shiftX","shiftY","isNaN","top","left","Component","array","isRequired","className","string","Trigger","Hover"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Hover from './lib/Hover'\nimport Trigger from './lib/Trigger'\nimport PropTypes from 'prop-types'\n\nclass ReactHover extends Component {\n  static propTypes = {\n    children: PropTypes.array.isRequired,\n    options: PropTypes.object.isRequired,\n    className: PropTypes.string\n  }\n\n  constructor (props) {\n    super(props)\n    this.state = {\n      children: PropTypes.object,\n      hoverComponentStyle: {\n        display: 'none',\n        position: 'absolute'\n      }\n    }\n  }\n\n  renderItem (item, index) {\n    if (item.type.name === 'Trigger' || item.props.type === 'trigger') {\n      return (\n        <Trigger key={index}>\n          {item}\n        </Trigger>\n      )\n    } else if (item.type.name === 'hover' || item.props.type === 'hover') {\n      return (\n        <Hover key={index}>\n          {item}\n        </Hover>\n      )\n    }\n  }\n\n  render () {\n    const { hoverComponentStyle } = this.state\n    let childrenWithProps = []\n    for (let child of this.props.children) {\n      if (child.props) {\n        if (child.type.name === 'Trigger' || child.props.type === 'trigger') {\n          childrenWithProps.push(React.cloneElement(child, {\n            setVisibility: this.setVisibility.bind(this),\n            getCursorPos: this.getCursorPos.bind(this)\n          }))\n        } else if (child.type.name === 'Hover' || child.props.type === 'hover') {\n          childrenWithProps.push(React.cloneElement(child, {\n            styles: hoverComponentStyle,\n            setVisibility: this.setVisibility.bind(this),\n            getCursorPos: this.getCursorPos.bind(this)\n          }))\n        }\n      }\n    }\n\n    return (\n      <div>\n        {childrenWithProps.map((item, index) => this.renderItem(item, index))}\n      </div>\n    )\n  }\n\n  setVisibility (flag) {\n    let { hoverComponentStyle } = this.state\n    let updatedStyles = null\n    if (flag) {\n      updatedStyles = { ...hoverComponentStyle, display: 'block' }\n    } else {\n      updatedStyles = { ...hoverComponentStyle, display: 'none' }\n    }\n    this.setState({\n      hoverComponentStyle: updatedStyles\n    })\n  }\n\n  getCursorPos (e) {\n    const cursorX = e.pageX\n    const cursorY = e.pageY\n    let { options: { followCursor, shiftX, shiftY } } = this.props\n    let { hoverComponentStyle } = this.state\n    let updatedStyles = null\n    if (!followCursor) {\n      return\n    }\n    if (isNaN(shiftX)) {\n      shiftX = 0\n    }\n    if (isNaN(shiftY)) {\n      shiftY = 0\n    }\n    updatedStyles = { ...hoverComponentStyle, top: cursorY + shiftY, left: cursorX + shiftX }\n    this.setState({\n      hoverComponentStyle: updatedStyles\n    })\n  }\n}\n\nReactHover.Trigger = Trigger\nReactHover.Hover = Hover\n\nexport default ReactHover\n"],"file":"ReactHover.js"}