{"version":3,"sources":["components/ForgotPassword/static/images/icons/favicon.ico","components/Navbar/images/PackRanksLogo1.png","components/Bio/ProfileImages/HarshalPic.jpeg","components/Bio/ProfileImages/MathewPic.jpeg","components/Bio/ProfileImages/IshaanPic.jpeg","components/Bio/ProfileImages/AnthonyPic.jpeg","components/Login/static/images/icons/favicon.ico","components/Contact/images/icons/favicon.ico","components/SignUp/images/icons/favicon.ico","components/ResetPassword/images/icons/favicon.ico","components/Navbar/Navbar.jsx","components/Help/Instructions/Instruction.jsx","components/Home/Table.jsx","components/Home/GEP.jsx","components/Home/Dept.jsx","components/Home/FirstPrompt.jsx","components/Home/MainWelcome.jsx","components/Login/LoginPage.jsx","components/Bio/Bio.jsx","components/About/AboutPage.jsx","components/Help/FAQ/FAQ.jsx","components/Help/HelpPage.jsx","components/Contact/ContactPage.jsx","components/SignUp/SignUp.jsx","components/User/UserPage.jsx","components/Wishlist/Wishlist.jsx","components/Protected/ProtectedRoute.jsx","components/ForgotPassword/ForgotPass.jsx","components/Donate/Donate.jsx","components/ResetPassword/ResetPass.jsx","components/Major/CourseDisplay/MajorCourses.jsx","components/ForgotPassword/ForgotSuccess/ForgotSuccess.jsx","components/Major/Major.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","logout","bind","localStorage","token","ReactDOM","render","Nav","Link","id","className","href","document","getElementById","NavDropdown","title","Item","onClick","this","clear","Navbar","variant","Brand","src","logo","alt","width","height","target","fontSize","style","color","React","Component","Example","allowZeroExpanded","allowMultipleExpanded","RenderRow","props","setItem","JSON","stringify","keys","map","key","index","data","Checkbox","onChange","e","checked","getItem","currStorage","parse","concat","currS","i","length","course","Course","sem","Semester","section","Section","console","log","splice","checkDelete","overall_prof","data-for","data-tip","multiline","effect","place","type","undefined","fetch","method","body","course_data","then","response","json","success","toast","notify","duplicate","onWishlist","table","getKeys","Object","getHeader","keys_first","slice","keys_last","toUpperCase","getRowsData","items","row","uniq_id","Math","random","class","Table","striped","bordered","hover","varaint","GEP","getTable","state","courses","select_value","loading","numCourses_value","setState","headers","whichterm","gepLabels","option","label","gepValues","optionValue","value","gepFinal","for","margin","options","isSearchable","defaultValue","Button","name","size","Dept","filterOption","string","new_str","toLowerCase","dept_name","split","startsWith","getDepts","DeptList","courseTable","parseData","dept_list","level_min","level_max","inputValueMin","inputValueMax","minimum","maximum","dept_url","all_dept_list","departments","deptOptions","dept","deptValues","dept_code","value_i","deptFinal","placeholder","action","levelOptionsMin","level","levelOptionsMax","inputValue","onInputChange","handleInputChangeMin","noOptionsMessage","isClearable","handleInputChangeMax","FirstPrompt","gep","which_term","goClicked","goToGEPorDept","setTerm","MainWelcome","userwelcome","introducePackRanks","identity","jwt","profile_data","first_name","LoginPage","googleSuccess","onPwdChange","onEmailChange","handleLogin","last_name","email","password","login_email","event","preventDefault","validInput","pwd","RegExp","test","history","push","pathname","profile_obj","profileObj","givenName","familyName","data-validate","clientId","renderProps","buttonText","onSuccess","onFailure","googleFailure","cookiePolicy","withRouter","Bio","IshaanPicture","margins","HarshalPicture","MathewPicture","AnthonyPicture","AboutPage","to","HelpPage","ContactPage","phone_no","message","re_captcha","handleSubmit","onFirstNameChange","onLastNameChange","onPhoneChange","onMessageChange","onReCaptcha","msg","charSet","content","rel","onSubmit","htmlFor","sitekey","SignUp","confirmpassword","onPasswordChange","onConfirmChange","confirm_pwd","UserPage","viewWishlist","Wishlist","removeCourses","renderWishlistTerms","term_div","appendChild","createElement","setAttribute","cToDelete","currDelete","currSem","currentTermArray","courseIdx","currCourse","currProf","currSection","forceUpdate","wishlist","innerHTML","ProtectedRoute","component","ForgotPass","handleReset","redirect","catch","ResetPass","handleResetPass","match","params","MajorCourses","url","term","num_courses","displayCourses","loadCourseTable","courseSelected","course_split","course_num","coursedata","ForgotSuccess","sendHome","sendRetry","App","liftStateUp","exact","path","Boolean","window","location","hostname","StrictMode","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.145ee820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/favicon.7d4140c7.ico\";","module.exports = __webpack_public_path__ + \"static/media/PackRanksLogo1.990200e9.png\";","module.exports = __webpack_public_path__ + \"static/media/HarshalPic.2df6f364.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/MathewPic.03e66338.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/IshaanPic.c303ec08.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/AnthonyPic.e1321465.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/favicon.7d4140c7.ico\";","module.exports = __webpack_public_path__ + \"static/media/favicon.7d4140c7.ico\";","module.exports = __webpack_public_path__ + \"static/media/favicon.7d4140c7.ico\";","module.exports = __webpack_public_path__ + \"static/media/favicon.7d4140c7.ico\";","import React from 'react';\r\n//import NavbarTitle from './NavbarTitle';\r\n//import NavbarLinks from './NavbarLinks';\r\nimport { Navbar, Nav, NavItem, NavDropdown } from 'react-bootstrap';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport './css/navbar.css';\r\n//import LoginPage from './Login/LoginPage';\r\nimport {BrowserRouter as Router, Switch, Route, Link} from 'react-router-dom';\r\nimport ReactDOM from 'react-dom';\r\nimport jwt from 'jwt-decode';\r\nimport logo from'./images/PackRanksLogo1.png'\r\n\r\nclass Navigation extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.logout = this.logout.bind(this);\r\n\r\n    }\r\n    \r\n    componentDidMount() {\r\n        //console.log(localStorage.token)\r\n        if (localStorage.token) {\r\n\r\n            //If logged in, render contact with vertical line.\r\n            ReactDOM.render(\r\n            <Nav.Link id=\"contactlink\" className=\"loggedIn\" href=\"/contact\">Contact</Nav.Link>,\r\n            document.getElementById(\"contact\")    \r\n            )\r\n            \r\n            //Render dropdown with appropriate account links.\r\n            ReactDOM.render(\r\n                <div>\r\n                    <NavDropdown id=\"homepagelink\" title=\"My Account\">\r\n                        <NavDropdown.Item id=\"homepagelink\" href=\"/homepage\">Dashboard</NavDropdown.Item>\r\n                        <NavDropdown.Item id=\"wishlistlink\" href=\"/wishlist\">Wishlist</NavDropdown.Item>\r\n                        <NavDropdown.Item id=\"signoutlink\" href=\"/\" onClick={this.logout}>Logout</NavDropdown.Item>\r\n                    </NavDropdown>\r\n                </div>,\r\n                document.getElementById(\"homepage\")\r\n            )\r\n        }\r\n        else {\r\n\r\n            //if not logged in, render login and contact w/o vertical line\r\n            ReactDOM.render(\r\n                <Nav.Link id=\"loginlink\" href=\"/login\">Login</Nav.Link>,\r\n                document.getElementById(\"loginnavlink\")\r\n            );\r\n            ReactDOM.render(\r\n                <Nav.Link id=\"contactlink\" className=\"loggedOut\" href=\"/contact\">Contact</Nav.Link>,\r\n                document.getElementById(\"contact\")\r\n            )\r\n        }\r\n    }\r\n    logout() {\r\n        localStorage.clear();\r\n    }\r\n    render() {\r\n\r\n\r\n        return(\r\n            <Navbar className=\"navbar navbar-expand-lg navbar-dark static-top\" variant=\"dark\">\r\n                <div className=\"container\">\r\n                    \r\n                    <Navbar.Brand id=\"packRanks\" href=\"/\">\r\n                        <img id=\"logoNav\" src={logo} alt={\"Logo\"} width={50} height={50}/>\r\n                        PackRanks\r\n                    </Navbar.Brand>\r\n                    <Nav className=\"navbar-nav ml-auto\">\r\n\r\n                    <Nav.Link id=\"homelink\" href=\"/\">Home</Nav.Link>\r\n                        \r\n                        <Nav.Link id=\"aboutlink\" href=\"/about\">About</Nav.Link>\r\n                        \r\n\r\n                        <Nav.Link id=\"instructionlink\" href=\"/help\">Help</Nav.Link>\r\n                        {/*<Nav.Link id=\"donateLink\" href=\"/donate\">Donate</Nav.Link>*/}\r\n                        {/* Where to render contact */ }\r\n                        <div id=\"contact\">\r\n                        </div>\r\n                        \r\n                        {/* Where to render account homepage dropdown links. */}\r\n                        <div id=\"homepage\">\r\n\r\n                        </div>\r\n                        {/*<Nav.Link id=\"loginlink\" href=\"/login\">Login</Nav.Link>*/}\r\n                        <div id=\"loginnavlink\">\r\n\r\n                        </div>\r\n\r\n                    </Nav>\r\n                    \r\n                    <div id=\"githubPackRanksDiv\">\r\n                            <a href=\"https://github.com/iiradia/PackRanks\" target = \"_blank\"> \r\n                                <GitHubIcon id=\"githubPackRanks\" fontSize=\"large\" style={{ color: \"white\"}}/>\r\n                            </a>\r\n                        </div>\r\n                </div>\r\n            </Navbar>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default Navigation; /** Default export since this file only contains a single\r\n                        component. All code in this file is necessary for the\r\n                        parent to function. Named export would not be of benefit in this case.*/","import React from 'react';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport \"./Instructions.css\";\n// Demo styles, see 'Styles' section below for some notes on use.\n\n \nexport default function Example() {\n    return (\n        <div id=\"instructionDiv\">\n        <Accordion allowZeroExpanded= {true} allowMultipleExpanded={true}>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    To find GEPs\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <div id=\"divInstruction\">\n                        <p id=\"helpText\">1. First, select the term of the course you are looking for</p>\n                        <p id=\"helpText\">2. Then, select \"GEP\" from the second dropdown box</p>\n                        <p id=\"helpText\">3. Next, from the third dropdown, select which GEP you wish to take. You may also search for a GEP in the same dropdown.</p>\n                        <p id=\"helpText\">4. Now, select the maximum number of courses you would like to view. Note you may not see all of the courses that you request to view since some courses have limited sections or a small number of professors.</p>\n                        <p id=\"helpText\">5. Finally, click the \"Select\" button to view a list of the easiest courses in a specific GEP based on the options you chose.</p>\n                    </div>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    To Search by Department\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <div id=\"divInstruction\">\n                        <p id=\"helpText\">1. Select the term of the course you are looking for</p>\n                        <p id=\"helpText\">2. Select \"Department\" from the second dropdown box</p>\n                        <p id=\"helpText\">3. Select the department of your desired course. Since this is a very large list, we recommend searching for the department within the same dropdown.</p>\n                        <p id=\"helpText\">4. Next, choose the course level range of the courses you would like to view. You may select the preset dropdown options OR type in a custom course level range (such as \"112\" to \"365\").</p>\n                        <p style={{'font-size':'14px'}}><em>*PROTIP*: to view the easiest sections/professors for one specific course, type in the same course number for both boxes. (Ex: to view only MA 341 sections and professors, select the \"Mathematics\" department and type \"341\" for both the minimum and maximum course level range).</em></p>\n                        <p style={{'font-size':'14px'}}><em>*PROTIP*:  Choose the \"ANY\" option for both minimum and maximum course levels ranges to view the easiest courses of that specific department.</em></p>\n                        <p id=\"helpText\">5. Now, select the maximum number of courses you would like to view. Note you may not see all of the courses that you request to view since some courses have limited sections or a small number of professors.</p>\n                        <p id=\"helpText\">6. Finally, click the \"Select\" button to view a list of the easiest courses in a specific Department or for a specific course based on the options you chose.</p>\n                    </div>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    Using the Wishlist\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                        <p id=\"helpText\">Note: You must login or create an account to use the Wishlist feature</p>\n                        <p id=\"helpText\">1. Follow the above steps to view GEP or Department specific courses</p>\n                        <p id=\"helpText\">2. Once you are viewing a list of easiest courses, and you have logged into your account, you should see a column called \"Add to Wishlist\" with an \"Add to Wishlist\" option for every course in the list.</p>\n                        <p id=\"helpText\">3. Click \"Add to Wishlist\" for any course in the list to add it to your Wishlist.</p>\n                        <p id=\"helpText\">4. If a specific course section with a certain professor is already on your Wishlist, you will receive a notification telling you so.</p>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    To View Your Wishlist\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                        <p id=\"helpText\">Note: You must login or create an account to use the Wishlist feature</p>\n                        <p id=\"helpText\">1. Follow the above steps to view GEP or Department specific courses</p>\n                        <p id=\"helpText\">2. Once you are viewing a list of easiest courses, and you have logged into your account, you should see a column called \"Add to Wishlist\" with an \"Add to Wishlist\" option for every course in the list.</p>\n                        <p id=\"helpText\">Your Wishlist is separated based on the term of the course. These courses will be saved to your account so that you can view them anytime, even if you logout. They will remain on your Wishlist until you remove them (See To Remove Courses From Wishlist).</p>\n                        <p id=\"helpText\">4. If a specific course section with a certain professor is already on your Wishlist, you will receive a notification telling you so.</p>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    To Remove Courses From Wishlist\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                        <p id=\"helpText\">Note: You must login or create an account to use the Wishlist feature</p>\n                        <p id=\"helpText\">1. View your Wishlist by clicking on the My Account tab on the navigation bar, and then on \"Wishlist\" within the dropdown.</p>\n                        <p id=\"helpText\">2. Once you are viewing a list of easiest courses, and you have logged into your account, you should see a column called \"Add to Wishlist\" with an \"Add to Wishlist\" option for every course in the list.</p>\n                        <p id=\"helpText\">3. Click the checkbox under the \"Remove\" column for any courses you wish to remove.</p>\n                </AccordionItemPanel>\n            </AccordionItem> \n        </Accordion>\n        </div>\n    );\n}\n\n\n","import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport \"./css/table.css\"\nimport ReactTooltip from 'react-tooltip';\nimport {Checkbox} from \"@material-ui/core\";\nimport ReactDOM from 'react-dom';   \nimport Instruction from '../Help/Instructions/Instruction.jsx'\n\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css'\nimport HelpIcon from '@material-ui/icons/Help';\n\nfunction hsl_col_perc(percent, start, end) {\n    var a = percent / 100,\n        b = (end - start) * a,\n        c = b + start;\n  \n    // Return a CSS HSL string\n    return ('hsl('+c+', 100%, 50%)');\n}\n\n//when delete checkbox is checked\nconst checkDelete= (props) => {\n    //If item was checked, process\n    if (props.checked) {\n\n        //if there are already elements in storage, add it\n        if (localStorage.getItem(\"checkedCourses\")) {\n            let currStorage = JSON.parse(localStorage.getItem(\"checkedCourses\"));\n            currStorage = currStorage.concat(props.data);\n            localStorage.setItem(\"checkedCourses\", JSON.stringify(currStorage));\n        }\n        //else, make it the first item in storage\n        else {\n            let currS = [props.data]\n            localStorage.setItem(\"checkedCourses\", JSON.stringify(currS));\n        }\n    }\n    //if unchecked, remove from localstorage\n    else {\n        let currS = JSON.parse(localStorage.getItem(\"checkedCourses\"));\n        for (var i = 0; i < currS.length; i++) {\n            let course = props.data.Course;\n            let sem = props.data.Semester;\n            let section = props.data.Section;\n            if (course[0] === currS[i].Course[0] && sem===currS[i].Semester && section===currS[i].Section) {\n                console.log(\"remove\")\n                currS.splice(i, 1);\n                break;\n            }\n        }\n        localStorage.setItem(\"checkedCourses\", JSON.stringify(currS));\n    }\n    console.log(\"set to\")\n    console.log(localStorage.getItem(\"checkedCourses\"));\n}\n\n//when wishlist button is pressed\nconst onWishlist= (props) => {\n    //console.log(props);\n    let url = \"http://packranks-backend.herokuapp.com/addWishlist\"\n    fetch( \n        url, {\n            method: \"POST\",\n            body: JSON.stringify(\n                {course_data:props,\n                token: localStorage.token\n                }\n            )\n        }\n    ).then(\n       response => response.json()\n    ).then(\n    (data) => {\n        if (data.success) {\n            toast.notify(<h5 id=\"successWish\">Successfully added course to your wishlist!</h5>)\n        }\n        else {\n            if (data.duplicate) {\n                toast.notify(<h5 style={{color: '#cc0000'}}>This course is already on your wishlist!</h5>)\n            }\n            else {\n                toast.notify(<h5 style={{color: '#cc0000'}}>Failed to add course to your wishlist.</h5>)            }\n        }\n    })\n}\n\n// Put data into each row \nconst RenderRow = (props) =>{\n    //console.log(props);\n    localStorage.setItem(\"checkedCourses\", JSON.stringify([]));\n    return props.keys.map((key, index)=>{\n\n        //Use this to generate a unique id for table rows\n        var uniq_id = props.data[\"Semester\"] +  props.data[\"Catalog Link\"][0] + props.data[\"RateMyProfessor Link\"][0] + props.data[\"Section\"];\n        //console.log(index);\n        if (key === \"Delete\") {\n            return <td><Checkbox \n                        style={{color: '#cc0000'}}\n                        onChange={e=>checkDelete(\n                            {\"data\":props.data,\n                        \"checked\":e.target.checked}\n                            )}/>\n                    </td>\n        }\n        /* Check if key is professor */\n        else if (key === \"RateMyProfessor Link\" || key === \"Location\" || key===\"Catalog Link\") {\n\n            /* If there is no link, just return professor name. */\n            if (props.data[key][1] === 'None') {\n                return <td key={props.data[key][0]}><strong>{props.data[key][0]}</strong></td>\n            }\n\n            else { \n                /* Else, return hyperlink that opens in new tab. \n                */\n                if(key === \"RateMyProfessor Link\"){\n                    const overall_prof = \"Quality: \" + props.data[key][2] + \" <br/>Difficulty: \" + props.data[key][3]\n                    return <td key={props.data[key][0]}>\n                                <a id=\"tablelinks\" className=\"tablelinks\" href={props.data[key][1]} target=\"_blank\" data-for=\"ctool\" data-tip={overall_prof}>\n        \n                                    <strong>{props.data[key][0]}</strong>\n                                    <div id=\"cdiv\">\n                                        <ReactTooltip id=\"ctool\" multiline={true} effect=\"solid\" place=\"top\"/> \n                                    </div>\n                                </a>\n                            </td>\n                }\n                \n                else{\n                    return <td key={props.data[key][0]}>\n                            <a id=\"tablelinks\" className=\"tablelinks\" href={props.data[key][1]} target=\"_blank\">\n                                <strong>{props.data[key][0]}</strong>\n                            </a>\n                        </td>\n                }\n            }\n        }   \n        //if section and user is authenticated, show option for adding to wishlist\n        //IMPLEMENTED below\n        /* If normal element, return normal table */\n        else if(key === \"wishlist\" && props.type !== \"homepage\"){\n\n            //if user is logged in, give option for adding to wishlist\n            if (localStorage.token!==undefined) {\n                return <td key={props.data[key]} id=\"sectionLink\">\n                        <a id=\"wishlistN\" onClick= {() => {onWishlist(props.data)}}>\n                            Add to Wishlist\n                        </a>  \n                    </td>\n            }\n\n            //if user is not logged in, prompt them to login to use feature\n            else {\n                return <td key={props.data[key]} id=\"sectionLink\">\n                    <a id=\"wishlistN\" href=\"/login\">Login</a>\n                </td>\n            }\n        }\n\n        else if (key===\"Rating\") {\n            let currRating = props.data[key];\n            //console.log(keyColor);\n            return <td id=\"ratingTable\" key={props.data[key]}><strong>{props.data[key]}</strong></td>\n        }\n        else{\n            return <td key={props.data[key]}><strong>{props.data[key]}</strong></td>\n        }\n    })\n   }\n\nclass table extends React.Component {\n \n    \n    constructor(props){\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.getRowsData = this.getRowsData.bind(this);\n        this.getKeys = this.getKeys.bind(this);\n\n        //reset checked courses to empty, this ensures that the courses\n        //are properly removed.\n        localStorage.setItem(\"checkedCourses\", JSON.stringify([]));\n    }\n    componentDidMount() {\n        if (this.props.type !== \"homepage\") {\n            ReactDOM.render(\n                <p id=\"bugFlawMsg\" class=\"lead\">\n                    If you notice any bugs or flaws in our product, please contact us using the link at the top right of this page!\n                </p>,\n                document.getElementById(\"renderContactForBugs\")\n            )\n        }\n    }\n    // Gets the keys of the whole table \n    getKeys = function(){\n        return Object.keys(this.props.data[0]);\n    }\n    \n    // Gets the headers of table from the keys \n    getHeader = function(){\n        var keys = this.getKeys();\n\n        if (this.props.type === \"homepage\") {\n            var delHeader = [\"Delete\"];\n            keys=delHeader.concat(keys);\n        }\n        else {\n        //else if (localStorage.token!==undefined){ \n            var wishlistHed = [\"wishlist\"];\n            let keys_first = keys.slice(0, 5);\n            let keys_last = keys.slice(5, keys.length);\n            keys = keys_first.concat(wishlistHed, keys_last);\n            //keys = wishlistHed.concat(keys);\n        //} \n        }\n        return keys.map((key, index)=>{\n            //if rating, show help\n            let help_rating = \"90-100 = Very Likely A<br/>80-90 = EasyA<br/>70-80 = You get what you put in<br/>60-70 = Avoid if possible<br/><60 = Avoid\";\n            if (key === \"Rating\") {\n                return <th key={key}>{key.toUpperCase()}<HelpIcon data-for=\"ctool\" data-tip={help_rating}/>\n                <ReactTooltip id=\"ctool\" multiline={true} effect=\"solid\" place=\"top\"/> \n                </th>\n            }\n            else {\n                return <th key={key}>{key.toUpperCase()}</th>\n            }\n        })\n    }\n    \n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        \n        {/* If homepage, add delete option.*/}\n        if(this.props.type === \"homepage\") {\n            var delHeader = [\"Delete\"];\n            keys=delHeader.concat(keys);\n            for (let i = 0; i < items.length; i++) {\n                items[\"Delete\"] = \"\";\n            }\n        }\n        else {\n        //else if (localStorage.token!==undefined){\n            var wishlistHed = [\"wishlist\"];\n            let keys_first = keys.slice(0,5);\n            let keys_last = keys.slice(5,keys.length);\n            keys = keys_first.concat(wishlistHed, keys_last);\n            //keys=wishlistHed.concat(keys);\n            for (let i = 0; i < items.length; i++) {\n                items[\"wishlist\"] = \"\";\n            }\n        }\n        //}\n        return items.map((row, index)=>{\n            let uniq_id = row[\"Catalog Link\"][0] + row[\"RateMyProfessor Link\"][0] + row[\"Section\"] + row[\"Semester\"];\n            if (uniq_id === \"None\") {\n                uniq_id = Math.random();\n            }\n            //console.log(uniq_id);\n          return <tr key={uniq_id}><RenderRow key={uniq_id} data={row} keys={keys} type={this.props.type}/></tr>\n        \n        })\n      }\n\n    render() {\n\n        return (\n        <div>\n            <Table striped bordered hover varaint = \"dark\">\n                <thead>\n                    <tr>{this.getHeader()}</tr>\n                </thead>\n                <tbody>\n                    {this.getRowsData()}\n                </tbody>\n            </Table>\n            <div id=\"renderContactForBugs\">\n            </div>\n        </div>\n    \n     );\n    }\n   }\n\n\nexport default table; ","import React from 'react';\nimport Select from 'react-select';\nimport Table from \"./Table\";\nimport ReactDOM from \"react-dom\";\nimport './css/gep.css'\nimport {Button} from 'react-bootstrap';\n\nclass GEP extends React.Component {\n\n    constructor() {\n        super();\n        this.getTable = this.getTable.bind(this)\n\n        this.state = {\n            courses: null,\n            select_value: null,\n            loading: false,\n            numCourses_value: 5\n        };\n\n    }\n\n    /*renderTable() {\n        this.setState({\n            loading: false\n        },\n        ReactDOM.render(\n            <Table data={this.state.courses}/>,\n            document.getElementById(\"id_table\")\n        ))\n    }*/\n\n    getTable() {\n        const GEP = this;\n        let url = \"http://packranks-backend.herokuapp.com/gep\";\n        this.setState({loading: true})\n        fetch( \n            url, {\n                method: \"GET\",\n                //headers: {\"GEP\": document.getElementById(\"gep_list_select\").value, \"term\": this.props.whichterm}\n                headers: {\"GEP\": this.state.select_value, \"num_courses\": this.state.numCourses_value, \"term\": this.props.whichterm}\n           }\n        ).then(\n           response => response.json()\n        ).then(\n            data => this.setState({\n                courses: data\n            },\n            () => {\n                \n                if (!this.state.courses || this.state.courses.length < 1) {\n                    ReactDOM.render(<p id=\"tableNoteMsg\" class=\"lead\"><em>Select a GEP to view the course table.</em></p>,\n                    document.getElementById(\"tableNote\"))\n                }\n                else {\n                    ReactDOM.render(<br/>,\n                    document.getElementById(\"tableNote\"))\n                    ReactDOM.render(<Table data={this.state.courses} />, document.getElementById('id_table'))\n                }\n            }\n            )\n        )\n    }\n\n    render() {\n        const gepOptions = ['Health and Exercise Studies', 'Humanities', 'Interdisciplinary Perspectives', \n                            'Mathematical Sciences', 'Natural Sciences', 'Social Sciences', 'US Diversity',\n                            'Additional Breadth', 'Visual and Performing Arts'];\n        const gepLabels = gepOptions.map((option) => (\n            {label: option}\n        ));\n\n        const gepOptionValues = [\"HES\", \"HUM\", \"IDP\", \"MATH\", \"SCI\", \"SS\", \"USD\", \"ADDTL\", \"VPA\"];\n        const gepValues = gepOptionValues.map((optionValue) => (\n            {value: optionValue}\n        ));\n\n        const gepFinal = [];\n        for (var i = 0; i < gepLabels.length; i++) {\n            gepFinal[i] = {label: gepLabels[i].label,\n                           value: gepValues[i].value}\n        }\n\n        const numCourses = [\n            {label: 5, value: 5}, \n            {label: 6, value: 6},\n            {label: 7, value: 7},\n            {label: 8, value: 8},\n            {label: 9, value: 9},\n            {label: 10, value:10}\n        ]\n\n        if(this.state.loading) {\n            this.setState({loading:false})\n            ReactDOM.render(\n                <p id=\"loadingMsg\" class=\"lead\">Loading...</p>,\n                document.getElementById(\"tableNote\")\n            )\n        }\n\n        return(\n            <div>\n                <div id=\"type\" class=\"text-center\">\n                    <h2 class=\"mt-5\">Select a GEP</h2>\n                    <label for=\"typeofgep\" class=\"lead\"><strong>Please select the type of GEP you are looking for.</strong></label>\n                    {/* selectable options for GEPs */}\n                    {/* <GEPList /> */}\n                    <div id=\"typeofgep\" style={{width:\"300px\", margin:\"0 auto\"}}>\n                        <Select className=\"gepSelect\"\n                                id='gep_list_select' \n                                options={gepFinal} \n                                //onChange={this.setState({select_value: document.getElementById('gep_list_select').value})}\n                                onChange={optionValue => this.setState({select_value: optionValue.value})}\n                        />\n                    </div>\n\n                    {/* Asks user how many courses they would like to view */}\n                    <label for=\"howmanycourses\" class=\"lead\"><strong>How many courses would you like to view?</strong></label>\n                    <div id=\"howmanycourses\" style={{width:\"300px\", margin:\"0 auto\"}}>\n                        <Select className=\"numCourseSelect\"\n                                id='num_course_select' \n                                options={numCourses}\n                                isSearchable={false}\n                                defaultValue={[{label:5, value:5}]}\n                                onChange={optionValue => this.setState({numCourses_value: optionValue.value})}\n                        />\n                    </div>\n                    {/* {console.log(this.state.select_value)} */}\n                    {/* button to select a specific GEP TODO: implement onclick */}\n                    <div id=\"whichgepdiv\">\n                        <Button\n                            class=\"btn btn-danger\" \n                            id=\"whichgep\" \n                            name=\"whichgep\" \n                            onClick={this.getTable}\n                            size=\"lg\">\n                            Select\n                        </Button>\n                    </div>\n                    \n                </div>\n\n                <div id =\"tableNote\">\n                </div>\n                <div id = \"id_table\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GEP;","import React from 'react';\r\nimport Select from 'react-select';\r\nimport ReactDOM from 'react-dom';\r\nimport Table from \"./Table\";\r\nimport './css/dept.css';\r\n//import Creatable from 'react-select/lib/Creatable';\r\nimport './css/courselevel.css'; \r\nimport {Button} from \"react-bootstrap\";\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nclass Dept extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getDepts = this.getDepts.bind(this)\r\n        this.DeptList = this.DeptList.bind(this)\r\n        this.courseTable = this.courseTable.bind(this)\r\n        this.parseData = this.parseData.bind(this)\r\n        this.filterOption = this.filterOption.bind(this)\r\n\r\n        this.state = {\r\n            dept_list: null,\r\n            courses: null,\r\n            select_value: null,\r\n            level_min: \"ANY\", \r\n            level_max: \"ANY\",  \r\n            loading: false,\r\n            inputValueMin: \"\",  //new\r\n            inputValueMax: \"\" , //new\r\n            numCourses_value: 5, \r\n        }\r\n        /* Call depts function */\r\n        this.getDepts();\r\n    }\r\n\r\n\r\n    parseData(data) {\r\n        console.log(data);\r\n        if (data.length > 0) {\r\n\r\n            if (data.length === 1 && data[0] === \"Min>Max\") {\r\n                ReactDOM.render(<h3>Level minimum cannot be greater than maximum.</h3>\r\n                    , document.getElementById('id_dept_table'))\r\n            }\r\n            else if (data.length===1 && data[0] === \"NotNumeric\") {\r\n                ReactDOM.render(<h3>Minimum and maximum values must be positive integers between 100 and 899.</h3>,\r\n                    document.getElementById('id_dept_table'))\r\n            }\r\n            else {\r\n                this.setState({\r\n                    courses: data\r\n                    },\r\n                    () => {\r\n                        ReactDOM.render(<br/>,\r\n                            document.getElementById(\"tableNote\"))\r\n\r\n                        ReactDOM.render(<Table data={this.state.courses} />,\r\n                        document.getElementById('id_dept_table')\r\n                        )\r\n                    }\r\n                ) \r\n            }\r\n        }\r\n        else {\r\n            let minimum = this.state.level_min;\r\n            let maximum = this.state.level_max;\r\n            if (minimum === \"ANY\") {\r\n                minimum = \"100\";\r\n            }\r\n            if (maximum === \"ANY\") {\r\n                maximum = \"899\";\r\n            }\r\n            //Check if user has selected any dept option\r\n            if (this.state.select_value === null) {\r\n                //If not, tell user to pick a dept.\r\n                ReactDOM.render(\r\n                    <h3>Please select a department.</h3>,\r\n                    document.getElementById('id_dept_table')\r\n                )\r\n            }\r\n            //If so, explain no results.\r\n            else {\r\n\r\n            \r\n                ReactDOM.render(\r\n                    <h3>There is no course in {this.state.select_value} offered between level {minimum} and {maximum}.</h3>,\r\n                    document.getElementById('id_dept_table')\r\n                )\r\n            }\r\n        }    \r\n    }\r\n    courseTable() {\r\n        const Dept = this;\r\n        let dept_url = \"http://packranks-backend.herokuapp.com/dept\";\r\n        this.setState({loading:true})\r\n\r\n        //new\r\n        /* Quadruple if-block to call using correct states */\r\n        if (this.state.inputValueMin !== \"\" && this.state.inputValueMax !== \"\") {\r\n            //console.log(\"setting inputValueMax state\")\r\n            this.setState({level_min: this.state.inputValueMin});\r\n            this.setState({level_max: this.state.inputValueMax});\r\n            fetch(\r\n                dept_url, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Dept\": this.state.select_value,\r\n                        \"term\": this.props.whichterm,\r\n                        \"level_min\": this.state.inputValueMin,\r\n                        \"level_max\": this.state.inputValueMax,\r\n                        \"num_courses\": this.state.numCourses_value\r\n                    }\r\n            }\r\n            ).then(\r\n            response => response.json()\r\n            ).then(\r\n                //Ternary operator that checks whether course is offered or not.\r\n                data => this.parseData(data)\r\n            )\r\n        } else if (this.state.inputValueMin !== \"\") {\r\n            this.setState({level_min: this.state.inputValueMin});\r\n            fetch(\r\n                dept_url, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Dept\": this.state.select_value,\r\n                        \"term\": this.props.whichterm,\r\n                        \"level_min\": this.state.inputValueMin,\r\n                        \"level_max\": this.state.level_max,\r\n                        \"num_courses\": this.state.numCourses_value\r\n                    }\r\n            }\r\n            ).then(\r\n            response => response.json()\r\n            ).then(\r\n                //Ternary operator that checks whether course is offered or not.\r\n                data => this.parseData(data)\r\n            )\r\n        } else if (this.state.inputValueMax !== \"\") {\r\n            this.setState({level_max: this.state.inputValueMax});\r\n            fetch(\r\n                dept_url, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Dept\": this.state.select_value,\r\n                        \"term\": this.props.whichterm,\r\n                        \"level_min\": this.state.level_min,\r\n                        \"level_max\": this.state.inputValueMax,\r\n                        \"num_courses\": this.state.numCourses_value\r\n                    }\r\n            }\r\n            ).then(\r\n            response => response.json()\r\n            ).then(\r\n                //Ternary operator that checks whether course is offered or not.\r\n                data => this.parseData(data)\r\n            )\r\n        } else {\r\n            fetch(\r\n                dept_url, {\r\n                    method: \"GET\",\r\n                    headers: {\r\n                        \"Dept\": this.state.select_value,\r\n                        \"term\": this.props.whichterm,\r\n                        \"level_min\": this.state.level_min,\r\n                        \"level_max\": this.state.level_max,\r\n                        \"num_courses\": this.state.numCourses_value\r\n                    }\r\n            }\r\n            ).then(\r\n            response => response.json()\r\n            ).then(\r\n                //Ternary operator that checks whether course is offered or not.\r\n                data => this.parseData(data)\r\n            )\r\n        }\r\n        //new\r\n    }\r\n\r\n    /* Get List of departments and render select component */\r\n    getDepts() {\r\n        const Dept = this;\r\n        let url = \"http://packranks-backend.herokuapp.com/getdepts\";\r\n\r\n        //ToDo: Load dynamically, only bring in 20 depts at a time in order to save time with Flask request \r\n        return fetch( \r\n            url, {\r\n                method: \"GET\"\r\n           }\r\n        ).then(\r\n            response => response.json() // keep here (maybe)\r\n        ).then(\r\n            (data) => {this.setState({all_dept_list: data},\r\n                () => ReactDOM.render(this.DeptList(), document.getElementById('deptlist'))\r\n            )}\r\n        )\r\n    }\r\n\r\n    filterOption = ({ label, value, data }, string) => {\r\n\r\n        let new_str = string.toLowerCase();\r\n        let dept_name = label.split(\" - \")[1];\r\n\r\n        if(label.toLowerCase().startsWith(new_str)){\r\n            return label\r\n        }\r\n        else if (dept_name.toLowerCase().startsWith(new_str))\r\n        {\r\n            return label\r\n        }\r\n      };\r\n    \r\n    /* Return select component with list of departments */\r\n    DeptList(){\r\n\r\n        // Returning the list of a default value \r\n            const departments = this.state.all_dept_list;\r\n            const deptOptions = departments.dept.map((dept) => (\r\n                {label: dept}\r\n            ));\r\n            const deptValues = departments.dept_code.map((value_i) => (\r\n                {value: value_i}\r\n            ));\r\n            const deptFinal = [];\r\n            for (var i = 0; i < deptOptions.length; i++) {\r\n                deptFinal[i] = {label: deptOptions[i].label,\r\n                                value: deptValues[i].value}\r\n            }\r\n\r\n\r\n            return (\r\n            <div className=\"app\">\r\n                <div className=\"container\">\r\n                    <div style={{width:\"400px\", margin:\"0 auto\"}}>\r\n                        <Select className=\"deptSelect\"\r\n                                id='dept_list_select' \r\n                                options={deptFinal} \r\n                                onChange={dept => {\r\n                                    this.setState({select_value:dept.value})\r\n                                }}\r\n                                placeholder=\"Search or Select\"\r\n                                filterOption = {this.filterOption}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            )\r\n\r\n \r\n    };\r\n\r\n    //new\r\n    handleInputChangeMin(inputValueMin, action) {\r\n        if (action.action !== \"input-blur\" && action.action !== \"menu-close\") {\r\n            console.log({ inputValueMin });\r\n            this.setState({ inputValueMin });\r\n        }\r\n    }\r\n    handleInputChangeMax(inputValueMax, action) {\r\n        if (action.action !== \"input-blur\" && action.action !== \"menu-close\") {\r\n            console.log({ inputValueMax });\r\n            this.setState({ inputValueMax });\r\n        }\r\n    }\r\n    //new\r\n\r\n    render() {\r\n          /* Save list of levels and options for dropdown */\r\n          const levelListMin = [\"ANY\", \"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\",\"800\"];\r\n\r\n          const levelOptionsMin = levelListMin.map((level) => (\r\n         {label: level, value: level}\r\n          )); \r\n \r\n \r\n          const levelListMax = [\"ANY\", \"199\", \"299\", \"399\", \"499\", \"599\", \"699\", \"799\",\"899\"];\r\n \r\n          const levelOptionsMax = levelListMax.map((level) => (\r\n         {label: level, value: level}\r\n          )); \r\n\r\n        const numCourses = [\r\n            {label: 5, value: 5}, \r\n            {label: 6, value: 6},\r\n            {label: 7, value: 7},\r\n            {label: 8, value: 8},\r\n            {label: 9, value: 9},\r\n            {label: 10, value:10}\r\n        ]\r\n          \r\n        if(this.state.loading) {\r\n            this.setState({loading:false})\r\n            ReactDOM.render(\r\n                <p id=\"loadingMsg\" class=\"lead\">Loading...</p>,\r\n                document.getElementById(\"id_dept_table\")\r\n            )\r\n        }\r\n\r\n        // new\r\n        const { inputValueMin } = this.state;\r\n        const { inputValueMax } = this.state;\r\n        // new\r\n\r\n        //message describing course levels\r\n        let help_levels = \"90-100 = Very Likely A<br/>80-90 = EasyA<br/>70-80 = You get what you put in<br/>60-70 = Avoid if possible<br/><60 = Avoid\";   \r\n        \r\n        return(\r\n            <div class=\"text-center\">\r\n                <h2 class=\"mt-5\">Select a Department</h2>\r\n\r\n                {/* Gives options for specific department the user is looking for */}\r\n                <label for=\"typeofdept\" class=\"lead\"><strong>Please select the department of the course/elective you are looking for.</strong></label>\r\n                    <div id=\"deptlist\">\r\n\r\n                    </div>\r\n\r\n                    <div> \r\n                            {/* prompt for levels */ }\r\n                            <div id=\"level_min_option\">\r\n\r\n                                {/* Help message to user about dept levels. */}\r\n                                {/*<div id=\"helpIconLevel\">\r\n                                    <HelpIcon data-for=\"ctool\" data-tip={help_levels} style={{color: '#cc0000'}}/>\r\n                                    <ReactTooltip id=\"ctool\" multiline={true} effect=\"solid\" place=\"top\"/>\r\n                                </div>*/} \r\n                                \r\n                                { /* Select level between 100 and 800 */ } \r\n                                <label id=\"mincourseLevel\" for=\"level_min\" class=\"lead\"><strong>Minimum Course Level</strong></label>\r\n                        \r\n                                <Select\r\n                                    id=\"level_min\"\r\n                                    defaultValue={[{label: 'ANY', value: 'ANY'}]}\r\n                                    options={levelOptionsMin}\r\n                                    onChange={level => this.setState({level_min: level.value})}\r\n                                    inputValue={inputValueMin}\r\n                                    onInputChange={this.handleInputChangeMin.bind(this)}\r\n                                    noOptionsMessage={() => null}\r\n                                    isClearable = {true}\r\n                                />\r\n                            </div>\r\n\r\n                            {/* prompt for levels */ }\r\n                            <label for=\"level_max\" class=\"lead\"><strong>Maximum Course Level</strong></label>\r\n\r\n                            { /* Select level between 100 and 800 */ }\r\n                            <div id=\"level_max_option\">\r\n                                <Select\r\n                                    id=\"level_max\" \r\n                                    defaultValue={[{label: 'ANY', value: 'ANY'}]}\r\n                                    options={levelOptionsMax}\r\n                                    onChange={level => this.setState({level_max: level.value})}\r\n                                    inputValue={inputValueMax}\r\n                                    onInputChange={this.handleInputChangeMax.bind(this)}\r\n                                    noOptionsMessage={() => null}\r\n                                />\r\n                            </div>\r\n                    </div>\r\n                \r\n                    {/* Asks user how many courses they would like to view */}\r\n                    <label for=\"howmanycourses\" class=\"lead\"><strong>How many courses would you like to view?</strong></label>\r\n                    <div id=\"howmanycourses\" style={{width:\"300px\", margin:\"0 auto\"}}>\r\n                        <Select className=\"numCourseSelect\"\r\n                                id='num_course_select' \r\n                                options={numCourses}\r\n                                isSearchable={false}\r\n                                defaultValue={[{label: 5, value: 5}]} \r\n                                //defaultValue={numCourses[0]}\r\n                                onChange={optionValue => this.setState({numCourses_value: optionValue.value})}\r\n                        />\r\n                    </div>\r\n\r\n                {/* Button to generate table */}\r\n                <div id=\"whichdeptdiv\">\r\n                    <Button\r\n                            variant=\"outline-light\" \r\n                            id=\"whichdept\" \r\n                            name=\"whichdept\" \r\n                            onClick={this.courseTable}\r\n                            size=\"lg\">\r\n                        Select\r\n                    </Button>\r\n                </div>\r\n\r\n                <div id =\"tableNote\">\r\n                </div>\r\n                { /* Div for course table */ }\r\n                <div id=\"id_dept_table\">\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n{/* <DeptList selectedDept={document.getElementById('deptList')} /> */}\r\nexport default Dept;","// incl First prompt text, first button\r\n// dropdown will be generalized\r\nimport React from 'react';\r\nimport './css/index.css';\r\nimport GEP from './GEP';\r\nimport Dept from './Dept';\r\nimport {Button} from 'react-bootstrap'\r\n\r\nclass FirstPrompt extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            gep: false,\r\n            dept: false,\r\n            which_term: \"2020 Summer Session 1\",\r\n            goClicked: false\r\n        };\r\n\r\n        this.goToGEPorDept = this.goToGEPorDept.bind(this);\r\n        this.setTerm = this.setTerm.bind(this);\r\n        \r\n    }\r\n\r\n    setTerm() {\r\n        this.setState({\r\n            which_term: document.getElementById(\"whichterm\").value\r\n        })\r\n    }\r\n    goToGEPorDept() {\r\n        let FirstPrompt = this;\r\n        //console.log(document.getElementById(\"gepornot\").value);\r\n        if (document.getElementById('gepornot').value === \"/gep\") {\r\n            //If gep was selected, show it.s\r\n            this.setState({gep: true});\r\n            this.setState({dept: false})\r\n        }\r\n        else {\r\n            //If dept was selected, show it.\r\n            this.setState({dept: true});\r\n            this.setState({gep: false})\r\n        }\r\n        //this.setState({goClicked})\r\n        this.setState({which_term: document.getElementById(\"whichterm\").value})\r\n    };\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div>\r\n                    <div id=\"termDivLabel\" class=\"text-center\">\r\n                        <label id=\"whichtermlabel\" for=\"whichterm\" class=\"lead\"><strong>Which term are you looking to enroll in? </strong></label>\r\n                        <div id=\"termDiv\">\r\n                            <select id=\"whichterm\" name=\"whichterm\" class=\"bg-light\" onChange={this.setTerm}>\r\n                                {/* options for user to select */}\r\n                                <option value=\"Summer Term 1\">2020 Summer Session 1</option>\r\n                                <option value=\"Summer Term 2\">2020 Summer Session 2</option>\r\n                                <option value=\"Fall\">2020 Fall Term</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div id=\"gepDivLabel\" class=\"text-center\">\r\n                        <label id =\"getlabel\" for=\"gepornot\" class=\"lead\"><strong>Are you looking for a GEP or a course from a specific department?</strong></label>\r\n                        <div id=\"gepDiv\">\r\n                            <select \r\n                            id=\"gepornot\" \r\n                            name=\"gepornot\" \r\n                            class=\"bg-light\"\r\n                            onChange={this.goToGEPorDept}>\r\n                                {/* options for user to select */}\r\n                                <option>None</option>\r\n                                <option value=\"/gep\">GEP</option>\r\n                                <option value=\"/dept\">Course Department</option>\r\n                            </select>\r\n                            </div>\r\n                        \r\n                    </div>\r\n\r\n                    {/* Button to go to /gep or /dept */ }\r\n                    {/*<div id=\"goButton\">\r\n                        <Button variant=\"outline-light\" id=\"goto\" size=\"lg\" onClick={this.goToGEPorDept}>Go</Button>\r\n                    </div>*/}\r\n                                       \r\n                    <div>\r\n                        {this.state.gep && <GEP whichterm={this.state.which_term}/>}\r\n                        {this.state.dept && <Dept whichterm={this.state.which_term}/>}\r\n                        \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FirstPrompt;","// incl First prompt text, first button\n// dropdown will be generalized\nimport React from 'react';\nimport './css/index.css';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jwt-decode';\nimport StickyBox from 'react-sticky-box';\n\nclass MainWelcome extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        //this.renderWelcome();\n    }\n\n    render() {\n        const orgName = \"PackRanks\";\n        let userwelcome;\n        let signUpPrompt;\n        let introducePackRanks;\n\n        //console.log(\"PROPS\");\n        //console.log(this.props.profile_data);\n        if (localStorage.token) {\n            let identity = jwt(localStorage.token).identity;\n            let profile_data = this.props.profile_data.data;\n            userwelcome = <h1 id=\"welcome\" class=\"mt-5\">Welcome to {orgName}, <strong>{identity.first_name}</strong>!</h1>\n            introducePackRanks = <p id=\"labGradient\" class=\"lead\">Gradient, MyPack, RateMyProfessor... all in one place.</p>\n        }\n        else {\n            userwelcome = <h1 id=\"welcome\" class=\"mt-5\">Welcome to {orgName}!</h1>\n            introducePackRanks = <p id=\"labGradient\" class=\"lead\">Gradient, MyPack, RateMyProfessor... all in one place.\n                        <br/><p id=\"lab\" class=\"lead\">Please <a id=\"labLink\" class=\"lead\" href=\"/login\">sign up or login</a> to use the Wishlist feature!</p>\n                    </p>\n            \n        }\n        signUpPrompt = <p id=\"lab\" class=\"lead\">\n                                For NC State students, by NC State students.\n                        </p>\n        \n\n        return(\n                <div id=\"welcomePage\" class=\"col-lg-12 text-center\">\n                    {userwelcome}\n\n                    {/*{signUpPrompt}*/}\n\n                    {introducePackRanks}\n                </div>\n        );\n    }\n}\n\nexport default MainWelcome;","import React, { useState } from \"react\";\n//import { Button, FormGroup, FormControl, FormLabel, FormText, FormCheck } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport \"./static/images/icons/favicon.ico\";\nimport \"./static/vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./static/fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./static/fonts/Linearicons-Free-v1.0.0/icon-font.min.css\";\nimport \"./static/vendor/animate/animate.css\";\nimport \"./static/vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./static/vendor/select2/select2.min.css\";\nimport \"./static/css/util.css\";\nimport \"./static/css/main.css\";\nimport GoogleLogin from 'react-google-login';\nimport {Button} from 'react-bootstrap';\nimport GoogleButton from 'react-google-button';\nimport ReactDOM from 'react-dom';\n//import Alert from 'react-s-alert';\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  Switch,\n  withRouter\n} from 'react-router-dom';\nimport Simplert from 'react-simplert';\nimport MainWelcome from '../Home/MainWelcome'\nclass LoginPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.googleSuccess = this.googleSuccess.bind(this);\n    this.onPwdChange = this.onPwdChange.bind(this);\n    this.onEmailChange = this.onEmailChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      first_name: null,\n      last_name: null,\n      email: null,\n      password: null,\n      login_email: null\n    }\n  }\n\n  handleLogin(event) {\n      event.preventDefault();\n\n      let validInput = true;\n\n      let email=this.state.login_email;\n      let pwd=this.state.password;\n\n      {/* Check for valid email */}\n      if (!(new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(email))) {  \n        \n        //throw error with toast-notes\n        toast.notify(<h5 id=\"incorrect\">Please enter a valid email address.</h5>)\n        validInput = false;\n      }\n      \n      if (validInput) {\n\n        let url = \"http://packranks-backend.herokuapp.com/login\";\n        fetch(url,\n        {\n                method: \"POST\",\n                body: JSON.stringify({\n                    email: email,\n                    password:pwd\n                })\n        }).then(\n            (response) => (response.json())\n        ).then((data) => {\n            {/*Successfully logged in*/}\n            if (data.success === true) {\n              localStorage.setItem(\"token\", data.token);\n                this.props.history.push({\n                    pathname: \"/homepage\"\n                })\n            }\n            else {\n                //Handle error in login here.\n                //throw error with react-s-alert\n                /*Alert.error(<h5>Email or password is incorrect.</h5>, {\n                  position: 'top',\n                  timeout: 'none'\n                });*/\n                toast.notify(<h5 id=\"incorrect\">Email or password is incorrect.</h5>)\n            }\n        })\n      }\n  }\n\n  onPwdChange(event) {\n    this.setState({password: event.target.value})\n  }\n  onEmailChange(event) {\n    this.setState({login_email:event.target.value})\n  }\n\n  //Handles google successful login.\n  googleSuccess(response) {\n\n    //get data from google\n    const profile_obj = response.profileObj;\n    \n    let url = \"http://packranks-backend.herokuapp.com/googleauth\";\n    //call Flask API with google user data.\n    fetch(url,\n      {\n              method: \"POST\",\n              body: JSON.stringify({\n                first_name: profile_obj.givenName,\n                last_name: profile_obj.familyName,\n                email: profile_obj.email\n              })\n      }).then(\n          (response) => (response.json())\n      ).then((data) => {\n          {/*Successfully logged in*/}\n          if (data.success === true) {\n            if (data.type === \"SignUp\") {\n              toast.notify(<h5 id=\"incorrect\">Thank you for signing up for PackRanks! You will now be sent to your homepage!</h5>)\n            }\n            localStorage.setItem(\"token\", data.token);\n              this.props.history.push({\n                  pathname: \"/homepage\"\n              })\n          }\n          else {\n              //Handle error in login here.\n              toast.notify(<h5 id=\"incorrect\">Email or password is incorrect.</h5>)\n          }\n      })\n  }\n\n  render () {\n    return (\n      \n      <div>\n        \n        <div>\n          <title>Login to PackRanks</title>\n        </div>\n        <div id=\"login-fail\">\n\n        </div>\n        <div>\n          <div className=\"limiter\">\n            <div className=\"container-login100\">\n              <div className=\"wrap-login100 p-l-50 p-r-50 p-t-77 p-b-30\">\n                <form className=\"login100-form validate-form\">\n                  <span className=\"login100-form-title p-b-55\">\n                    Login to PackRanks\n                  </span>\n\n                  {/* Email form */}\n                  <div className=\"wrap-input100 validate-input m-b-16\" data-validate=\"Valid email is required: ex@abc.xyz\">\n                    <input id=\"emailForm\" \n                      className=\"input100\" \n                      type=\"text\" \n                      name=\"email\" \n                      placeholder=\"Email\"\n                      onChange={this.onEmailChange} />\n\n                    <span className=\"focus-input100\" />\n                    <span className=\"symbol-input100\">\n                      <span className=\"lnr lnr-envelope\" />\n                    </span>\n                  </div>\n\n                  {/* className=\"txt1 bo1 hov1 p-b-5\" */ }\n\n                  {/* Password Form */}\n                  <div id=\"passDiv\" className=\"wrap-input100 validate-input m-b-16\" data-validate=\"Password is required\">\n                    <input id=\"pwdForm\" \n                      className=\"input100\" \n                      type=\"password\" \n                      name=\"pass\" \n                      placeholder=\"Password\"\n                      onChange={this.onPwdChange} />\n                    <span className=\"focus-input100\" />\n                    <span className=\"symbol-input100\">\n                      <span className=\"lnr lnr-lock\" />\n                    </span>\n                    \n                  </div>\n                  \n                  {/*\n                  <div className=\"contact100-form-checkbox m-l-4\">\n                    <input className=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\" />\n                    <label className=\"label-checkbox100\" htmlFor=\"ckb1\">\n                      Remember me\n                    </label>\n                  </div>*/}\n                  <div className=\"container-login100-form-btn p-t-0\">\n                    <button \n                      onClick={this.handleLogin}\n                      className=\"login100-form-btn\">\n                      Login\n                    </button>\n                  </div>\n                  <div id=\"orLoginWith\" className=\"text-center w-full p-t-42 p-b-22\">\n                    <span className=\"txt1\">\n                      Or login with\n                    </span>\n                  </div>\n\n                  {/* Google Button goes here */ }\n                  <div id=\"googleButton\">\n                    <GoogleLogin\n                        id = \"googleButtonB\"\n                        clientId=\"887022410797-hhdl5etksm3ob2m9fhhh05i9f81cond2.apps.googleusercontent.com\"\n                        render={renderProps => ( \n                          <GoogleButton \n                            id=\"googlesignInbutton\"\n                            type=\"light\"\n                            onClick={renderProps.onClick}/>\n                          \n                        )}\n                        buttonText=\"Login with Google\"\n                        onSuccess={this.googleSuccess}\n                        onFailure={this.googleFailure}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                  </div>\n                  <div className = \"text-center p-t-10\">\n                    <span className=\"txt1\">You will automatically be signed up for PackRanks!</span>\n                  </div>\n                  <div className=\"text-center w-full p-t-30\">\n                    <span id=\"notamember\" className=\"txt1\">\n                      Not a member?\n                    </span>\n                    <a id=\"signUpNow\" className=\"txt1 bo1 hov1\" href=\"/signup\">\n                      Sign up now\t\t\t\t\t\t\t\n                    </a>\n                  </div>\n                  <div className =\"text-center w-full p-t-10\">\n                    <a id=\"signUpNow\" className=\"txt1 bo1 hov1\" href=\"/forgotpassword\">\n                        Forgot password?\t\t\t\t\t\t\n                    </a>\n                  </div>\n                  {/*<div className=\"text-center w-full p-t-30\">\n                    <a id=\"signUpNow\" className=\"txt1 bo1 hov1\" href=\"/forgotpassword\">\n                      Forgot password?\t\t\t\t\t\n                    </a>\n                        </div>*/}\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default withRouter(LoginPage);","import React from \"react\";\nimport './Bio.css'\nimport HarshalPicture from './ProfileImages/HarshalPic.jpeg'\nimport MathewPicture from './ProfileImages/MathewPic.jpeg'\nimport IshaanPicture from './ProfileImages/IshaanPic.jpeg'\nimport AnthonyPicture from './ProfileImages/AnthonyPic.jpeg'\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport MailIcon from '@material-ui/icons/Mail';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\n\nfunction Bio(){// Ishaan - Returning scooter, Mathew - Not turning on his camera \n\n  return(\n    <div class=\"wrapper\">\n    <h1 id=\"teamTitle\">Our Team</h1>\n    <div class=\"our_team\">\n          \n          {/* Ishaan's Profile*/}\n          <div class=\"team_member\">\n           <div class=\"member_img\">\n             <img id=\"profileImage\" src={IshaanPicture} alt=\"our_team\" target = \"_blank\"/>\n             <div class=\"social_media\">\n               <div class=\"facebook item\">\n                 <a href = \"https://linkedin.com/in/ishaan-radia\" target = \"_blank\">\n                    <LinkedInIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                  </a>\n              </div>\n               <div class=\"twitter item\">\n                  <a href=\"https://github.com/iiradia\" target = \"_blank\"> \n                    <GitHubIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                  </a>\n              </div>\n               <div class=\"instagram item\">\n                  <a href=\"mailto: iiradia@ncsu.edu\" target = \"_blank\">  \n                      <MailIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/> \n                  </a>\n              </div>\n             </div>\n          </div>\n          <h3>Ishaan Radia</h3>\n          <span>Principal Software Engineer</span>\n          <p>Implemented production-ready web scraping system and created an ETL pipeline with Python and MongoDB. Developed React components and integrated them with the back-end REST API Flask endpoints.</p>\n      </div>\n\n        {/* Harshal's Profile*/}\n        <div class=\"team_member\">\n          <div class=\"member_img\">\n             <img id=\"profileImage\" src={HarshalPicture} alt=\"our_team\"/>\n             <div class=\"social_media\">\n               <div class=\"facebook item\">\n                  <a href=\"https://www.linkedin.com/in/harshal-suthar/\" target = \"_blank\">\n                    <LinkedInIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                  </a> \n              </div>\n               <div class=\"twitter item\">\n                 <a href=\"https://github.com/h-suthar\" target = \"_blank\">\n                    <GitHubIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                 </a>\n              </div>\n               <div class=\"instagram item\">\n                  <a href=\"mailto: hksuthar@ncsu.edu\" target = \"_blank\">  \n                    <MailIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                  </a>\n              </div>\n             </div>\n          </div>\n          <h3>Harshal Suthar</h3>\n          <span>Software Engineer</span>\n          <p>Focused on application security and front-end development.</p>\n        </div>\n\n        \n        {/* Mathew's Profile */}\n        <div class=\"team_member\">\n           <div class=\"member_img\">\n             <img id=\"profileImage\" src={MathewPicture} alt=\"our_team\" target = \"_blank\"/>\n             <div class=\"social_media\">\n               <div class=\"facebook item\">\n                 <a href=\"https://www.linkedin.com/in/mathewchandancsu/\"> \n                    <LinkedInIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                 </a>\n               </div>\n               <div class=\"twitter item\">\n                 <a href=\"https://github.com/MathewChanda\" target = \"_blank\">\n                    <GitHubIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                 </a>\n              </div>\n               <div class=\"instagram item\">\n                <a href=\"mailto: mvchanda@ncsu.edu\" target = \"_blank\">  \n                    <MailIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                </a>\n              </div>\n             </div>\n          </div>\n          <h3>Mathew Chanda</h3>\n          <span>Software Engineer</span>\n          <p>Focused on the front-end React components and the MongoDB non-relational model.</p>\n      </div>\n\n\n      {/* Anthony's Profile*/}\n        <div class=\"team_member\">\n           <div class=\"member_img\">\n             <img id=\"profileImage\" src={AnthonyPicture} alt=\"our_team\" target = \"_blank\"/>\n             <div class=\"social_media\">\n               <div class=\"facebook item\">\n                <a href=\"https://www.linkedin.com/in/anthony-wang-3aa134164/\" target = \"_blank\"> \n                    <LinkedInIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/> \n                </a>\n              </div>\n               <div class=\"twitter item\">\n                  <a href=\"https://github.com/AndongW\" target = \"_blank\"> \n                    <GitHubIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                  </a>\n              </div>\n              <div class=\"instagram item\">\n                <a href = \"mailto: awang25@ncsu.edu\" target = \"_blank\">\n                    <MailIcon fontSize=\"large\" style={{ color: \"#cc0000\", margins: 40}}/>\n                 </a> \n              </div>\n             </div>\n          </div>\n          <h3>Anthony Wang</h3>\n          <span>Data Scientist</span>\n          <p>Developed the proprietary PackRanks rating formula.</p>\n      </div>  \n\n    </div>\n</div>\n  )\n}\nexport default Bio; ","// About us.\nimport React from 'react';\nimport './about.css';\nimport {Button} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport Bio from '../Bio/Bio.jsx'\nclass AboutPage extends React.Component {\n    render() {\n        return(\n            <html id=\"aboutHTML\">\n            <div>\n                <div id=\"container\" class=\"container\">\n                    <div id=\"aboutDiv\" class=\"row\">\n                            <div class=\"about-title clearfix\">\n                                <h1 id=\"aboutustitle\">About <span>PackRanks</span></h1>\n                                <h2 id=\"howWeHelpYou\"><br/>How We Help You</h2>\n                                <div id=\"howwehelpdiv\">\n                                <h6 id=\"aboutPack\" class=\"about-paddingB\">\n                                    <h6 id=\"aboutPack\">Here at NC State, we as students have many resources to help us find the best fit classes to register for. However, these resources are scattered and there is no efficient way to filter through the data we have available.\n                                    </h6>\n                                    <h6 id=\"aboutPack\">With PackRanks, we solved that issue by compiling a list of the best possible classes that are offered in a certain term and creating a simple way for you to filter through the options. In addition, we provide all of the information you need in one convenient place, so you never have to \n                                        spend hours looking through Gradient, MyPack, and the GEP List again.</h6>\n                                    <h6 id=\"aboutPack\">Now, you can find the classes that are the most beneficial for you simply by searching for a specific term and course department.\n                                        Also, you can save the classes you are most interested in to your personalized Wishlist so that you don't forget your course plans!\n                                    </h6>\n                                    <h6 id=\"aboutPack\">\n                                        We hope that you will benefit a lot from PackRanks, and if you have any suggestions for new features you would like to see \n                                    or improvements with the website, please feel free to reach out!\n                                    </h6>\n                                </h6>\n                                </div>\n\n                                <h2>Our Rating System</h2>\n                                <div id=\"aboutratingDiv\">\n                                <h6 id=\"aboutPack\">\n                                    <h6 id=\"aboutPack\" class=\"about-paddingB\">We take the thinking out of the equation, just do! We use newly updated data from <a target=\"_blank\" href=\"https://tools.wolftech.ncsu.edu/gradient/\" ><span id=\"bolderGradient\">Wolftech Gradient</span></a> to compute a rating of each course that measures how easy or difficult the class is. We then sort our course results for GEPs and specific courses by that rating, providing you with a simple and effective way to find the easiest GEPs or any courses you are looking for!\n                                    </h6>\n                                    <h6 id=\"aboutPack\">At this stage, in order to prioritize the safety and integrity of our information, we are in stealth mode and cannot disclose any specific details about our rating formula. However, we provide links to RateMyProfessor for each professor so that you can see if it is right for you! The intended use of this application is to consolidate all of the data that is available on NC State courses and make it easier for you to register for the classes that are best for you! Our ultimate goal as PackRanks developers and NC State students is to provide a meaningful service for the entire wolf_pack community, and that's why we had ease of course selection and fit as our first priority when building pack_ranks. For further serious inquiries, contact us using the link provided below.\n                                    </h6>\n                                </h6>\n                                </div>\n                                <div id=\"aboutDiv\" class=\"row\">\n                                    <Bio/>\n                                </div>\n                                \n                                <div class=\"contactUsAbout\">\n                                    <Link to=\"/contact\">\n                                        <Button\n                                            class=\"btn btn-danger\" \n                                            id=\"contactusbtn\" \n                                            name=\"contactusbtn\" \n                                            onClick={this.getTable}\n                                            size=\"lg\">\n                                            Contact Us\n                                        </Button>\n                                    </Link>\n                                </div>\n\n                        </div>\n                        </div>\n                        <div class=\"col-md-5 col-sm-6\">\n                        </div>\t\n                    </div>\n            </div>\n            </html>\n        );\n    }\n}\n\nexport default AboutPage;\n","import React from 'react';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport \"./faq.css\";\n// Demo styles, see 'Styles' section below for some notes on use.\n\n \nexport default function Example() {\n    return (\n        <div id=\"faqDiv\">\n        <Accordion id=\"faqAcc\" allowZeroExpanded= {true} allowMultipleExpanded={true}>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    How do I search for just one course?\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                        <p id=\"helpText\">\n                        To view the easiest sections/professors for one specific course, type in the same course number for both boxes. (Ex: to view only MA 341 sections and professors, select the \"Mathematics\" department and type \"341\" for both the minimum and maximum course level range).\n                        </p>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    Why don't I see an option to add a course to my wishlist?\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <div id=\"divInstruction\">\n                        <p id=\"helpText\">In order to add a course to your wishlist, you must login\n                            with a PackRanks or a Google account. Click on the login\n                            button located on the top right of your screen to get started!\n                        </p>\n                    </div>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    What benefits do I get from making an account?\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <p id=\"helpText\">\n                        Great question! When you make an account,\n                        you are able to create your own wishlist of courses that you\n                        would like to take! In addition, we will send you an email \n                        whenever a course that was closed or waitlisted on your wishlist \n                        opens up!\n                    </p>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    Why do I see a course with a higher rating ranked above a course with\n                    a lower rating?\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <p id=\"helpText\">\n                        A course with a higher rating that is ranked above a course with a lower rating\n                        either has a duplicate professor as a course that is ranked near the top of the list\n                        or is a closed section with no more seats available.\n                    </p>\n                </AccordionItemPanel>\n            </AccordionItem>\n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    How are ratings calculated?\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                        <p id=\"helpText\">\n                            Check out our about page for more information! <a href=\"/about\">About PackRanks</a>\n                        </p>\n                </AccordionItemPanel>\n            </AccordionItem> \n            <AccordionItem>\n                <AccordionItemHeading>\n                    <AccordionItemButton>\n                    What is a GEP?\n                    </AccordionItemButton>\n                </AccordionItemHeading>\n                <AccordionItemPanel>\n                    <p id=\"helpText\">\n                        GEP stands for <a id=\"helpText\" target=\"_blank\" href=\"https://oucc.dasa.ncsu.edu/general-education-program-gep/gep-category-requirements/\">General Education Program</a>, which is the set\n                        of courses all students at NC State must complete prior \n                        to graduation.\n                    </p>\n                </AccordionItemPanel>\n            </AccordionItem> \n        </Accordion>\n        </div>\n    );\n}\n\n\n","// About us.\nimport React from 'react';\nimport './help.css';\nimport {Button} from 'react-bootstrap';\nimport {Link} from 'react-router-dom';\nimport Instruction from './Instructions/Instruction.jsx'\nimport FAQ from './FAQ/FAQ.jsx';\nclass HelpPage extends React.Component {\n    render() {\n        return(\n            <div id=\"wrapper\">\n            <html id=\"helpHTML\">\n            <div id =\"aboutPage\">\n                    <div id=\"aboutDiv\" class=\"row\">\n                        <div class=\"col-md-7 col-sm-6\">\n                            <div id=\"aboutTitleDiv\" class=\"about-title clearfix\">\n                                <h1 id=\"aboutustitle\">How to Use <span>PackRanks</span></h1>\n                                <h2><br/>Frequently Asked Questions</h2>\n                                <FAQ/>\n                                <h2 id=\"howWeHelpYou\">Instructions</h2>\n                                <Instruction/>\n                                <div class=\"contactUsAbout\">\n                                    <Link to=\"/contact\">\n                                        <Button\n                                            class=\"btn btn-danger\" \n                                            id=\"contactusbtn\" \n                                            name=\"contactusbtn\" \n                                            onClick={this.getTable}\n                                            size=\"lg\">\n                                            Contact Us\n                                        </Button>\n                                    </Link>\n                                </div>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n            </html>\n            </div>\n        );\n    }\n}\n\nexport default HelpPage;\n","import React, { useState } from \"react\";\n\nimport \"./vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./fonts/iconic/css/material-design-iconic-font.min.css\";\nimport \"./images/icons/favicon.ico\";\nimport \"./vendor/animate/animate.css\";\nimport \"./vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./vendor/animsition/css/animsition.min.css\";\nimport \"./vendor/select2/select2.min.css\";\nimport \"./vendor/daterangepicker/daterangepicker.css\";\n\nimport \"./css/util.css\";\nimport \"./css/main.css\";\nimport \"./contactpage.css\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nimport toast from 'toasted-notes'; \nimport 'toasted-notes/src/styles.css';\n\nclass ContactPage extends React.Component { \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            phone_no: \"\",\n            message: \"\",\n            re_captcha: false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.onFirstNameChange = this.onFirstNameChange.bind(this);\n        this.onLastNameChange = this.onLastNameChange.bind(this);\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onPhoneChange = this.onPhoneChange.bind(this);\n        this.onMessageChange = this.onMessageChange.bind(this);\n        this.onReCaptcha = this.onReCaptcha.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        \n        let validInput = true;\n\n        {/* Set variables to form values */}\n        let email = this.state.email;\n        let first_name = this.state.first_name;\n        let last_name = this.state.last_name;\n        let msg = this.state.message;\n\n        {/* Check for valid email */}\n        if (!(new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(email))) {  \n            toast.notify(<h5 style={{color: '#cc0000'}}>Please enter a valid email address.</h5>);\n            validInput = false;\n        }\n\n        {/* Check for valid First Name and Last Name*/}\n        if (!first_name || !last_name) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Please enter a valid first name and last name.</h5>);\n            validInput = false;\n        }\n\n        {/* Check for valid message */}\n        if (!msg) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Please enter a message.</h5>);\n            validInput = false;\n        }\n\n        {/* Check for completed recaptcha */}\n        if (!this.state.re_captcha) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Please complete the ReCaptcha.</h5>);\n            validInput = false;\n        }\n\n        if (validInput) {\n            //console.log(this.state);\n\n            let url = \"http://packranks-backend.herokuapp.com/contact\";\n            fetch(url,\n            {\n                    method: \"POST\",\n                    body: JSON.stringify(this.state)\n            }).then(\n                (response) => (response.json())\n            ).then((data) => {\n                console.log(data);\n                if (data.success === true) {\n                    toast.notify(<h5 style={{color: 'green'}}>Message sent! Please be patient, we will get back to you as soon as possible!</h5>);\n                }\n                else {\n                    toast.notify(<h5 style={{color: '#cc0000'}}>Message failed to send.</h5>);\n                }\n            })\n        }\n    }\n\n    onFirstNameChange(event) {\n        this.setState({first_name: event.target.value})\n      }\n    \n    onLastNameChange(event) {\n        this.setState({last_name: event.target.value})\n    }\n    \n    onEmailChange(event) {\n         this.setState({email: event.target.value})\n      }\n    \n    onPhoneChange(event) {\n        this.setState({phone_no: event.target.value})\n    }\n    \n    onMessageChange(event) {\n        this.setState({message: event.target.value})\n      }\n    \n    onReCaptcha(event) {\n        if (event) {\n            this.setState({re_captcha: true})\n        }\n    }\n\n    render() {\n        return (\n        <div>\n            <title>Contact V14</title>\n            <meta charSet=\"UTF-8\" />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            {/*===============================================================================================*/}\n            <link rel=\"icon\" type=\"image/png\" href=\"images/icons/favicon.ico\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/bootstrap/css/bootstrap.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/font-awesome-4.7.0/css/font-awesome.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/iconic/css/material-design-iconic-font.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animate/animate.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/css-hamburgers/hamburgers.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animsition/css/animsition.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/select2/select2.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/daterangepicker/daterangepicker.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"css/util.css\" />\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\" />\n            {/*===============================================================================================*/}\n            <div className=\"container-contact100\">\n            <div className=\"wrap-contact100\">\n                <form \n                    onSubmit={this.handleSubmit}\n                    method=\"POST\"\n                    className=\"contact100-form validate-form\">\n                    {/*Form title */}\n                    <span id=\"contactUsForm\" className=\"contact100-form-title\">\n                        Contact Us\n                    </span>\n\n                    {/* Enter first name */ }\n                    <label className=\"label-input100\" htmlFor=\"first-name\">Your Name *</label>\n                    <div className=\"wrap-input100 rs1 validate-input\">\n                        <input id=\"first-name\"\n                            className=\"input100\" \n                            type=\"text\" \n                            name=\"first-name\" \n                            placeholder=\"First name\"\n                            onChange={this.onFirstNameChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    {/* Enter last name */ }\n                    <div className=\"wrap-input100 rs1 validate-input\">\n                        <input className=\"input100\" \n                            type=\"text\" \n                            name=\"last-name\" \n                            placeholder=\"Last name\"\n                            onChange={this.onLastNameChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    { /* ENTER email */ }\n                    <label className=\"label-input100\" htmlFor=\"email\">Email Address *</label>\n                    <div className=\"wrap-input100 validate-input\">\n                        <input id=\"email\" \n                            className=\"input100\" \n                            type=\"text\" \n                            name=\"email\" \n                            placeholder=\"Eg. example@email.com\"\n                            onChange={this.onEmailChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    { /* Enter Phone Number */}\n                    <label className=\"label-input100\" htmlFor=\"phone\">Phone Number</label>\n                    <div className=\"wrap-input100\">\n                        <input id=\"phone\" \n                            className=\"input100\" \n                            type=\"text\" \n                            name=\"phone\" \n                            placeholder=\"Eg. +1 800 000000\"\n                            onChange={this.onPhoneChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    { /* Enter Message */ }\n                    <label className=\"label-input100\" htmlFor=\"message\">Message *</label>\n                    <div className=\"wrap-input100 validate-input\">\n                        <textarea id=\"message\" \n                            className=\"input100\" \n                            name=\"message\" \n                            placeholder=\"Please enter your comments...\" \n                            defaultValue={\"\"}\n                            onChange={this.onMessageChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    {/* ReCAPTCHA */}\n                    <div id =\"recap\">\n                        <ReCAPTCHA\n                            sitekey=\"6Lf9MvwUAAAAAHxBJLXSVvLlimkdHv-CHeLYzEYc\"\n                            onChange={this.onReCaptcha}\n                        />\n                    </div>\n\n                    { /* Submit Button */ }\n                    <div id=\"submitButtonContact\" className=\"container-contact100-form-btn\">\n                        <button \n                            type=\"submit\"\n                            className=\"contact100-form-btn\">\n                        <span>\n                            Submit\n                            <i className=\"zmdi zmdi-arrow-right m-l-8\" />\n                        </span>\n                        </button>\n                    </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        );\n    }\n}\nexport default ContactPage;","import React, { useState } from \"react\";\n\nimport \"./vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./fonts/iconic/css/material-design-iconic-font.min.css\";\nimport \"./images/icons/favicon.ico\";\nimport \"./vendor/animate/animate.css\";\nimport \"./vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./vendor/animsition/css/animsition.min.css\";\nimport \"./vendor/select2/select2.min.css\";\nimport \"./vendor/daterangepicker/daterangepicker.css\";\n\nimport \"./css/util.css\";\nimport \"./css/main.css\";\nimport \"./signup.css\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport {withRouter} from 'react-router-dom';\n\nimport toast from 'toasted-notes'; \nimport 'toasted-notes/src/styles.css';\n\nclass SignUp extends React.Component { \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            first_name: \"\",\n            last_name: \"\",\n            email: \"\",\n            password: \"\",\n            confirmpassword: \"\",\n            re_captcha: false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.onFirstNameChange = this.onFirstNameChange.bind(this);\n        this.onLastNameChange = this.onLastNameChange.bind(this);\n        this.onEmailChange = this.onEmailChange.bind(this);\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onConfirmChange = this.onConfirmChange.bind(this);\n        this.onReCaptcha = this.onReCaptcha.bind(this);\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        \n        let validInput = true;\n\n        {/* Set variables to form values */}\n        let email = this.state.email;\n        let first_name = this.state.first_name;\n        let last_name = this.state.last_name;\n        let pwd = this.state.password;\n        let confirm_pwd = this.state.confirmpassword;\n\n        {/* Check for valid email */}\n        if (!(new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(email))) {  \n            toast.notify(<h5 style={{color: '#cc0000'}}>Please enter a valid email address.</h5>)\n            validInput = false;\n        }\n\n        {/* Check for valid First Name and Last Name*/}\n        if (!first_name || !last_name) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Please enter a valid first name and last name.</h5>)\n            validInput = false;\n        }\n\n        {/* Check for password match */}\n        if (pwd !== confirm_pwd) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Passwords do not match!</h5>)\n            validInput = false;\n        }\n\n        { /* Check for valid password length */ }\n        if (pwd.length < 8) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Password must be 8 or more characters!</h5>)\n            validInput = false;\n        }\n\n        {/* Check for recaptcha completion */}\n        if (!this.state.re_captcha) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Please complete the ReCaptcha.</h5>)\n            validInput = false;\n        }\n\n        if (validInput) {\n            console.log(this.state);\n\n            let url = \"http://packranks-backend.herokuapp.com/signup\";\n            fetch(url,\n            {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        first_name: first_name,\n                        last_name: last_name,\n                        email: email,\n                        password:pwd\n                    })\n            }).then(\n                (response) => (response.json())\n            ).then((data) => {\n                console.log(data);\n                if (data.success === true) {\n                    toast.notify(<h5 style={{color: 'green'}}>You have successfully signed up for PackRanks! Login to access your homepage!</h5>)\n                    this.props.history.push({\n                        pathname: \"/login\"\n                    })\n                }\n                else {\n                    //Handle duplicate emails/usernames here.\n                    toast.notify(<h5 style={{color: '#cc0000'}}>Email already exists in database. Please try logging in instead.</h5>)\n                }\n            })\n        }\n    }\n\n    onFirstNameChange(event) {\n        this.setState({first_name: event.target.value})\n      }\n    \n    onLastNameChange(event) {\n        this.setState({last_name: event.target.value})\n    }\n    \n    onEmailChange(event) {\n         this.setState({email: event.target.value})\n      }\n    \n    onPasswordChange(event) {\n        this.setState({password: event.target.value})\n    }\n    \n    onConfirmChange(event) {\n        this.setState({confirmpassword: event.target.value})\n      }\n\n    onReCaptcha(event) {\n        this.setState({re_captcha: true});\n    }\n\n    render() {\n        return (\n        <div>\n            <title>Contact V14</title>\n            <meta charSet=\"UTF-8\" />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            {/*===============================================================================================*/}\n            <link rel=\"icon\" type=\"image/png\" href=\"images/icons/favicon.ico\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/bootstrap/css/bootstrap.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/font-awesome-4.7.0/css/font-awesome.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/iconic/css/material-design-iconic-font.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animate/animate.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/css-hamburgers/hamburgers.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animsition/css/animsition.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/select2/select2.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/daterangepicker/daterangepicker.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"css/util.css\" />\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\" />\n            {/*===============================================================================================*/}\n            <div className=\"container-contact100\">\n            <div className=\"wrap-contact100\">\n                <form \n                    onSubmit={this.handleSubmit}\n                    method=\"POST\"\n                    className=\"contact100-form validate-form\">\n                    {/*Form title */}\n                    <span className=\"contact100-form-title\">\n                        Sign Up for PackRanks\n                    </span>\n\n                    {/* Enter first name */ }\n                    <label className=\"label-input100\" htmlFor=\"first-name\">Your Name *</label>\n                    <div className=\"wrap-input100 rs1 validate-input\">\n                        <input id=\"first-name\"\n                            className=\"input100\" \n                            type=\"text\" \n                            name=\"first-name\" \n                            placeholder=\"First name\"\n                            onChange={this.onFirstNameChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    {/* Enter last name */ }\n                    <div className=\"wrap-input100 rs1 validate-input\">\n                        <input className=\"input100\" \n                            type=\"text\" \n                            name=\"last-name\" \n                            placeholder=\"Last name\"\n                            onChange={this.onLastNameChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    { /* ENTER email */ }\n                    <label className=\"label-input100\" htmlFor=\"email\">Email Address *</label>\n                    <div className=\"wrap-input100 validate-input\">\n                        <input id=\"email\" \n                            className=\"input100\" \n                            type=\"text\" \n                            name=\"email\" \n                            placeholder=\"Eg. example@email.com\"\n                            onChange={this.onEmailChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    { /* ENTER password */ }\n                    <label className=\"label-input100\" htmlFor=\"email\">Password *</label>\n                    <div className=\"wrap-input100 validate-input\">\n                        <input id=\"password\" \n                            className=\"input100\" \n                            type=\"password\" \n                            name=\"password\" \n                            placeholder=\"8 or more characters\"\n                            onChange={this.onPasswordChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    { /* CONFIRM password */ }\n                    <label className=\"label-input100\" htmlFor=\"email\">Confirm Password *</label>\n                    <div className=\"wrap-input100 validate-input\">\n                        <input id=\"password\" \n                            className=\"input100\" \n                            type=\"password\" \n                            name=\"password\" \n                            placeholder=\"8 or more characters\"\n                            onChange={this.onConfirmChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    {/* ReCAPTCHA */}\n                    <div id=\"recap\">\n                        <ReCAPTCHA\n                            sitekey=\"6Lf9MvwUAAAAAHxBJLXSVvLlimkdHv-CHeLYzEYc\"\n                            onChange={this.onReCaptcha}\n                        />\n                    </div>\n\n                    { /* Submit Button */ }\n                    <div id=\"submitButton\" className=\"container-contact100-form-btn\">\n                        <button \n                            type=\"submit\"\n                            className=\"contact100-form-btn\">\n                        <span>\n                            Submit\n                            <i className=\"zmdi zmdi-arrow-right m-l-8\" />\n                        </span>\n                        </button>\n                    </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        );\n    }\n}\nexport default withRouter(SignUp);","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport jwt from 'jwt-decode';\nimport {Button} from 'react-bootstrap';\nimport Table from '../Home/Table';\nimport './userpage.css';\nimport {Link} from 'react-router-dom';\n\nclass UserPage extends React.Component {\n\n    constructor() {\n        super();\n        //this.renderWelcome();\n        this.viewWishlist = this.viewWishlist.bind(this);\n    }\n\n    viewWishlist() {\n        \n    }\n\n    render() {\n        const orgName = \"PackRanks\";\n        let userwelcome;\n        //console.log(\"PROPS\");\n        //console.log(this.props.profile_data);\n        if (localStorage.token) {\n            let identity = jwt(localStorage.token).identity;\n            userwelcome = <h1 id=\"welcome\" class=\"mt-5\">Welcome, <strong>{identity.first_name}</strong>!</h1>\n        }\n\n        return(\n                <div class=\"col-lg-12 text-center\">\n                    {userwelcome}\n                    <p id=\"lab\" class=\"lead\">Here, you can access your wishlist. Stay tuned for more features in the near future!</p>\n\n                    <div id=\"wishlistbtn\">\n                        {/* Added link to wishlist */}\n                        <Link to=\"/wishlist\">\n                            <Button\n                            class=\"btn btn-danger\" \n                                    id=\"mywishlist\" \n                                    name=\"mywishlist\" \n                                    size=\"lg\">\n                                My Wishlist\n                            </Button>\n                        </Link>\n                        \n                        {/* Link to page where you can view your major courses */}\n                        {/*<Link to =\"/major\" id=\"linkMajor\">\n                            <Button\n                            class=\"btn btn-danger\"\n                            id=\"myMajor\"\n                            name=\"myMajor\"\n                            size=\"lg\">\n                                Select Your Major\n                            </Button>\n                        </Link>*/}\n\n                    </div>\n\n                    <div id=\"wishlist\">\n\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default UserPage;","//imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from '../Home/Table';\nimport jwt from 'jwt-decode';\nimport {Link} from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\nimport './wishlist.css';\n\nimport toast from 'toasted-notes'; \nimport 'toasted-notes/src/styles.css';\n\nclass Wishlist extends React.Component {\n\n    constructor() {\n        super();\n        \n        this.removeCourses = this.removeCourses.bind(this);\n        this.renderWishlistTerms = this.renderWishlistTerms.bind(this);\n\n        this.viewWishlist();\n    }\n\n    renderWishlistTerms(data) {\n        /* Method to show the different terms in wishlist\n        as tables\n        */\n       //Loop through each term returned by flask\n       let i = 0;\n        Object.keys(data).map( (key) => { \n            console.log(key);\n            const term_div = document.getElementById(\"wishlist\").appendChild(document.createElement('div'));\n            /* Set id of the key on the term div */\n            term_div.setAttribute(\"id\", key);\n            //<Table data={data[key]} type=\"homepage\" />\n            //Render many rows of the table based on terms \n            ReactDOM.render(\n                <div id={key}>\n                    <h2 id=\"termWishlistHeader\">{key}</h2>\n                    <Table id=\"termWishlist\" data={data[key]} type=\"homepage\" />\n                </div>,\n                term_div\n            )\n            i += 1;\n        })\n        if (i === 0) {\n            ReactDOM.render(<h3 id=\"termWishlistHeader\">Empty wishlist.</h3>, document.getElementById(\"wishlist\"))\n        }\n\n    }\n    removeCourses() {\n        //set courses to delete to selected courses\n        let cToDelete = JSON.parse(localStorage.getItem(\"checkedCourses\"))\n        \n        if (cToDelete.length === 0) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>No courses to delete.</h5>)\n            return\n        }\n        //filter out courses that should be removed from array \n        //console.log(this.state.courses);\n        \n        //Iterate through items that should be deleted\n        for (var i = 0; i < cToDelete.length; i++) {\n\n            //save course that should be deleted\n            let currDelete = cToDelete[i];\n            //save the current semester and all courses\n            //currently in the wishlist for that semester\n            let currSem = cToDelete[i][\"Semester\"];\n            let currentTermArray = this.state.courses[currSem];\n            \n            //iterate through courses currently in the wishlist for\n            //that semester\n            for (var courseIdx = 0; courseIdx < currentTermArray.length; courseIdx++) {\n\n                //compare information for course to delete\n                //with information for current course inwishlist\n                const currCourse = currentTermArray[courseIdx][\"Catalog Link\"][0];\n                const currProf = currentTermArray[courseIdx][\"RateMyProfessor Link\"][0];\n                const currSection = currentTermArray[courseIdx][\"Section\"];\n\n                //if information matches, remove course from state\n                // and save state\n                if (currCourse===currDelete[\"Catalog Link\"][0] && currProf===currDelete[\"RateMyProfessor Link\"][0] && currSection===currDelete[\"Section\"]) {\n                    currentTermArray.splice(courseIdx, 1);\n                    this.state[currSem] = currentTermArray;\n                    this.forceUpdate();\n                }\n            }\n        }\n\n        //reset checked courses\n        localStorage.setItem(\"checkedCourses\", JSON.stringify([]));\n        //update db with call to API\n        let url = \"http://packranks-backend.herokuapp.com/resetWishlist\"\n        //reset the wishlist with the updated state, \n        //with the removed courses no longer in the state\n        fetch( \n            url, {\n                method: \"POST\",\n                body: JSON.stringify(\n                    {wishlist:this.state.courses,\n                    token: localStorage.token\n                    }\n                )\n            }\n        ).then(\n        response => response.json()\n        )\n        //Removes all current term elements so they can be reset\n        //resets wishlist internal elements to null so they can be re-rendered\n        document.getElementById(\"wishlist\").innerHTML = \"\";\n        \n        //call function to render remaining courses if there\n        //are any.\n        this.viewWishlist();\n    }\n\n    viewWishlist() {\n        const UserPage = this;\n        let url = \"http://packranks-backend.herokuapp.com/viewWishlist\";\n        fetch( \n            url, {\n                method: \"GET\",\n                headers: {\"token\": localStorage.token }\n            }\n        ).then(\n        response => response.json()\n        ).then(\n            data => this.setState({\n                courses: data\n            },\n            () => {\n                // Code to show wishlist by terms \n                //call function to render wishlist items\n                //by the term they are in.\n                this.renderWishlistTerms(data);\n            }\n            )\n        )\n    }\n\n    render() {\n        let identity = jwt(localStorage.token).identity;\n        return (\n            <div>\n                <h1 id=\"welcome\" className=\"mt-5\"><strong>{identity.first_name}'s</strong> Wishlist</h1>\n                \n                <div id=\"backtohomepage\">\n                        {/* Added link to wishlist */}\n                        <Link to=\"/homepage\">\n                            <Button\n                            className=\"btn btn-danger\" \n                                    id=\"backtohmpg\" \n                                    name=\"backtohmpg\" \n                                    size=\"lg\">\n                                Back to Dashboard\n                            </Button>\n                        </Link>\n                </div>\n\n                <div id=\"termName\">\n\n                </div>\n                <div id=\"wishlist\">\n\n                </div>\n\n                <div id=\"delWish\">\n\n                </div>\n\n                <div id=\"deleteItems\">\n                        {/* Added delete wishlist course functionality. */}\n                        <Button\n                            className=\"btn btn-danger\" \n                            id=\"delWishlist\"\n                            name=\"delWishlist\" \n                            size=\"lg\"\n                            onClick={this.removeCourses}>\n                            Delete Selected Rows from Wishlist\n                        </Button>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Wishlist;","import React from 'react';\nimport {BrowserRouter as Router, Route, Redirect} from 'react-router-dom';\nimport Navbar from \"../Navbar/Navbar\";\n\nclass ProtectedRoute extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() { \n        const Component = this.props.component;\n        const isAuthenticated = (localStorage.token !== undefined);\n        //console.log(this_path);\n        \n        return isAuthenticated ? (\n            <div>\n                <Navbar/>\n                <Component />\n            </div>\n        ) : (\n            <Redirect to={{pathname: \"/login\"}}/>\n        )\n    }\n}\nexport default ProtectedRoute;","import React, { useState } from \"react\";\n//import { Button, FormGroup, FormControl, FormLabel, FormText, FormCheck } from \"react-bootstrap\";\nimport \"./ForgotPass.css\";\nimport \"./static/images/icons/favicon.ico\";\nimport \"./static/vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./static/fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./static/fonts/Linearicons-Free-v1.0.0/icon-font.min.css\";\nimport \"./static/vendor/animate/animate.css\";\nimport \"./static/vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./static/vendor/select2/select2.min.css\";\nimport \"./static/css/util.css\";\nimport \"./static/css/main.css\";\n//import Alert from 'react-s-alert';\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css';\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Redirect\n} from 'react-router-dom';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nclass ForgotPass extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.onEmailChange = this.onEmailChange.bind(this);\n    this.onReCaptcha = this.onReCaptcha.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n\n    this.state = {\n      re_captcha: false,\n      redirect: \"/forgotsuccess\"\n    }\n  }\n\n  handleReset(event) {\n      event.preventDefault();\n\n      let validInput = true;\n\n      let email=this.state.login_email;\n\n      {/* Check for valid email */}\n      if (!(new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(email))) {  \n        \n        //throw error with toast-notes\n        toast.notify(<h5 id=\"incorrect\">Please enter a valid email address.</h5>)\n        validInput = false;\n      }\n\n      {/* Check for recaptcha completion */}\n      if (!this.state.re_captcha) {\n        toast.notify(<h5 style={{color: '#cc0000'}}>Please complete the ReCaptcha.</h5>)\n        validInput = false;\n      }\n      \n      if (validInput) {\n\n        let url = \"http://packranks-backend.herokuapp.com/resetLink\";\n        //let neutralMsg = <h5 id=\"success\"></h5>;\n\n        fetch(url,\n        {\n                method: \"POST\",\n                body: JSON.stringify({\n                    email: email\n                })\n        }).then(\n            (response) => (response.json())\n        ).then((data) => {\n            {/*Successfully sent reset link */}\n            this.props.history.push({\n              pathname: \"/forgotsuccess\"\n            })\n\n        }).catch(function() { \n          {/* Notify user that link may have been sent. */}\n          return <Redirect to='/forgotsuccess'/>\n          })\n      \n      }\n      \n  }\n\n  onEmailChange(event) {\n    this.setState({login_email:event.target.value})\n  }\n  \n  onReCaptcha(event) {\n    this.setState({re_captcha: true});\n  }\n\n\n  render () {\n    return (\n      \n      <div>\n        \n        <div>\n          <title>Reset Password</title>\n        </div>\n        <div id=\"login-fail\">\n\n        </div>\n        <div>\n          <div className=\"limiter\">\n            <div className=\"container-login100\">\n              <div className=\"wrap-login100 p-l-50 p-r-50 p-t-77 p-b-30\">\n                <form className=\"login100-form validate-form\">\n                <div id=\"forgotPage\">\n                  <span className=\"login100-form-title p-b-20\">\n                    Reset Password\n                  </span>\n                  <div className=\"text-center p-b-30\">\n                    <span className=\"txt1\">\n                        Enter your email and we'll send you a link to reset your password.\n                    </span>\n                  </div>\n                </div>\n                  {/* Email form */}\n                  <div className=\"wrap-input100 validate-input m-b-16\" data-validate=\"Valid email is required: ex@abc.xyz\">\n                    <input id=\"emailForm\" \n                      className=\"input100\" \n                      type=\"text\" \n                      name=\"email\" \n                      placeholder=\"Email\"\n                      onChange={this.onEmailChange} />\n\n                    <span className=\"focus-input100\" />\n                    <span className=\"symbol-input100\">\n                      <span className=\"lnr lnr-envelope\" />\n                    </span>\n                  </div>\n                  \n                  {/* ReCAPTCHA */}\n                  <div id=\"recap\">\n                    <ReCAPTCHA\n                          sitekey=\"6Lf9MvwUAAAAAHxBJLXSVvLlimkdHv-CHeLYzEYc\"\n                          onChange={this.onReCaptcha}\n                    />\n                  </div>\n\n                  \n                  <div className=\"container-login100-form-btn p-t-25\">\n                    <button \n                      onClick={this.handleReset}\n                      className=\"login100-form-btn\">\n                      Send Reset Link\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default withRouter(ForgotPass);","import React from 'react';\nimport {PayPalButton} from \"react-paypal-button-v2\";\nimport \"./Donate.css\"\n\nclass Donate extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            isDonate: false,\n            donationAmount: 0.0  \n        };\n        this.setIsDonate=this.setIsDonate.bind(this);\n        this.setDonationAmount=this.setDonationAmount.bind(this);\n    }\n\n    setIsDonate(){\n        this.setState(\n            prevState => {\n                return {\n                  isDonate : !this.state.isDonate\n                };\n            }\n        ); \n    }\n\n    async setDonationAmount(event){\n        await this.setState({donationAmount : event.target.value})\n    }\n\n\n    render(){\n       if(this.state.isDonate === true){\n        return(\n            <div>\n                <div className=\"container-contact100\">\n                    <div id=\"donationForm\" className=\"wrap-contact100\">\n                        <p id=\"descriptionDonate\" class=\"lead\">Thank you for donating and supporting PackRanks! <br/> - Your Friends at PackRanks</p>\n                        <button onClick={this.setIsDonate}>Donate!</button>\n                    </div>\n                </div>\n            </div>)\n       }\n\n\n       else{\n        return(\n            <div>\n                <div className=\"container-contact100\">\n                <div id=\"donationForm\" className=\"wrap-contact100\">\n                        <form\n                            className=\"contact100-form validate-form\">\n                            {/*Form title */}\n                            <span id=\"formTitle\" className=\"contact100-form-title\">\n                                Donate to PackRanks!\n                            </span>\n\n                            <p id=\"descriptionDonate\" class=\"lead\">Please donate any amount of money to PackRanks to make our service free for the whole wolfpack! </p>\n\n\n                            <label id=\"donationAmountLabel\" class=\"lead\" htmlFor=\"donationAmount\">Amount: $</label>\n                            <div className=\"wrap-input100 rs1 validate-input\">\n                                <input className=\"input100\" \n                                    type=\"number\" \n                                    name=\"donationAmountBox\" \n                                    placeholder=\"0.0\"\n                                    required\n                                    min=\"0.01\" step=\"0.01\"\n                                    onChange={value => this.setDonationAmount(value)} />\n                                <span className=\"focus-input100\" />\n                            </div>\n                        </form>\n                       \n                        <PayPalButton\n                            amount={this.state.donationAmount}\n                            currency={\"USD\"}\n                            createOrder={\n                                this.setIsDonate\n                            }\n                        />\n                    </div>\n                    </div>\n            </div>)\n       }\n    }\n}\n\n\nexport default Donate; ","import React, { useState } from \"react\";\n\nimport \"./vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./fonts/iconic/css/material-design-iconic-font.min.css\";\nimport \"./images/icons/favicon.ico\";\nimport \"./vendor/animate/animate.css\";\nimport \"./vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./vendor/animsition/css/animsition.min.css\";\nimport \"./vendor/select2/select2.min.css\";\nimport \"./vendor/daterangepicker/daterangepicker.css\";\n\nimport \"./css/util.css\";\nimport \"./css/main.css\";\nimport \"./ResetPass.css\";\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport {withRouter} from 'react-router-dom';\n\nimport toast from 'toasted-notes'; \nimport 'toasted-notes/src/styles.css';\n\nclass ResetPass extends React.Component { \n\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: \"\",\n            confirmpassword: \"\",\n            re_captcha: false\n        }\n\n        this.handleResetPass = this.handleResetPass.bind(this);\n\n        this.onPasswordChange = this.onPasswordChange.bind(this);\n        this.onConfirmChange = this.onConfirmChange.bind(this);\n        this.onReCaptcha = this.onReCaptcha.bind(this);\n    }\n\n    handleResetPass(e) {\n        e.preventDefault();\n        \n        let validInput = true;\n\n        {/* Set variables to form values */}\n        let pwd = this.state.password;\n        let confirm_pwd = this.state.confirmpassword;\n        let email = this.props.match.params.email;\n        let token = this.props.match.params.token;\n\n        {/* Check for password match */}\n        if (pwd !== confirm_pwd) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Passwords do not match!</h5>)\n            validInput = false;\n        }\n\n        { /* Check for valid password length */ }\n        if (pwd.length < 8) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Password must be 8 or more characters!</h5>)\n            validInput = false;\n        }\n\n        {/* Check for recaptcha completion */}\n        if (!this.state.re_captcha) {\n            toast.notify(<h5 style={{color: '#cc0000'}}>Please complete the ReCaptcha.</h5>)\n            validInput = false;\n        }\n\n        if (validInput) {\n            console.log(this.state);\n\n            let url = \"http://packranks-backend.herokuapp.com/resetPass\";\n            fetch(url,\n            {\n                    method: \"POST\",\n                    body: JSON.stringify({\n                        email: email,\n                        password:pwd,\n                        token: token\n                    })\n            }).then(\n                (response) => (response.json())\n            ).then((data) => {\n                console.log(data);\n                if (data.success === true) {\n                    toast.notify(<h5 style={{color: 'green'}}>You have successfully reset your password for PackRanks! Login to access your homepage!</h5>)\n                    this.props.history.push({\n                        pathname: \"/login\"\n                    })\n                }\n                else {\n                    //Handle expired tokens.\n                    toast.notify(<h5 style={{color: '#cc0000'}}>Your reset password token has expired. Please request a new one at <a href=\"/forgotpassword\">this link.</a>.</h5>)\n                }\n            })\n        }\n    }\n\n    onPasswordChange(event) {\n        this.setState({password: event.target.value})\n    }\n    \n    onConfirmChange(event) {\n        this.setState({confirmpassword: event.target.value})\n      }\n\n    onReCaptcha(event) {\n        this.setState({re_captcha: true});\n    }\n\n    render() {\n        return (\n        <div>\n            <title>Reset Password</title>\n            <meta charSet=\"UTF-8\" />\n            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n            {/*===============================================================================================*/}\n            <link rel=\"icon\" type=\"image/png\" href=\"images/icons/favicon.ico\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/bootstrap/css/bootstrap.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/font-awesome-4.7.0/css/font-awesome.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"fonts/iconic/css/material-design-iconic-font.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animate/animate.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/css-hamburgers/hamburgers.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/animsition/css/animsition.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/select2/select2.min.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"vendor/daterangepicker/daterangepicker.css\" />\n            {/*===============================================================================================*/}\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"css/util.css\" />\n            <link rel=\"stylesheet\" type=\"text/css\" href=\"css/main.css\" />\n            {/*===============================================================================================*/}\n            <div className=\"container-contact100\">\n            <div className=\"wrap-contact100\">\n                <form \n                    onSubmit={this.handleResetPass}\n                    method=\"POST\"\n                    className=\"contact100-form validate-form\">\n                    {/*Form title */}\n                    <span className=\"contact100-form-title\">\n                        Enter New Password\n                    </span>\n\n                    { /* ENTER password */ }\n                    <label className=\"label-input100\" htmlFor=\"email\">Password *</label>\n                    <div className=\"wrap-input100 validate-input\">\n                        <input id=\"password\" \n                            className=\"input100\" \n                            type=\"password\" \n                            name=\"password\" \n                            placeholder=\"8 or more characters\"\n                            onChange={this.onPasswordChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    { /* CONFIRM password */ }\n                    <label className=\"label-input100\" htmlFor=\"email\">Confirm Password *</label>\n                    <div className=\"wrap-input100 validate-input\">\n                        <input id=\"password\" \n                            className=\"input100\" \n                            type=\"password\" \n                            name=\"password\" \n                            placeholder=\"8 or more characters\"\n                            onChange={this.onConfirmChange} />\n                        <span className=\"focus-input100\" />\n                    </div>\n\n                    {/* ReCAPTCHA */}\n                    <ReCAPTCHA\n                        sitekey=\"6Lf9MvwUAAAAAHxBJLXSVvLlimkdHv-CHeLYzEYc\"\n                        onChange={this.onReCaptcha}\n                    />\n\n                    { /* Submit Button */ }\n                    <div id=\"submitButton\" className=\"container-contact100-form-btn\">\n                        <button \n                            type=\"submit\"\n                            className=\"contact100-form-btn\">\n                        <span>\n                            Reset Password\n                            <i className=\"zmdi zmdi-arrow-right m-l-8\" />\n                        </span>\n                        </button>\n                    </div>\n                </form>\n            </div>\n            </div>\n        </div>\n        );\n    }\n}\nexport default withRouter(ResetPass);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-accessible-accordion/dist/fancy-example.css';\nimport {\n    Accordion,\n    AccordionItem,\n    AccordionItemHeading,\n    AccordionItemButton,\n    AccordionItemPanel,\n} from 'react-accessible-accordion';\nimport {Button} from 'react-bootstrap';\nimport \"./majorcourses.css\";\nimport Table from '../../Home/Table';\n// Demo styles, see 'Styles' section below for some notes on use.\n\nclass MajorCourses extends React.Component {\n    constructor(props) {\n        super(props);\n        \n        this.state = {\n            url: \"http://localhost:5000\",\n            term: \"2020 Fall Term\",\n            num_courses: 5\n        }\n\n        this.displayCourses = this.displayCourses.bind(this);\n        this.loadCourseTable = this.loadCourseTable.bind(this);\n    }\n\n    componentDidMount() {\n        this.displayCourses();\n    }\n\n    //load the table for the item selected\n    loadCourseTable(index) {\n        \n        //if the index is a number, the item is being opened\n        if (index.length > 0) {\n\n            //save course that was selected\n            let courseSelected = this.props.courses[index]; \n\n            //notify user that information is loading\n            ReactDOM.render(\n                <h4>Loading...</h4>,\n                document.getElementById(courseSelected)\n            )\n\n            //save url to get course info\n            const dept_url = this.state.url + \"/dept\";\n\n            //save dept and course code\n            const course_split = courseSelected.split(\" \");\n            const dept_name = course_split[0];\n            const course_num = course_split[1];\n\n            fetch(\n                dept_url, {\n                    method: \"GET\",\n                    headers: {\n                        \"Dept\": dept_name,\n                        \"term\": this.state.term,\n                        \"level_min\": course_num,\n                        \"level_max\": course_num,\n                        \"num_courses\": this.state.num_courses\n                    }\n            }\n            ).then(\n            response => response.json()\n            ).then(\n                //display data for the course that was clicked on\n                coursedata => {\n                    //if there is data for the course\n                    if (coursedata.length > 0 && coursedata[0] !==\"NotNumeric\") {\n                        ReactDOM.render(\n                        <div>\n                            <p id=\"tableNoteMsg\" class=\"lead\"><em>Note: If you see a higher rated course that is near the bottom of the list, it is either a closed section or it has the same professor as a course higher in the list.</em></p>\n                            <Table data={coursedata}/>\n                        </div>, \n                        \n                        document.getElementById(courseSelected)\n                        )\n                    }\n                    //else\n                    else {\n                        ReactDOM.render(\n                            <div>\n                                <p>Course is either closed or unavailable for the next semester.</p>\n                            </div>,\n                            document.getElementById(courseSelected)\n                        )\n                    }\n                }\n            )\n        }\n    }\n\n    displayCourses() {\n\n        ReactDOM.render(\n            <Accordion onChange={this.loadCourseTable} allowZeroExpanded={true}>\n\n                {/*Loop through courses in the major and display panel*/}\n                {this.props.courses.map(\n                course => <AccordionItem>\n                            <AccordionItemHeading>\n                                <AccordionItemButton>\n                                    {course}\n                                </AccordionItemButton>\n                            </AccordionItemHeading>\n                            <AccordionItemPanel>\n                                <div id={course}>\n\n                                </div>\n                            </AccordionItemPanel>\n                        </AccordionItem>\n                )}\n            </Accordion>,\n\n            //display below major\n            document.getElementById(\"courseDiv\")\n        )\n    }\n    render() {\n        return (\n            <div id=\"courseDiv\">\n            </div>\n        );\n    }\n}\nexport default MajorCourses;\n\n\n","import React, { useState } from \"react\";\n//import { Button, FormGroup, FormControl, FormLabel, FormText, FormCheck } from \"react-bootstrap\";\nimport \"./ForgotSuccess.css\";\nimport \"../static/images/icons/favicon.ico\";\nimport \"../static/vendor/bootstrap/css/bootstrap.min.css\";\nimport \"../static/fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"../static/fonts/Linearicons-Free-v1.0.0/icon-font.min.css\";\nimport \"../static/vendor/animate/animate.css\";\nimport \"../static/vendor/css-hamburgers/hamburgers.min.css\";\nimport \"../static/vendor/select2/select2.min.css\";\nimport \"../static/css/util.css\";\nimport \"../static/css/main.css\";\n//import Alert from 'react-s-alert';\nimport toast from 'toasted-notes' \nimport 'toasted-notes/src/styles.css';\nimport {\n  BrowserRouter as Router,\n  withRouter\n} from 'react-router-dom';\nimport ReCAPTCHA from \"react-google-recaptcha\";\n\nclass ForgotSuccess extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.sendHome = this.sendHome.bind(this);\n    this.sendRetry = this.sendRetry.bind(this);\n  }\n\n  sendHome() {\n      this.props.history.push({\n        pathname: \"/\"\n      })\n  }\n  \n  sendRetry() {\n      this.props.history.push({\n          pathname: \"/forgotpassword\"\n      })\n  }\n\n  render () {\n    return (\n      \n      <div>\n        \n        <div>\n          <title>Reset Password</title>\n        </div>\n        <div id=\"login-fail\">\n\n        </div>\n        <div>\n          <div className=\"limiter\">\n            <div className=\"container-login100\">\n              <div className=\"wrap-login100 p-l-50 p-r-50 p-t-77 p-b-30\">\n                <form className=\"login100-form validate-form\">\n                <div>\n                  <span className=\"login100-form-title p-b-20\">\n                    Forgot Password\n                  </span>\n                  <div className=\"text-center p-b-30\">\n                    <span className=\"txt1\">\n                    If we have your email address in the system, you'll receive a message with a link to reset your password.\n                    </span>\n                    <div  className=\"dontSeeIt\"><br/>If you don't see an email from us, check your spam or junk mail.\n                    </div>\n                  </div>\n                </div>\n                  \n                  <div className=\"container-login100-form-btn\">\n                    <button \n                      onClick={this.sendHome}\n                      className=\"login100-form-btn\">\n                      Back to Home\n                    </button>\n                  </div>\n                  <div className=\"container-login100-form-btn p-t-15\">\n                    <button\n                      id=\"retryForgot\" \n                      onClick={this.sendRetry}\n                      className=\"login100-form-btn\">\n                      Retry\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default withRouter(ForgotSuccess);","//imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from '../Home/Table';\nimport jwt from 'jwt-decode';\nimport {Link} from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\nimport './major.css';\nimport Select from 'react-select';\n\nimport toast from 'toasted-notes'; \nimport 'toasted-notes/src/styles.css';\n\nimport MajorCourses from './CourseDisplay/MajorCourses';\n\nclass Major extends React.Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            url: \"http://packranks-backend.herokuapp.com\",\n            major: \"\",\n            courses: []\n        }\n        \n        this.checkUserMajor = this.checkUserMajor.bind(this);\n        this.renderMajorCourses = this.renderMajorCourses.bind(this);\n        this.requestAMajor = this.requestAMajor.bind(this);\n        this.displayMajors = this.displayMajors.bind(this);\n        this.saveMajor = this.saveMajor.bind(this);\n        \n        this.checkUserMajor();\n    }\n\n    //method that saves the user major that was selected\n    saveMajor() {\n        //save user major that was selected\n        const major = this.state.major;\n\n        const check_url = this.state.url + \"/saveMajor\";\n\n        //call db with major to save major info for user\n        fetch (\n            check_url, {\n                method: \"GET\",\n                headers: {\"token\": localStorage.token, \"major\": major}\n            }\n        ).then(\n            response => response.json()\n        ).then (\n            //once the process is complete, render the user major information\n            (data) => {\n                this.checkUserMajor();\n            }\n        )\n\n    }\n\n    //method that displays all majors in the college selected\n    displayMajors(college) {\n\n        //url to get list of majors from backend\n        const check_url = this.state.url + \"/getMajorList\"\n\n        //fetch list of majors from backend\n        fetch (\n            check_url, {\n                method: \"GET\",\n                headers: {\"college\": college}\n            }\n        ).then(\n            response => response.json()\n        ).then(\n            //save list of majors given college\n            data => {\n                let majors = data.majors;\n\n                //save labels for each college mapped to values\n                const majorFinal = [];\n                for (var i = 0; i < majors.length; i++) {\n                    majorFinal[i] = {label: majors[i],\n                                value: majors[i]}\n                }\n                ReactDOM.render(\n                    <div>\n                        <div id=\"majorSelect\">\n                            <label for=\"whichmajor\" class=\"lead\">Please select a major from the dropdown.</label>\n                            <div id=\"whichmajor\" style={{width:\"300px\", margin:\"0 auto\"}}>\n                                <Select className=\"numMajorSelect\"\n                                        id='num_major_select' \n                                        options={majorFinal} \n                                        //defaultValue={numCourses[0]}\n                                        onChange={optionValue => this.setState({major:optionValue.value})}\n                                />\n                            </div>\n                        </div>\n                        \n                        {/* button to select a specific major */}\n                        <div id=\"whichgepdiv\">\n                            <Button\n                                class=\"btn btn-danger\" \n                                id=\"whichmajorbtn\" \n                                name=\"whichmajorbtn\" \n                                onClick={this.saveMajor}\n                                size=\"lg\">\n                                Confirm\n                            </Button>\n                        </div>\n                    </div>,\n                    document.getElementById(\"majorCollege\")\n                )\n            }\n        )\n    }\n\n    //method that checks if a user has a major\n    //if they do, displays pertinent info\n    //else, displays prompt to select a major\n    checkUserMajor() {\n        const identity = jwt(localStorage.token).identity;\n        //get user email and url to call\n        const email = identity.email;\n        const check_url = this.state.url + \"/checkMajor\";\n\n        //check if the user has a major\n        fetch( \n            check_url , {\n                method: \"GET\",\n                headers: {\"token\": localStorage.token }\n            }\n        ).then(\n        response => response.json()\n        ).then(\n            (data) => {\n\n                //if the user has a major\n                if (data.success) {\n                    this.setState({\n                        major: data.major,\n                        courses: data.courses\n                        },\n                        //code after major and courses is set\n\n                        //method that shows courses for the user's major\n                        ()=>{this.renderMajorCourses(data);}\n                    )\n                }\n                //if the user has not selecfted a major\n                else {\n                    //method that prompts the user to select a major\n                    this.requestAMajor();\n                }\n            }\n        )\n    }\n\n    //Method that renders the course information for a given major\n    renderMajorCourses(data) {\n\n        const major = data.major;\n        const major_courses = data.courses;\n        let identity = jwt(localStorage.token).identity;\n\n        ReactDOM.render(\n            <div>\n                <div id=\"majordisplay\">\n                    <h2 id=\"yourMajor\"><em>{identity.first_name}'s Major:</em> <strong>{major}</strong></h2>\n                    <div id=\"changeMajorDiv\">\n                        <Button className = \"btn btn-danger\"\n                            id=\"changeMajor\"\n                            name=\"changeMajor\"\n                            size=\"lg\"\n                            onClick={this.requestAMajor}>\n                                Change Your Major\n                        </Button>\n                    </div>\n                </div>\n                <MajorCourses major={major} courses={major_courses}/>\n            </div>,\n            document.getElementById(\"majorInfo\")\n        )\n    }\n\n    //Method that prompts the user to select their major\n    requestAMajor() {\n\n        //save all college options for majors\n        const collegeOptions = ['Agricultural Institute', 'Agriculture & Life Sciences',\n            'Design', 'Education', 'Engineering', 'Humanities & Social Sciences',\n            'Management', 'Natural Resources', 'Sciences', 'Textiles'];\n        const collegeLabels = collegeOptions.map((option) => (\n            {label: option}\n        ));\n\n        //save codes for each college in NCSU\n        const collegeOptionValues =  [\"CDI\", \"CALS\", \"DN\", \"CED\", \"COE\", \"CHASS\", \"MGMT\", \"CNR\", \"COS\", \"TEX\"];\n        const collegeValues = collegeOptionValues.map((optionValue) => (\n            {value: optionValue}\n        ));\n\n        //save labels for each college mapped to values\n        const collegeFinal = [];\n        for (var i = 0; i < collegeLabels.length; i++) {\n            collegeFinal[i] = {label: collegeLabels[i].label,\n                           value: collegeValues[i].value}\n        }\n\n        ReactDOM.render(\n            <div id=\"type\" class=\"text-center\">\n                    <h2 class=\"mt-5\">Select a Major</h2>\n                    <label for=\"typeofgep\" class=\"lead\">Please select the college that your major is in.</label>\n                    \n                    {/* selectable options for colleges at ncsu */}\n                    {/* */}\n                    <div id=\"selectAMajor\" style={{width:\"300px\", margin:\"0 auto\"}}>\n                        <Select className=\"collegeSelect\"\n                                id='college_list_select' \n                                options={collegeFinal} \n                                //onChange={this.setState({select_value: document.getElementById('gep_list_select').value})}\n                                onChange={optionValue => this.displayMajors(optionValue.value)}\n                        />\n                    </div>\n\n                    {/* Div that will show user majors for the college selected*/}\n                    <div id=\"majorCollege\">\n\n                    </div>\n                    \n                </div>,\n            document.getElementById(\"majorInfo\")\n        )\n    } \n\n    render() {\n        let identity = jwt(localStorage.token).identity;\n        return (\n            <div>\n                <h1 id=\"welcome\" className=\"mt-5\">Your Major Information</h1>\n                \n                <div id=\"backtohomepage\">\n                        {/* Added link to wishlist */}\n                        <Link to=\"/homepage\">\n                            <Button\n                            className=\"btn btn-danger\" \n                                    id=\"backtohmpg\" \n                                    name=\"backtohmpg\" \n                                    size=\"lg\">\n                                Back\n                            </Button>\n                        </Link>\n                </div>\n\n                <div id=\"majorInfo\">\n\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Major;","import React from 'react';\n//import './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport FirstPrompt from './components/Home/FirstPrompt';\nimport MainWelcome from './components/Home/MainWelcome';\nimport \"./css/app.css\";\nimport Login from './components/Login/LoginPage';\nimport About from \"./components/About/AboutPage\";\nimport Help from './components/Help/HelpPage';\nimport Contact from \"./components/Contact/ContactPage\";\nimport SignUp from './components/SignUp/SignUp'\nimport UserPage from './components/User/UserPage';\nimport Wishlist from './components/Wishlist/Wishlist';\nimport ProtectedRoute from './components/Protected/ProtectedRoute';\nimport Donate from './components/Donate/Donate.jsx'\nimport ForgotPass from './components/ForgotPassword/ForgotPass';\nimport ResetPass from './components/ResetPassword/ResetPass';\nimport Major from './components/Major/Major.jsx';\nimport ForgotSuccess from './components/ForgotPassword/ForgotSuccess/ForgotSuccess';\nimport Footer from './components/Footer/Footer';\nimport {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\n\n\n\n/**\n * App.js organizes all components to be rendered and exports them to index.js. \n */\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      profile_data: \"\"\n    }\n\n  }\n  liftStateUp = (data) => \n  {\n    this.setState({data: data})\n  }\n  render() {\n\n    return (\n      <div className=\"App\">\n        {/* Always include Navbar on top */ }    \n\n        <Router>\n          { /* Route to main page */ }\n          <Route exact path = \"/\">\n              <header className=\"App-header\"> \n                  <Navbar /> \n                  <MainWelcome profile_data={this.state}/>\n                  <FirstPrompt />\n              </header>\n          </Route>\n          \n\n          { /* Route to login page */ }\n          <Route exact path = \"/login\">\n            <Navbar />\n            <Login liftStateUp={this.liftStateUp}/>\n          </Route>\n\n          { /* Route to about page. */ }\n          <Route exact path = \"/about\">     \n            <Navbar />\n            <About />\n          </Route>\n\n          { /* Route to Help page. */}\n          <Route exact path = \"/help\">\n            <Navbar />\n            <Help />\n          </Route>\n\n          {/*\n          <Route exact path=\"/donate\"> \n            <Navbar/>\n            <Donate/>\n          </Route>*/}\n\n\n          { /* Route to contact page. */ }\n          <Route exact path = \"/contact\">\n            <Navbar />\n            <Contact />\n          </Route>\n\n          {/* Route to signup page. */}\n          <Route exact path = \"/signup\">\n            <Navbar />\n            <SignUp />\n          </Route>\n\n          {/* Route to user homepage */}\n          <Route exact path = \"/homepage\">\n            <ProtectedRoute component={UserPage}/>\n          </Route>\n\n          {/* Route to user wishlist. */}\n          {/* Protected so that you must be signed in to access wishlist */}\n          <Route exact path = \"/wishlist\">\n            <ProtectedRoute component={Wishlist}/>\n          </Route>\n\n          {/* Route to selecting major/viewing easy courses*/}\n          {/* Protected so you must be signed in to access*/}\n          {/*\n          <Route exact path = \"/major\">\n            <ProtectedRoute component={Major}/>\n          </Route>*/}\n\n          { /* Route to forgot password */ }\n          <Route exact path = \"/forgotpassword\">\n            <Navbar />\n            <ForgotPass />\n          </Route>\n\n          { /* Route to reset password */ }\n          <Route exact path = \"/reset/:email/:token\">\n            <Navbar />\n            <ResetPass />\n          </Route>\n\n          { /* Route to forgot success */ }\n          <Route exact path = \"/forgotsuccess\">\n            <Navbar />\n            <ForgotSuccess />\n          </Route>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './css/bootstrap.css';\n/**\n * \n */\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}