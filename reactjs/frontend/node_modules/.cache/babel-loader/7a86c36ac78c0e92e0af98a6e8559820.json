{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/frontend/src/components/Login/LoginPage.jsx\";\nimport React, { useState } from \"react\"; //import { Button, FormGroup, FormControl, FormLabel, FormText, FormCheck } from \"react-bootstrap\";\n\nimport \"./Login.css\";\nimport \"./static/images/icons/favicon.ico\";\nimport \"./static/vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./static/fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./static/fonts/Linearicons-Free-v1.0.0/icon-font.min.css\";\nimport \"./static/vendor/animate/animate.css\";\nimport \"./static/vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./static/vendor/select2/select2.min.css\";\nimport \"./static/css/util.css\";\nimport \"./static/css/main.css\";\nimport GoogleLogin from 'react-google-login';\nimport { Button } from 'react-bootstrap';\nimport GoogleButton from 'react-google-button';\nimport ReactDOM from 'react-dom'; //import Alert from 'react-s-alert';\n\nimport { Alert } from 'react-bootstrap';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport { BrowserRouter as Router, Route, Link, Redirect, Switch, withRouter } from 'react-router-dom';\nimport Simplert from 'react-simplert';\nimport MainWelcome from '../Home/MainWelcome';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.googleSuccess = this.googleSuccess.bind(this);\n    this.googleFailure = this.googleFailure.bind(this);\n    this.onPwdChange = this.onPwdChange.bind(this);\n    this.onEmailChange = this.onEmailChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.state = {\n      first_name: null,\n      last_name: null,\n      email: null,\n      password: null,\n      login_email: null\n    };\n  }\n\n  handleLogin(event) {\n    event.preventDefault();\n    let validInput = true;\n    let email = this.state.login_email;\n    let pwd = this.state.password;\n    {\n      /* Check for valid email */\n    }\n\n    if (!new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(email)) {\n      //throw error with react-s-alert\n      Alert.error('Please enter a valid email address.', {\n        position: 'top',\n        timeout: 'none'\n      }); //alert(\"Please enter a valid email address.\")\n\n      validInput = false;\n    }\n\n    if (validInput) {\n      let url = \"http://localhost:5000/login\";\n      fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify({\n          email: email,\n          password: pwd\n        })\n      }).then(response => response.json()).then(data => {\n        {\n          /*Successfully logged in*/\n        }\n\n        if (data.success === true) {\n          localStorage.setItem(\"token\", data.token);\n          this.props.history.push({\n            pathname: \"/homepage\"\n          });\n        } else {\n          //Handle error in login here.\n          //throw error with react-s-alert\n\n          /*Alert.error(<h5>Email or password is incorrect.</h5>, {\n            position: 'top',\n            timeout: 'none'\n          });*/\n          ReactDOM.render( /*#__PURE__*/React.createElement(Alert, {\n            style: {\n              backgroundColor: \"#cc0000\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }\n          }, \"Email or password is incorrect\"), document.getElementById(\"login-fail\"));\n        }\n      });\n    }\n  }\n\n  onPwdChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  onEmailChange(event) {\n    this.setState({\n      login_email: event.target.value\n    });\n  } //Handles google successful login.\n\n\n  googleSuccess(response) {\n    //get data from google\n    const profile_obj = response.profileObj;\n    let url = \"http://localhost:5000/googleauth\"; //call Flask API with google user data.\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        first_name: profile_obj.givenName,\n        last_name: profile_obj.familyName,\n        email: profile_obj.email\n      })\n    }).then(response => response.json()).then(data => {\n      {\n        /*Successfully logged in*/\n      }\n\n      if (data.success === true) {\n        if (data.type === \"SignUp\") {\n          alert(\"Thank you for signing up for PackRanks! You will now be sent to your user homepage!\");\n        }\n\n        localStorage.setItem(\"token\", data.token);\n        this.props.history.push({\n          pathname: \"/homepage\"\n        });\n      } else {\n        //Handle error in login here.\n        alert(\"Email or password is incorrect.\");\n      }\n    });\n  }\n\n  googleFailure(response) {\n    //console.log(response);\n    //alert(\"Google Login failed. Please try again.\");\n    return ReactDOM.render( /*#__PURE__*/React.createElement(Simplert, {\n      showSimplert: true,\n      type: \"warning\",\n      title: \"Login Failed\",\n      message: \"Please attempt login again.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }\n    }), document.getElementById(\"login-fail\"));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }\n    }, \"Login to PackRanks\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"login-fail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"limiter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-login100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap-login100 p-l-50 p-r-50 p-t-77 p-b-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"login100-form validate-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"login100-form-title p-b-55\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 19\n      }\n    }, \"Login to PackRanks\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap-input100 validate-input m-b-16\",\n      \"data-validate\": \"Valid email is required: ex@abc.xyz\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"emailForm\",\n      className: \"input100\",\n      type: \"text\",\n      name: \"email\",\n      placeholder: \"Email\",\n      onChange: this.onEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"focus-input100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"symbol-input100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lnr lnr-envelope\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrap-input100 validate-input m-b-16\",\n      \"data-validate\": \"Password is required\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"pwdForm\",\n      className: \"input100\",\n      type: \"password\",\n      name: \"pass\",\n      placeholder: \"Password\",\n      onChange: this.onPwdChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"focus-input100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"symbol-input100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"lnr lnr-lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 23\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-login100-form-btn p-t-25\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleLogin,\n      className: \"login100-form-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 21\n      }\n    }, \"Login\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"orLoginWith\",\n      className: \"text-center w-full p-t-42 p-b-22\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"txt1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }\n    }, \"Or login with\")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"googleButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(GoogleLogin, {\n      id: \"googleButtonB\",\n      clientId: \"887022410797-hhdl5etksm3ob2m9fhhh05i9f81cond2.apps.googleusercontent.com\",\n      render: renderProps => /*#__PURE__*/React.createElement(GoogleButton, {\n        id: \"googlesignInbutton\",\n        type: \"light\",\n        onClick: renderProps.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 27\n        }\n      }),\n      buttonText: \"Login with Google\",\n      onSuccess: this.googleSuccess,\n      onFailure: this.googleFailure,\n      cookiePolicy: 'single_host_origin',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center p-t-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"txt1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }\n    }, \"You will automatically be signed up for PackRanks!\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center w-full p-t-30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"notamember\",\n      className: \"txt1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, \"Not a member?\"), /*#__PURE__*/React.createElement(\"a\", {\n      id: \"signUpNow\",\n      className: \"txt1 bo1 hov1\",\n      href: \"/signup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }\n    }, \"Sign up now\"))))))));\n  }\n\n}\n\nexport default withRouter(LoginPage);","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/src/components/Login/LoginPage.jsx"],"names":["React","useState","GoogleLogin","Button","GoogleButton","ReactDOM","Alert","BrowserRouter","Router","Route","Link","Redirect","Switch","withRouter","Simplert","MainWelcome","LoginPage","Component","constructor","props","googleSuccess","bind","googleFailure","onPwdChange","onEmailChange","handleLogin","state","first_name","last_name","email","password","login_email","event","preventDefault","validInput","pwd","RegExp","test","error","position","timeout","url","fetch","method","body","JSON","stringify","then","response","json","data","success","localStorage","setItem","token","history","push","pathname","render","backgroundColor","document","getElementById","setState","target","value","profile_obj","profileObj","givenName","familyName","type","alert","renderProps","onClick"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n//import { Button, FormGroup, FormControl, FormLabel, FormText, FormCheck } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport \"./static/images/icons/favicon.ico\";\nimport \"./static/vendor/bootstrap/css/bootstrap.min.css\";\nimport \"./static/fonts/font-awesome-4.7.0/css/font-awesome.min.css\";\nimport \"./static/fonts/Linearicons-Free-v1.0.0/icon-font.min.css\";\nimport \"./static/vendor/animate/animate.css\";\nimport \"./static/vendor/css-hamburgers/hamburgers.min.css\";\nimport \"./static/vendor/select2/select2.min.css\";\nimport \"./static/css/util.css\";\nimport \"./static/css/main.css\";\nimport GoogleLogin from 'react-google-login';\nimport {Button} from 'react-bootstrap';\nimport GoogleButton from 'react-google-button';\nimport ReactDOM from 'react-dom';\n//import Alert from 'react-s-alert';\nimport { Alert } from 'react-bootstrap';\nimport 'react-s-alert/dist/s-alert-default.css';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  Switch,\n  withRouter\n} from 'react-router-dom';\nimport Simplert from 'react-simplert';\nimport MainWelcome from '../Home/MainWelcome'\nclass LoginPage extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.googleSuccess = this.googleSuccess.bind(this);\n    this.googleFailure = this.googleFailure.bind(this);\n    this.onPwdChange = this.onPwdChange.bind(this);\n    this.onEmailChange = this.onEmailChange.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n\n    this.state = {\n      first_name: null,\n      last_name: null,\n      email: null,\n      password: null,\n      login_email: null\n    }\n  }\n\n  handleLogin(event) {\n      event.preventDefault();\n\n      let validInput = true;\n\n      let email=this.state.login_email;\n      let pwd=this.state.password;\n\n      {/* Check for valid email */}\n      if (!(new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i).test(email))) {  \n        \n        //throw error with react-s-alert\n        Alert.error('Please enter a valid email address.', {\n          position: 'top',\n          timeout: 'none'\n        });\n\n        //alert(\"Please enter a valid email address.\")\n        validInput = false;\n      }\n      \n      if (validInput) {\n\n        let url = \"http://localhost:5000/login\";\n        fetch(url,\n        {\n                method: \"POST\",\n                body: JSON.stringify({\n                    email: email,\n                    password:pwd\n                })\n        }).then(\n            (response) => (response.json())\n        ).then((data) => {\n            {/*Successfully logged in*/}\n            if (data.success === true) {\n              localStorage.setItem(\"token\", data.token);\n                this.props.history.push({\n                    pathname: \"/homepage\"\n                })\n            }\n            else {\n                //Handle error in login here.\n                //throw error with react-s-alert\n                /*Alert.error(<h5>Email or password is incorrect.</h5>, {\n                  position: 'top',\n                  timeout: 'none'\n                });*/\n                ReactDOM.render(<Alert \n                style={{backgroundColor: \"#cc0000\"}}>Email or password is incorrect</Alert>,\n                  document.getElementById(\"login-fail\"));\n        \n            }\n        })\n      }\n  }\n\n  onPwdChange(event) {\n    this.setState({password: event.target.value})\n  }\n  onEmailChange(event) {\n    this.setState({login_email:event.target.value})\n  }\n\n  //Handles google successful login.\n  googleSuccess(response) {\n\n    //get data from google\n    const profile_obj = response.profileObj;\n    \n    let url = \"http://localhost:5000/googleauth\";\n    //call Flask API with google user data.\n    fetch(url,\n      {\n              method: \"POST\",\n              body: JSON.stringify({\n                first_name: profile_obj.givenName,\n                last_name: profile_obj.familyName,\n                email: profile_obj.email\n              })\n      }).then(\n          (response) => (response.json())\n      ).then((data) => {\n          {/*Successfully logged in*/}\n          if (data.success === true) {\n            if (data.type === \"SignUp\") {\n              alert(\"Thank you for signing up for PackRanks! You will now be sent to your user homepage!\")\n            }\n            localStorage.setItem(\"token\", data.token);\n              this.props.history.push({\n                  pathname: \"/homepage\"\n              })\n          }\n          else {\n              //Handle error in login here.\n              alert(\"Email or password is incorrect.\")\n          }\n      })\n  }\n\n  googleFailure(response) {\n    //console.log(response);\n    //alert(\"Google Login failed. Please try again.\");\n    return (\n      ReactDOM.render(\n        <Simplert \n          showSimplert = {true}\n          type={\"warning\"}\n          title={\"Login Failed\"}\n          message={\"Please attempt login again.\"}\n        />\n          ,\n      document.getElementById(\"login-fail\")\n      )\n    \n    )\n  }\n\n  render () {\n    return (\n      \n      <div>\n        \n        <div>\n          <title>Login to PackRanks</title>\n        </div>\n        <div id=\"login-fail\">\n\n        </div>\n        <div>\n          <div className=\"limiter\">\n            <div className=\"container-login100\">\n              <div className=\"wrap-login100 p-l-50 p-r-50 p-t-77 p-b-30\">\n                <form className=\"login100-form validate-form\">\n                  <span className=\"login100-form-title p-b-55\">\n                    Login to PackRanks\n                  </span>\n\n                  {/* Email form */}\n                  <div className=\"wrap-input100 validate-input m-b-16\" data-validate=\"Valid email is required: ex@abc.xyz\">\n                    <input id=\"emailForm\" \n                      className=\"input100\" \n                      type=\"text\" \n                      name=\"email\" \n                      placeholder=\"Email\"\n                      onChange={this.onEmailChange} />\n\n                    <span className=\"focus-input100\" />\n                    <span className=\"symbol-input100\">\n                      <span className=\"lnr lnr-envelope\" />\n                    </span>\n                  </div>\n\n                  {/* Password Form */}\n                  <div className=\"wrap-input100 validate-input m-b-16\" data-validate=\"Password is required\">\n                    <input id=\"pwdForm\" \n                      className=\"input100\" \n                      type=\"password\" \n                      name=\"pass\" \n                      placeholder=\"Password\"\n                      onChange={this.onPwdChange} />\n                    <span className=\"focus-input100\" />\n                    <span className=\"symbol-input100\">\n                      <span className=\"lnr lnr-lock\" />\n                    </span>\n                  </div>\n                  {/*\n                  <div className=\"contact100-form-checkbox m-l-4\">\n                    <input className=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\" />\n                    <label className=\"label-checkbox100\" htmlFor=\"ckb1\">\n                      Remember me\n                    </label>\n                  </div>*/}\n                  <div className=\"container-login100-form-btn p-t-25\">\n                    <button \n                      onClick={this.handleLogin}\n                      className=\"login100-form-btn\">\n                      Login\n                    </button>\n                  </div>\n                  <div id=\"orLoginWith\" className=\"text-center w-full p-t-42 p-b-22\">\n                    <span className=\"txt1\">\n                      Or login with\n                    </span>\n                  </div>\n\n                  {/* Google Button goes here */ }\n                  \n                        {/*render={renderProps => (\n                          <GoogleButton type=\"light\" id=\"googleicon\"/>\n                        )}*/}\n                      {/*<Button\n                          id = \"googlesignInbutton\"\n                           onClick={renderProps.onClick} \n                           disabled={renderProps.disabled}>\n                             Sign in with Google\n                          </Button>*/}\n                  <div id=\"googleButton\">\n                    <GoogleLogin\n                        id = \"googleButtonB\"\n                        clientId=\"887022410797-hhdl5etksm3ob2m9fhhh05i9f81cond2.apps.googleusercontent.com\"\n                        render={renderProps => ( \n                          <GoogleButton \n                            id=\"googlesignInbutton\"\n                            type=\"light\"\n                            onClick={renderProps.onClick}/>\n                          \n                        )}\n                        buttonText=\"Login with Google\"\n                        onSuccess={this.googleSuccess}\n                        onFailure={this.googleFailure}\n                        cookiePolicy={'single_host_origin'}\n                    />\n                  </div>\n                  <div className = \"text-center p-t-10\">\n                    <span className=\"txt1\">You will automatically be signed up for PackRanks!</span>\n                  </div>\n                  <div className=\"text-center w-full p-t-30\">\n                    <span id=\"notamember\" className=\"txt1\">\n                      Not a member?\n                    </span>\n                    <a id=\"signUpNow\" className=\"txt1 bo1 hov1\" href=\"/signup\">\n                      Sign up now\t\t\t\t\t\t\t\n                    </a>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default withRouter(LoginPage);"]},"metadata":{},"sourceType":"module"}