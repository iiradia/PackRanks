{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/frontend/src/components/Home/Table.jsx\";\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport \"./css/table.css\";\nimport ReactTooltip from 'react-tooltip'; // Put data into each row \n\nconst onWishlist = props => {\n  alert(\"Successfully added to wishlist\");\n};\n\nconst RenderRow = props => {\n  return props.keys.map((key, index) => {\n    /* Check if key is professor */\n    if (key === \"Professor\" || key === \"Location\" || key === \"Course\") {\n      /* If there is no link, just return professor name. */\n      if (props.data[key][1] === 'None') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: props.data[key][0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 53\n          }\n        }, props.data[key][0]));\n      } else {\n        /* Else, return hyperlink that opens in new tab. */\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: props.data[key][0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: \"tablelinks\",\n          className: \"tablelinks\",\n          href: props.data[key][1],\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 33\n          }\n        }, props.data[key][0])));\n      }\n    } else if (key === \"Section\" && localStorage.token !== undefined) {\n      if (localStorage.token !== undefined) {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          id: \"sectionLink\",\n          key: props.data[key],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: \"tablelinks\",\n          onClick: onWishlist,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          id: \"tablelinks\",\n          \"data-tip\": \"Add to Wishlist\",\n          \"data-for\": \"ctool\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 37\n          }\n        }, props.data[key])), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"cdiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(ReactTooltip, {\n          id: \"ctool\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 33\n          }\n        }))));\n      }\n\n      els;\n    }\n    /*else if (key === \"Course\") {\n        \n        const title = props.data[key][\"course_title\"];\n        const code = props.data[key][\"code\"];\n        const descr = props.data[key][\"descr\"];\n        const titleStr = \n        <p>Course Title: {title}<br>{descr}</br></p>;\n         const optionsCursorTrueWithMargin = {\n            followCursor:true,\n            shiftX:0,\n            shiftY:50\n        }\n        /*<td id=\"cdiv\">\n        <strong><p data-tip={titleStr} data-for=\"ctool\">{code}</p></strong>\n        <div style={{width:50}}>\n            <ReactTooltip\n                id=\"ctool\" \n                place=\"right\" \n                effect=\"solid\"\n                backgroundColor={\"white\"} \n            />\n         </div>\n    </td>\n        \n        return  <td id=\"ctool\">\n                    <ReactHover options={optionsCursorTrueWithMargin}>\n                        <ReactHover.Trigger type=\"trigger\">\n                            <td id=\"cdiv\">\n                                <strong>{code}</strong>\n                            </td>\n                        </ReactHover.Trigger>\n                        <ReactHover.Hover id=\"ctool\" type=\"hover\">\n                            <p id=\"hovertxt\">Course Title: {title}<br />{descr}</p>\n                        </ReactHover.Hover>\n                    </ReactHover>\n               </td>\n    }*/\n\n    /* If normal element, return normal table */\n    else {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: props.data[key],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 46\n          }\n        }, props.data[key]));\n      }\n  });\n};\n\nclass table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getKeys = function () {\n      return Object.keys(this.props.data[0]);\n    };\n\n    this.getHeader = function () {\n      var keys = this.getKeys();\n      return keys.map((key, index) => {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 20\n          }\n        }, key.toUpperCase());\n      });\n    };\n\n    this.getRowsData = function () {\n      var items = this.props.data;\n      var keys = this.getKeys();\n      return items.map((row, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(RenderRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 34\n          }\n        }));\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n    this.onWishlist = this.onWishlist.bind(this);\n  }\n\n  onWishlist() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    });\n  } // Gets the keys of the whole table \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      varaint: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }\n    }, this.getHeader())), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default table;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/src/components/Home/Table.jsx"],"names":["React","Table","ReactTooltip","onWishlist","props","alert","RenderRow","keys","map","key","index","data","localStorage","token","undefined","els","table","Component","constructor","getKeys","Object","getHeader","toUpperCase","getRowsData","items","row","bind","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAO,iBAAP;AACA,OAAOC,YAAP,MAAyB,eAAzB,C,CAEA;;AACA,MAAMC,UAAU,GAAGC,KAAD,IAAW;AACzBC,EAAAA,KAAK,CAAC,gCAAD,CAAL;AACH,CAFD;;AAGA,MAAMC,SAAS,GAAIF,KAAD,IAAU;AAExB,SAAOA,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,KAAc;AAEhC;AACA,QAAID,GAAG,KAAK,WAAR,IAAuBA,GAAG,KAAK,UAA/B,IAA6CA,GAAG,KAAG,QAAvD,EAAiE;AAE7D;AACA,UAAIL,KAAK,CAACO,IAAN,CAAWF,GAAX,EAAgB,CAAhB,MAAuB,MAA3B,EAAmC;AAC/B,4BAAO;AAAI,UAAA,GAAG,EAAEL,KAAK,CAACO,IAAN,CAAWF,GAAX,EAAgB,CAAhB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASL,KAAK,CAACO,IAAN,CAAWF,GAAX,EAAgB,CAAhB,CAAT,CAA7B,CAAP;AACH,OAFD,MAGK;AACD;AACA,4BAAO;AAAI,UAAA,GAAG,EAAEL,KAAK,CAACO,IAAN,CAAWF,GAAX,EAAgB,CAAhB,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACK;AAAG,UAAA,EAAE,EAAC,YAAN;AAAmB,UAAA,SAAS,EAAC,YAA7B;AAA0C,UAAA,IAAI,EAAEL,KAAK,CAACO,IAAN,CAAWF,GAAX,EAAgB,CAAhB,CAAhD;AAAoE,UAAA,MAAM,EAAC,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASL,KAAK,CAACO,IAAN,CAAWF,GAAX,EAAgB,CAAhB,CAAT,CADJ,CADL,CAAP;AAKH;AACJ,KAdD,MAeK,IAAIA,GAAG,KAAG,SAAN,IAAmBG,YAAY,CAACC,KAAb,KAAuBC,SAA9C,EAAyD;AAC1D,UAAIF,YAAY,CAACC,KAAb,KAAuBC,SAA3B,EAAsC;AAClC,4BAAO;AAAI,UAAA,EAAE,EAAC,aAAP;AAAqB,UAAA,GAAG,EAAEV,KAAK,CAACO,IAAN,CAAWF,GAAX,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACH;AAAG,UAAA,EAAE,EAAC,YAAN;AAAmB,UAAA,OAAO,EAAEN,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAQ;AAAI,UAAA,EAAE,EAAC,YAAP;AACI,sBAAS,iBADb;AAEI,sBAAS,OAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGHC,KAAK,CAACO,IAAN,CAAWF,GAAX,CAHG,CAAR,CADR,eAMQ;AAAK,UAAA,EAAE,EAAE,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,YAAD;AAAe,UAAA,EAAE,EAAC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CANR,CADG,CAAP;AAYH;;AACDM,MAAAA,GAAG;AACN;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AAxDK,SAyDD;AACA,4BAAO;AAAI,UAAA,GAAG,EAAEX,KAAK,CAACO,IAAN,CAAWF,GAAX,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASL,KAAK,CAACO,IAAN,CAAWF,GAAX,CAAT,CAA1B,CAAP;AACH;AACJ,GA9EM,CAAP;AA+EA,CAjFJ;;AAmFA,MAAMO,KAAN,SAAoBhB,KAAK,CAACiB,SAA1B,CAAoC;AAGhCC,EAAAA,WAAW,CAACd,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAelBe,OAfkB,GAeR,YAAU;AAChB,aAAOC,MAAM,CAACb,IAAP,CAAY,KAAKH,KAAL,CAAWO,IAAX,CAAgB,CAAhB,CAAZ,CAAP;AACH,KAjBiB;;AAAA,SAoBlBU,SApBkB,GAoBN,YAAU;AAClB,UAAId,IAAI,GAAG,KAAKY,OAAL,EAAX;AACA,aAAOZ,IAAI,CAACC,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,KAAc;AAC1B,4BAAO;AAAI,UAAA,GAAG,EAAED,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeA,GAAG,CAACa,WAAJ,EAAf,CAAP;AACH,OAFM,CAAP;AAGH,KAzBiB;;AAAA,SA4BlBC,WA5BkB,GA4BJ,YAAU;AACpB,UAAIC,KAAK,GAAG,KAAKpB,KAAL,CAAWO,IAAvB;AACA,UAAIJ,IAAI,GAAG,KAAKY,OAAL,EAAX;AACA,aAAOK,KAAK,CAAChB,GAAN,CAAU,CAACiB,GAAD,EAAMf,KAAN,KAAc;AAG7B,4BAAO;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgB,oBAAC,SAAD;AAAW,UAAA,GAAG,EAAEA,KAAhB;AAAuB,UAAA,IAAI,EAAEe,GAA7B;AAAkC,UAAA,IAAI,EAAElB,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAhB,CAAP;AAED,OALM,CAAP;AAMD,KArCe;;AAEd,SAAKc,SAAL,GAAiB,KAAKA,SAAL,CAAeK,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKH,WAAL,GAAmB,KAAKA,WAAL,CAAiBG,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKP,OAAL,GAAe,KAAKA,OAAL,CAAaO,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKvB,UAAL,GAAkB,KAAKA,UAAL,CAAgBuB,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDvB,EAAAA,UAAU,GAAE;AACR,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GAf+B,CAiBhC;;;AAyBAwB,EAAAA,MAAM,GAAG;AACL,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,QAAQ,MAAvB;AAAwB,MAAA,KAAK,MAA7B;AAA8B,MAAA,OAAO,EAAG,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKN,SAAL,EAAL,CADJ,CADA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKE,WAAL,EADL,CAJA,CADJ,CADA;AAaH;;AAxD+B;;AA4DpC,eAAeP,KAAf","sourcesContent":["import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport \"./css/table.css\"\nimport ReactTooltip from 'react-tooltip';\n\n// Put data into each row \nconst onWishlist= (props) => {\n    alert(\"Successfully added to wishlist\")\n}\nconst RenderRow = (props) =>{\n    \n    return props.keys.map((key, index)=>{\n\n        /* Check if key is professor */\n        if (key === \"Professor\" || key === \"Location\" || key===\"Course\") {\n\n            /* If there is no link, just return professor name. */\n            if (props.data[key][1] === 'None') {\n                return <td key={props.data[key][0]}><strong>{props.data[key][0]}</strong></td>\n            }\n            else { \n                /* Else, return hyperlink that opens in new tab. */   \n                return <td key={props.data[key][0]}>\n                            <a id=\"tablelinks\" className=\"tablelinks\" href={props.data[key][1]} target=\"_blank\">\n                                <strong>{props.data[key][0]}</strong>\n                            </a>\n                        </td>\n            }\n        }\n        else if (key===\"Section\" && localStorage.token !== undefined) {\n            if (localStorage.token !== undefined) {\n                return <td id=\"sectionLink\" key={props.data[key]}>\n                    <a id=\"tablelinks\" onClick={onWishlist}>\n                            <strong><p  id=\"tablelinks\"\n                                        data-tip=\"Add to Wishlist\"\n                                        data-for=\"ctool\">\n                                {props.data[key]}</p>\n                            </strong>\n                            <div id =\"cdiv\">\n                                <ReactTooltip  id=\"ctool\"/>\n                            </div>   \n                    </a>\n                        </td>\n            }\n            els\n        }\n        /*else if (key === \"Course\") {\n            \n            const title = props.data[key][\"course_title\"];\n            const code = props.data[key][\"code\"];\n            const descr = props.data[key][\"descr\"];\n            const titleStr = \n            <p>Course Title: {title}<br>{descr}</br></p>;\n\n            const optionsCursorTrueWithMargin = {\n                followCursor:true,\n                shiftX:0,\n                shiftY:50\n            }\n            /*<td id=\"cdiv\">\n            <strong><p data-tip={titleStr} data-for=\"ctool\">{code}</p></strong>\n            <div style={{width:50}}>\n                <ReactTooltip\n                    id=\"ctool\" \n                    place=\"right\" \n                    effect=\"solid\"\n                    backgroundColor={\"white\"} \n                />\n\n            </div>\n        </td>\n            \n            return  <td id=\"ctool\">\n                        <ReactHover options={optionsCursorTrueWithMargin}>\n                            <ReactHover.Trigger type=\"trigger\">\n                                <td id=\"cdiv\">\n                                    <strong>{code}</strong>\n                                </td>\n                            </ReactHover.Trigger>\n                            <ReactHover.Hover id=\"ctool\" type=\"hover\">\n                                <p id=\"hovertxt\">Course Title: {title}<br />{descr}</p>\n                            </ReactHover.Hover>\n                        </ReactHover>\n                   </td>\n        }*/\n        /* If normal element, return normal table */\n        else{\n            return <td key={props.data[key]}><strong>{props.data[key]}</strong></td>\n        }\n    })\n   }\n\nclass table extends React.Component {\n \n    \n    constructor(props){\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.getRowsData = this.getRowsData.bind(this);\n        this.getKeys = this.getKeys.bind(this);\n        this.onWishlist = this.onWishlist.bind(this);\n    }\n\n    onWishlist(){ \n        return(\n            <p></p>\n        );\n    }\n    \n    // Gets the keys of the whole table \n    getKeys = function(){\n        return Object.keys(this.props.data[0]);\n    }\n    \n    // Gets the headers of table from the keys \n    getHeader = function(){\n        var keys = this.getKeys();\n        return keys.map((key, index)=>{\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n    \n\n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        return items.map((row, index)=>{\n          \n            \n          return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\n        \n        })\n      }\n    \n    render() {\n        return (\n        <div>\n            <Table striped bordered hover varaint = \"dark\">\n            <thead>\n                <tr>{this.getHeader()}</tr>\n            </thead>\n            <tbody>\n                {this.getRowsData()}\n            </tbody>\n        </Table>\n        </div>\n    \n     );\n    }\n   }\n\n\nexport default table; "]},"metadata":{},"sourceType":"module"}