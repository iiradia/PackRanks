{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/frontend/src/components/Wishlist/Wishlist.jsx\";\n//imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from '../Home/Table';\nimport jwt from 'jwt-decode';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport './wishlist.css';\n\nclass Wishlist extends React.Component {\n  constructor() {\n    super();\n    this.removeCourses = this.removeCourses.bind(this);\n    this.renderWishlistTerms = this.renderWishlistTerms.bind(this);\n    this.viewWishlist();\n  }\n\n  renderWishlistTerms(data) {\n    /* Method to show the different terms in wishlist\n    as tables\n    */\n    //Loop through each term returned by flask\n    let i = 0;\n    Object.keys(data).map(key => {\n      console.log(key);\n      const term_div = document.getElementById(\"wishlist\").appendChild(document.createElement('div'));\n      /* Set id of the key on the term div */\n\n      term_div.setAttribute(\"id\", key); //<Table data={data[key]} type=\"homepage\" />\n      //Render many rows of the table based on terms \n\n      ReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n        id: key + \"section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        id: \"termWishlistHeader\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      }, key), /*#__PURE__*/React.createElement(Table, {\n        id: \"termWishlist\",\n        data: data[key],\n        type: \"homepage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      })), term_div);\n    });\n  }\n\n  removeCourses() {\n    //set courses to delete to selected courses\n    let cToDelete = JSON.parse(localStorage.getItem(\"checkedCourses\")); //filter out courses that should be removed from array \n    //console.log(this.state.courses);\n    //Iterate through items that should be deleted\n\n    for (var i = 0; i < cToDelete.length; i++) {\n      //save course that should be deleted\n      let currDelete = cToDelete[i]; //save the current semester and all courses\n      //currently in the wishlist for that semester\n\n      let currSem = cToDelete[i][\"Semester\"];\n      let currentTermArray = this.state.courses[currSem]; //iterate through courses currently in the wishlist for\n      //that semester\n\n      for (var courseIdx = 0; courseIdx < currentTermArray.length; courseIdx++) {\n        //compare information for course to delete\n        //with information for current course inwishlist\n        const currCourse = currentTermArray[courseIdx][\"Catalog Link\"][0];\n        const currProf = currentTermArray[courseIdx][\"RateMyProfessor Link\"][0];\n        const currSection = currentTermArray[courseIdx][\"Section\"]; //if information matches, remove course from state\n        // and save state\n\n        if (currCourse === currDelete[\"Catalog Link\"][0] && currProf === currDelete[\"RateMyProfessor Link\"][0] && currSection === currDelete[\"Section\"]) {\n          currentTermArray.splice(courseIdx, 1);\n          this.state[currSem] = currentTermArray;\n          this.forceUpdate();\n        }\n      }\n    } //reset checked courses\n\n\n    localStorage.setItem(\"checkedCourses\", JSON.stringify([])); //update db with call to API\n\n    let url = \"http://localhost:5000/resetWishlist\"; //reset the wishlist with the updated state, \n    //with the removed courses no longer in the state\n\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        wishlist: this.state.courses,\n        token: localStorage.token\n      })\n    }).then(response => response.json());\n    ReactDOM.render( /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }), document.getElementById(\"wishlist\")); //call function to render remaining courses if there\n    //are any.\n\n    console.log(\"removed\");\n    console.log(this.state.courses);\n    this.viewWishlist();\n  }\n\n  viewWishlist() {\n    const UserPage = this;\n    let url = \"http://localhost:5000/viewWishlist\";\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"token\": localStorage.token\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      courses: data\n    }, () => {\n      console.log(JSON.stringify(data).length); // Code to show wishlist by terms \n\n      if (JSON.stringify(data).length > 0) {\n        //call function to render wishlist items\n        //by the term they are in.\n        this.renderWishlistTerms(data);\n      } else {\n        ReactDOM.render( /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 37\n          }\n        }, \"Empty wishlist.\"), document.getElementById(\"delWish\"));\n      }\n    }));\n  }\n\n  render() {\n    let identity = jwt(localStorage.token).identity;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"welcome\",\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 51\n      }\n    }, identity.first_name, \"'s\"), \" Wishlist\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"backtohomepage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/homepage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-danger\",\n      id: \"backtohmpg\",\n      name: \"backtohmpg\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }\n    }, \"Back\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"termName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wishlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"delWish\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"deleteItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-danger\",\n      id: \"delWishlist\",\n      name: \"delWishlist\",\n      size: \"lg\",\n      onClick: this.removeCourses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, \"Delete Selected Rows from Wishlist\")));\n  }\n\n}\n\nexport default Wishlist;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/src/components/Wishlist/Wishlist.jsx"],"names":["React","ReactDOM","Table","jwt","Link","Button","Wishlist","Component","constructor","removeCourses","bind","renderWishlistTerms","viewWishlist","data","i","Object","keys","map","key","console","log","term_div","document","getElementById","appendChild","createElement","setAttribute","render","cToDelete","JSON","parse","localStorage","getItem","length","currDelete","currSem","currentTermArray","state","courses","courseIdx","currCourse","currProf","currSection","splice","forceUpdate","setItem","stringify","url","fetch","method","body","wishlist","token","then","response","json","UserPage","headers","setState","identity","first_name"],"mappings":"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","sourcesContent":["//imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from '../Home/Table';\nimport jwt from 'jwt-decode';\nimport {Link} from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\nimport './wishlist.css';\n\nclass Wishlist extends React.Component {\n\n    constructor() {\n        super();\n        \n        this.removeCourses = this.removeCourses.bind(this);\n        this.renderWishlistTerms = this.renderWishlistTerms.bind(this);\n\n        this.viewWishlist();\n    }\n\n    renderWishlistTerms(data) {\n        /* Method to show the different terms in wishlist\n        as tables\n        */\n       //Loop through each term returned by flask\n       let i = 0;\n        Object.keys(data).map( (key) => { \n            console.log(key);\n            const term_div = document.getElementById(\"wishlist\").appendChild(document.createElement('div'));\n            /* Set id of the key on the term div */\n            term_div.setAttribute(\"id\", key);\n            //<Table data={data[key]} type=\"homepage\" />\n            //Render many rows of the table based on terms \n            ReactDOM.render(\n                <div id={key+\"section\"}>\n                    <h2 id=\"termWishlistHeader\">{key}</h2>\n                    <Table id=\"termWishlist\" data={data[key]} type=\"homepage\" />\n                </div>,\n                term_div\n            )\n        })\n\n    }\n    removeCourses() {\n        //set courses to delete to selected courses\n        let cToDelete = JSON.parse(localStorage.getItem(\"checkedCourses\"))\n        \n        //filter out courses that should be removed from array \n        //console.log(this.state.courses);\n        \n        //Iterate through items that should be deleted\n        for (var i = 0; i < cToDelete.length; i++) {\n\n            //save course that should be deleted\n            let currDelete = cToDelete[i];\n            //save the current semester and all courses\n            //currently in the wishlist for that semester\n            let currSem = cToDelete[i][\"Semester\"];\n            let currentTermArray = this.state.courses[currSem];\n            \n            //iterate through courses currently in the wishlist for\n            //that semester\n            for (var courseIdx = 0; courseIdx < currentTermArray.length; courseIdx++) {\n\n                //compare information for course to delete\n                //with information for current course inwishlist\n                const currCourse = currentTermArray[courseIdx][\"Catalog Link\"][0];\n                const currProf = currentTermArray[courseIdx][\"RateMyProfessor Link\"][0];\n                const currSection = currentTermArray[courseIdx][\"Section\"];\n\n                //if information matches, remove course from state\n                // and save state\n                if (currCourse===currDelete[\"Catalog Link\"][0] && currProf===currDelete[\"RateMyProfessor Link\"][0] && currSection===currDelete[\"Section\"]) {\n                    currentTermArray.splice(courseIdx, 1);\n                    this.state[currSem] = currentTermArray;\n                    this.forceUpdate();\n                }\n            }\n        }\n\n        //reset checked courses\n        localStorage.setItem(\"checkedCourses\", JSON.stringify([]));\n        //update db with call to API\n        let url = \"http://localhost:5000/resetWishlist\"\n        //reset the wishlist with the updated state, \n        //with the removed courses no longer in the state\n        fetch( \n            url, {\n                method: \"POST\",\n                body: JSON.stringify(\n                    {wishlist:this.state.courses,\n                    token: localStorage.token\n                    }\n                )\n            }\n        ).then(\n        response => response.json()\n        )\n        ReactDOM.render(<p></p>, document.getElementById(\"wishlist\"))\n        \n        //call function to render remaining courses if there\n        //are any.\n        console.log(\"removed\");\n        console.log(this.state.courses);\n        this.viewWishlist();\n    }\n\n    viewWishlist() {\n        const UserPage = this;\n        let url = \"http://localhost:5000/viewWishlist\";\n        fetch( \n            url, {\n                method: \"GET\",\n                headers: {\"token\": localStorage.token }\n            }\n        ).then(\n        response => response.json()\n        ).then(\n            data => this.setState({\n                courses: data\n            },\n            () => {\n                console.log(JSON.stringify(data).length);\n                // Code to show wishlist by terms \n                if (JSON.stringify(data).length > 0) {\n                    //call function to render wishlist items\n                    //by the term they are in.\n                    this.renderWishlistTerms(data);\n                }\n                else { \n                    ReactDOM.render(<p>Empty wishlist.</p>, document.getElementById(\"delWish\"))\n                }\n            }\n            )\n        )\n    }\n\n    render() {\n        let identity = jwt(localStorage.token).identity;\n        return (\n            <div>\n                <h1 id=\"welcome\" className=\"mt-5\"><strong>{identity.first_name}'s</strong> Wishlist</h1>\n                \n                <div id=\"backtohomepage\">\n                        {/* Added link to wishlist */}\n                        <Link to=\"/homepage\">\n                            <Button\n                            className=\"btn btn-danger\" \n                                    id=\"backtohmpg\" \n                                    name=\"backtohmpg\" \n                                    size=\"lg\">\n                                Back\n                            </Button>\n                        </Link>\n                </div>\n\n                <div id=\"termName\">\n\n                </div>\n                <div id=\"wishlist\">\n\n                </div>\n\n                <div id=\"delWish\">\n\n                </div>\n\n                <div id=\"deleteItems\">\n                        {/* Added delete wishlist course functionality. */}\n                        <Button\n                            className=\"btn btn-danger\" \n                            id=\"delWishlist\"\n                            name=\"delWishlist\" \n                            size=\"lg\"\n                            onClick={this.removeCourses}>\n                            Delete Selected Rows from Wishlist\n                        </Button>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Wishlist;"]},"metadata":{},"sourceType":"module"}