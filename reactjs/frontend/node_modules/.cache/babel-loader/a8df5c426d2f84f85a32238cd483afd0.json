{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\n\n\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n  return prefixes;\n}\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\n\n\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\n\nvar prefixedEventNames = {};\n/**\n * Element to check for prefixes on.\n */\n\nvar style = {};\n/**\n * Bootstrap if a DOM exists.\n */\n\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  } // Same as above\n\n\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\n\n\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/node_modules/react-simplert/node_modules/react-dom/lib/getVendorPrefixedEventName.js"],"names":["ExecutionEnvironment","require","makePrefixMap","styleProp","eventName","prefixes","toLowerCase","vendorPrefixes","animationend","animationiteration","animationstart","transitionend","prefixedEventNames","style","canUseDOM","document","createElement","window","animation","transition","getVendorPrefixedEventName","prefixMap","hasOwnProperty","module","exports"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,+BAAD,CAAlC;AAEA;;;;;;;;;AAOA,SAASC,aAAT,CAAuBC,SAAvB,EAAkCC,SAAlC,EAA6C;AAC3C,MAAIC,QAAQ,GAAG,EAAf;AAEAA,EAAAA,QAAQ,CAACF,SAAS,CAACG,WAAV,EAAD,CAAR,GAAoCF,SAAS,CAACE,WAAV,EAApC;AACAD,EAAAA,QAAQ,CAAC,WAAWF,SAAZ,CAAR,GAAiC,WAAWC,SAA5C;AACAC,EAAAA,QAAQ,CAAC,QAAQF,SAAT,CAAR,GAA8B,QAAQC,SAAtC;AACAC,EAAAA,QAAQ,CAAC,OAAOF,SAAR,CAAR,GAA6B,OAAOC,SAApC;AACAC,EAAAA,QAAQ,CAAC,MAAMF,SAAP,CAAR,GAA4B,MAAMC,SAAS,CAACE,WAAV,EAAlC;AAEA,SAAOD,QAAP;AACD;AAED;;;;;AAGA,IAAIE,cAAc,GAAG;AACnBC,EAAAA,YAAY,EAAEN,aAAa,CAAC,WAAD,EAAc,cAAd,CADR;AAEnBO,EAAAA,kBAAkB,EAAEP,aAAa,CAAC,WAAD,EAAc,oBAAd,CAFd;AAGnBQ,EAAAA,cAAc,EAAER,aAAa,CAAC,WAAD,EAAc,gBAAd,CAHV;AAInBS,EAAAA,aAAa,EAAET,aAAa,CAAC,YAAD,EAAe,eAAf;AAJT,CAArB;AAOA;;;;AAGA,IAAIU,kBAAkB,GAAG,EAAzB;AAEA;;;;AAGA,IAAIC,KAAK,GAAG,EAAZ;AAEA;;;;AAGA,IAAIb,oBAAoB,CAACc,SAAzB,EAAoC;AAClCD,EAAAA,KAAK,GAAGE,QAAQ,CAACC,aAAT,CAAuB,KAAvB,EAA8BH,KAAtC,CADkC,CAGlC;AACA;AACA;AACA;;AACA,MAAI,EAAE,oBAAoBI,MAAtB,CAAJ,EAAmC;AACjC,WAAOV,cAAc,CAACC,YAAf,CAA4BU,SAAnC;AACA,WAAOX,cAAc,CAACE,kBAAf,CAAkCS,SAAzC;AACA,WAAOX,cAAc,CAACG,cAAf,CAA8BQ,SAArC;AACD,GAXiC,CAalC;;;AACA,MAAI,EAAE,qBAAqBD,MAAvB,CAAJ,EAAoC;AAClC,WAAOV,cAAc,CAACI,aAAf,CAA6BQ,UAApC;AACD;AACF;AAED;;;;;;;;AAMA,SAASC,0BAAT,CAAoChB,SAApC,EAA+C;AAC7C,MAAIQ,kBAAkB,CAACR,SAAD,CAAtB,EAAmC;AACjC,WAAOQ,kBAAkB,CAACR,SAAD,CAAzB;AACD,GAFD,MAEO,IAAI,CAACG,cAAc,CAACH,SAAD,CAAnB,EAAgC;AACrC,WAAOA,SAAP;AACD;;AAED,MAAIiB,SAAS,GAAGd,cAAc,CAACH,SAAD,CAA9B;;AAEA,OAAK,IAAID,SAAT,IAAsBkB,SAAtB,EAAiC;AAC/B,QAAIA,SAAS,CAACC,cAAV,CAAyBnB,SAAzB,KAAuCA,SAAS,IAAIU,KAAxD,EAA+D;AAC7D,aAAOD,kBAAkB,CAACR,SAAD,CAAlB,GAAgCiB,SAAS,CAAClB,SAAD,CAAhD;AACD;AACF;;AAED,SAAO,EAAP;AACD;;AAEDoB,MAAM,CAACC,OAAP,GAAiBJ,0BAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('fbjs/lib/ExecutionEnvironment');\n\n/**\n * Generate a mapping of standard vendor prefixes using the defined style property and event name.\n *\n * @param {string} styleProp\n * @param {string} eventName\n * @returns {object}\n */\nfunction makePrefixMap(styleProp, eventName) {\n  var prefixes = {};\n\n  prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();\n  prefixes['Webkit' + styleProp] = 'webkit' + eventName;\n  prefixes['Moz' + styleProp] = 'moz' + eventName;\n  prefixes['ms' + styleProp] = 'MS' + eventName;\n  prefixes['O' + styleProp] = 'o' + eventName.toLowerCase();\n\n  return prefixes;\n}\n\n/**\n * A list of event names to a configurable list of vendor prefixes.\n */\nvar vendorPrefixes = {\n  animationend: makePrefixMap('Animation', 'AnimationEnd'),\n  animationiteration: makePrefixMap('Animation', 'AnimationIteration'),\n  animationstart: makePrefixMap('Animation', 'AnimationStart'),\n  transitionend: makePrefixMap('Transition', 'TransitionEnd')\n};\n\n/**\n * Event names that have already been detected and prefixed (if applicable).\n */\nvar prefixedEventNames = {};\n\n/**\n * Element to check for prefixes on.\n */\nvar style = {};\n\n/**\n * Bootstrap if a DOM exists.\n */\nif (ExecutionEnvironment.canUseDOM) {\n  style = document.createElement('div').style;\n\n  // On some platforms, in particular some releases of Android 4.x,\n  // the un-prefixed \"animation\" and \"transition\" properties are defined on the\n  // style object but the events that fire will still be prefixed, so we need\n  // to check if the un-prefixed events are usable, and if not remove them from the map.\n  if (!('AnimationEvent' in window)) {\n    delete vendorPrefixes.animationend.animation;\n    delete vendorPrefixes.animationiteration.animation;\n    delete vendorPrefixes.animationstart.animation;\n  }\n\n  // Same as above\n  if (!('TransitionEvent' in window)) {\n    delete vendorPrefixes.transitionend.transition;\n  }\n}\n\n/**\n * Attempts to determine the correct vendor prefixed event name.\n *\n * @param {string} eventName\n * @returns {string}\n */\nfunction getVendorPrefixedEventName(eventName) {\n  if (prefixedEventNames[eventName]) {\n    return prefixedEventNames[eventName];\n  } else if (!vendorPrefixes[eventName]) {\n    return eventName;\n  }\n\n  var prefixMap = vendorPrefixes[eventName];\n\n  for (var styleProp in prefixMap) {\n    if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {\n      return prefixedEventNames[eventName] = prefixMap[styleProp];\n    }\n  }\n\n  return '';\n}\n\nmodule.exports = getVendorPrefixedEventName;"]},"metadata":{},"sourceType":"script"}