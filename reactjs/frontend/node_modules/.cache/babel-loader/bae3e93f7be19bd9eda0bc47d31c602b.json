{"ast":null,"code":"/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill(input) {\n  var str = String(input).replace(/=+$/, '');\n\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n\n  for ( // initialize result and counters\n  var bc = 0, bs, buffer, idx = 0, output = ''; // get next character\n  buffer = str.charAt(idx++); // character found in table? initialize bit storage and add its ascii value;\n  ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, // and if not first of each 4 characters,\n  // convert the first 8 bits to one ascii character\n  bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n\n  return output;\n}\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/node_modules/jwt-decode/lib/atob.js"],"names":["chars","InvalidCharacterError","message","prototype","Error","name","polyfill","input","str","String","replace","length","bc","bs","buffer","idx","output","charAt","fromCharCode","indexOf","module","exports","window","atob","bind"],"mappings":"AAAA;;;;AAKA,IAAIA,KAAK,GAAG,mEAAZ;;AAEA,SAASC,qBAAT,CAA+BC,OAA/B,EAAwC;AACtC,OAAKA,OAAL,GAAeA,OAAf;AACD;;AAEDD,qBAAqB,CAACE,SAAtB,GAAkC,IAAIC,KAAJ,EAAlC;AACAH,qBAAqB,CAACE,SAAtB,CAAgCE,IAAhC,GAAuC,uBAAvC;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AACxB,MAAIC,GAAG,GAAGC,MAAM,CAACF,KAAD,CAAN,CAAcG,OAAd,CAAsB,KAAtB,EAA6B,EAA7B,CAAV;;AACA,MAAIF,GAAG,CAACG,MAAJ,GAAa,CAAb,IAAkB,CAAtB,EAAyB;AACvB,UAAM,IAAIV,qBAAJ,CAA0B,mEAA1B,CAAN;AACD;;AACD,QACE;AACA,MAAIW,EAAE,GAAG,CAAT,EAAYC,EAAZ,EAAgBC,MAAhB,EAAwBC,GAAG,GAAG,CAA9B,EAAiCC,MAAM,GAAG,EAF5C,EAGE;AACAF,EAAAA,MAAM,GAAGN,GAAG,CAACS,MAAJ,CAAWF,GAAG,EAAd,CAJX,EAKE;AACA,GAACD,MAAD,KAAYD,EAAE,GAAGD,EAAE,GAAG,CAAL,GAASC,EAAE,GAAG,EAAL,GAAUC,MAAnB,GAA4BA,MAAjC,EACV;AACA;AACAF,EAAAA,EAAE,KAAK,CAHT,IAGcI,MAAM,IAAIP,MAAM,CAACS,YAAP,CAAoB,MAAML,EAAE,KAAK,CAAC,CAAD,GAAKD,EAAL,GAAU,CAAf,CAA5B,CAHxB,GAGyE,CAT3E,EAUE;AACA;AACAE,IAAAA,MAAM,GAAGd,KAAK,CAACmB,OAAN,CAAcL,MAAd,CAAT;AACD;;AACD,SAAOE,MAAP;AACD;;AAGDI,MAAM,CAACC,OAAP,GAAiB,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,IAAxC,IAAgDD,MAAM,CAACC,IAAP,CAAYC,IAAZ,CAAiBF,MAAjB,CAAhD,IAA4EhB,QAA7F","sourcesContent":["/**\n * The code was extracted from:\n * https://github.com/davidchambers/Base64.js\n */\n\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n\nfunction InvalidCharacterError(message) {\n  this.message = message;\n}\n\nInvalidCharacterError.prototype = new Error();\nInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\nfunction polyfill (input) {\n  var str = String(input).replace(/=+$/, '');\n  if (str.length % 4 == 1) {\n    throw new InvalidCharacterError(\"'atob' failed: The string to be decoded is not correctly encoded.\");\n  }\n  for (\n    // initialize result and counters\n    var bc = 0, bs, buffer, idx = 0, output = '';\n    // get next character\n    buffer = str.charAt(idx++);\n    // character found in table? initialize bit storage and add its ascii value;\n    ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer,\n      // and if not first of each 4 characters,\n      // convert the first 8 bits to one ascii character\n      bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0\n  ) {\n    // try to find character in table (0-63, not found => -1)\n    buffer = chars.indexOf(buffer);\n  }\n  return output;\n}\n\n\nmodule.exports = typeof window !== 'undefined' && window.atob && window.atob.bind(window) || polyfill;\n"]},"metadata":{},"sourceType":"script"}