{"ast":null,"code":"var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function (str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n\n  switch (output.length % 4) {\n    case 0:\n      break;\n\n    case 2:\n      output += \"==\";\n      break;\n\n    case 3:\n      output += \"=\";\n      break;\n\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try {\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};","map":{"version":3,"sources":["/mnt/c/Users/Harry-PC/Documents/ProgrammingProjects/EasyA/reactjs/frontend/node_modules/jwt-decode/lib/base64_url_decode.js"],"names":["atob","require","b64DecodeUnicode","str","decodeURIComponent","replace","m","p","code","charCodeAt","toString","toUpperCase","length","module","exports","output","err"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAAlB;;AAEA,SAASC,gBAAT,CAA0BC,GAA1B,EAA+B;AAC7B,SAAOC,kBAAkB,CAACJ,IAAI,CAACG,GAAD,CAAJ,CAAUE,OAAV,CAAkB,MAAlB,EAA0B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAClE,QAAIC,IAAI,GAAGD,CAAC,CAACE,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,EAA6BC,WAA7B,EAAX;;AACA,QAAIH,IAAI,CAACI,MAAL,GAAc,CAAlB,EAAqB;AACnBJ,MAAAA,IAAI,GAAG,MAAMA,IAAb;AACD;;AACD,WAAO,MAAMA,IAAb;AACD,GANyB,CAAD,CAAzB;AAOD;;AAEDK,MAAM,CAACC,OAAP,GAAiB,UAASX,GAAT,EAAc;AAC7B,MAAIY,MAAM,GAAGZ,GAAG,CAACE,OAAJ,CAAY,IAAZ,EAAkB,GAAlB,EAAuBA,OAAvB,CAA+B,IAA/B,EAAqC,GAArC,CAAb;;AACA,UAAQU,MAAM,CAACH,MAAP,GAAgB,CAAxB;AACE,SAAK,CAAL;AACE;;AACF,SAAK,CAAL;AACEG,MAAAA,MAAM,IAAI,IAAV;AACA;;AACF,SAAK,CAAL;AACEA,MAAAA,MAAM,IAAI,GAAV;AACA;;AACF;AACE,YAAM,2BAAN;AAVJ;;AAaA,MAAG;AACD,WAAOb,gBAAgB,CAACa,MAAD,CAAvB;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,WAAOhB,IAAI,CAACe,MAAD,CAAX;AACD;AACF,CApBD","sourcesContent":["var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n"]},"metadata":{},"sourceType":"script"}