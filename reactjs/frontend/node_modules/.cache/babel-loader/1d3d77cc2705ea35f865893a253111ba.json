{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/frontend/src/components/Home/Table.jsx\";\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport \"./css/table.css\";\nimport ReactTooltip from 'react-tooltip';\nimport ReactDOM from 'react-dom'; //when wishlist button is pressed\n\nconst onWishlist = props => {\n  //console.log(props);\n  let url = \"http://localhost:5000/addWishlist\";\n  fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      course_data: props,\n      token: localStorage.token\n    })\n  }).then(response => response.json()).then(data => data.success ? alert(\"Successfully added course to wishlist\") : alert(\"Failed to add course to your wishlist, please try again.\"));\n}; // Put data into each row \n\n\nconst RenderRow = props => {\n  //console.log(props);\n  return props.keys.map((key, index) => {\n    if (key === \"Delete\") {\n      return /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      }, \"Bih\");\n    }\n    /* Check if key is professor */\n    else if (key === \"Professor\" || key === \"Location\" || key === \"Course\") {\n        /* If there is no link, just return professor name. */\n        if (props.data[key][1] === 'None') {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: props.data[key][0],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 53\n            }\n          }, props.data[key][0]));\n        } else {\n          /* Else, return hyperlink that opens in new tab. */\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: props.data[key][0],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            id: \"tablelinks\",\n            className: \"tablelinks\",\n            href: props.data[key][1],\n            target: \"_blank\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 33\n            }\n          }, props.data[key][0])));\n        }\n      } //if section and user is authenticated, show option for adding to wishlist\n      else if (key === \"Section\" && localStorage.token !== undefined && props.type !== \"homepage\") {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            id: \"sectionLink\",\n            key: props.data[key],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 20\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            id: \"tablelinks\",\n            onClick: () => onWishlist(props.data),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            id: \"tablelinks\",\n            \"data-tip\": \"Add to Wishlist\",\n            \"data-for\": \"ctool\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 33\n            }\n          }, props.data[key])), /*#__PURE__*/React.createElement(\"div\", {\n            id: \"cdiv\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(ReactTooltip, {\n            id: \"ctool\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }\n          }))));\n        }\n        /* If normal element, return normal table */\n        else {\n            return /*#__PURE__*/React.createElement(\"td\", {\n              key: props.data[key],\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 20\n              }\n            }, /*#__PURE__*/React.createElement(\"strong\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 46\n              }\n            }, props.data[key]));\n          }\n  });\n};\n\nclass table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getKeys = function () {\n      return Object.keys(this.props.data[0]);\n    };\n\n    this.getHeader = function () {\n      var keys = this.getKeys();\n\n      if (this.props.type === \"homepage\") {\n        var delHeader = [\"Delete\"];\n        keys = delHeader.concat(keys);\n      }\n\n      return keys.map((key, index) => {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 20\n          }\n        }, key.toUpperCase());\n      });\n    };\n\n    this.getRowsData = function () {\n      var items = this.props.data;\n      var keys = this.getKeys();\n      console.log(this.props.type);\n      {\n        /* If homepage, add delete option. */\n      }\n\n      if (this.props.type === \"homepage\") {\n        var deleteCheckbox = [\"\"];\n        items = deleteCheckbox.concat(items);\n      }\n\n      return items.map((row, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(RenderRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          type: this.props.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 34\n          }\n        }));\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n  } // Gets the keys of the whole table \n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      varaint: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, this.getHeader())), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default table;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/src/components/Home/Table.jsx"],"names":["React","Table","ReactTooltip","ReactDOM","onWishlist","props","url","fetch","method","body","JSON","stringify","course_data","token","localStorage","then","response","json","data","success","alert","RenderRow","keys","map","key","index","undefined","type","table","Component","constructor","getKeys","Object","getHeader","delHeader","concat","toUpperCase","getRowsData","items","console","log","deleteCheckbox","row","bind","render"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport \"./css/table.css\"\nimport ReactTooltip from 'react-tooltip';\nimport ReactDOM from 'react-dom';\n\n//when wishlist button is pressed\nconst onWishlist= (props) => {\n    //console.log(props);\n    let url = \"http://localhost:5000/addWishlist\"\n    fetch( \n        url, {\n            method: \"POST\",\n            body: JSON.stringify(\n                {course_data:props,\n                token: localStorage.token\n                }\n            )\n        }\n    ).then(\n       response => response.json()\n    ).then(\n        data => data.success ? alert(\"Successfully added course to wishlist\")\n        : alert(\"Failed to add course to your wishlist, please try again.\")\n    )\n}\n\n// Put data into each row \nconst RenderRow = (props) =>{\n    //console.log(props);\n    return props.keys.map((key, index)=>{\n        \n        if (key === \"Delete\") {\n            return <td>Bih</td>\n        }\n        /* Check if key is professor */\n        else if (key === \"Professor\" || key === \"Location\" || key===\"Course\") {\n\n            /* If there is no link, just return professor name. */\n            if (props.data[key][1] === 'None') {\n                return <td key={props.data[key][0]}><strong>{props.data[key][0]}</strong></td>\n            }\n            else { \n                /* Else, return hyperlink that opens in new tab. */   \n                return <td key={props.data[key][0]}>\n                            <a id=\"tablelinks\" className=\"tablelinks\" href={props.data[key][1]} target=\"_blank\">\n                                <strong>{props.data[key][0]}</strong>\n                            </a>\n                        </td>\n            }\n        }\n        //if section and user is authenticated, show option for adding to wishlist\n        \n        else if (key===\"Section\" && localStorage.token !== undefined && props.type !== \"homepage\") {\n            return <td id=\"sectionLink\" key={props.data[key]}>\n                <a id=\"tablelinks\" onClick={()=>onWishlist(props.data)}>\n                        <strong><p  id=\"tablelinks\"\n                                    data-tip=\"Add to Wishlist\"\n                                    data-for=\"ctool\">\n                            {props.data[key]}</p>\n                        </strong>\n                        <div id =\"cdiv\">\n                            <ReactTooltip  id=\"ctool\"/>\n                        </div>   \n                </a>\n                    </td>\n        }\n        /* If normal element, return normal table */\n        else{\n            return <td key={props.data[key]}><strong>{props.data[key]}</strong></td>\n        }\n    })\n   }\n\nclass table extends React.Component {\n \n    \n    constructor(props){\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.getRowsData = this.getRowsData.bind(this);\n        this.getKeys = this.getKeys.bind(this);\n    }\n    \n    // Gets the keys of the whole table \n    getKeys = function(){\n        return Object.keys(this.props.data[0]);\n    }\n    \n    // Gets the headers of table from the keys \n    getHeader = function(){\n        var keys = this.getKeys();\n\n        if (this.props.type === \"homepage\") {\n            var delHeader = [\"Delete\"];\n            keys=delHeader.concat(keys);\n        }\n        return keys.map((key, index)=>{\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n    \n\n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        console.log(this.props.type)\n        {/* If homepage, add delete option. */}\n        if(this.props.type === \"homepage\") {\n            var deleteCheckbox = [\"\"];\n            items = deleteCheckbox.concat(items);\n        }\n        return items.map((row, index)=>{\n          \n            \n          return <tr key={index}><RenderRow key={index} data={row} keys={keys} type={this.props.type}/></tr>\n        \n        })\n      }\n\n    render() {\n\n        return (\n        <div>\n            <Table striped bordered hover varaint = \"dark\">\n            <thead>\n                <tr>{this.getHeader()}</tr>\n            </thead>\n            <tbody>\n                {this.getRowsData()}\n            </tbody>\n        </Table>\n        </div>\n    \n     );\n    }\n   }\n\n\nexport default table; "]},"metadata":{},"sourceType":"module"}