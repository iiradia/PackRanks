{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/src/components/Dept.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport ReactDOM from 'react-dom'; // need to do:\n// obtain value of selected dept\n// send value of dept to CourseLevel\n// get list of depts from backend\n\nclass Dept extends React.Component {\n  constructor() {\n    super();\n    this.getDepts = this.getDepts.bind(this);\n    this.DeptList = this.DeptList.bind(this);\n    this.setState({\n      dept_list: null\n    });\n  }\n\n  getTable() {}\n  /* Get List of departments and render select component */\n\n\n  getDepts() {\n    const GEP = this;\n    let url = \"http://localhost:5000/getdepts\";\n    return fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json() // keep here (maybe)\n    ).then(data => {\n      this.setState({\n        dept_list: data\n      }, () => ReactDOM.render(this.DeptList(), document.getElementById('deptlist')));\n    });\n  }\n  /* Return select component with list of departments */\n\n\n  DeptList() {\n    const departments = this.state.dept_list; //console.log(departments);\n\n    const deptOptions = departments.dept.map(dept => ({\n      label: dept\n    }));\n    const deptValues = departments.dept_code.map(value_i => ({\n      value: value_i\n    }));\n    const deptFinal = [];\n\n    for (var i = 0; i < deptOptions.length; i++) {\n      deptFinal[i] = {\n        label: deptOptions[i].label,\n        value: deptValues[i].value\n      };\n    } //console.log(deptFinal);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      id: \"deptList\",\n      options: deptFinal,\n      onChange: department => console.log(department.label, department.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), \" \"));\n  }\n\n  render() {\n    // this.getDepts()\n    // const departments = this.state.dept_list;\n    // const departments = this.getDepts().then((result) => {return result});\n    // console.log(departments)\n    // const deptOptions = departments.map((department, i) => (\n    //     { label: department, value: i }\n    // ));\n    // const DeptList = () => (\n    //     <div className=\"app\">\n    //         <div className=\"container\">\n    //             <Select id='deptList' options={deptOptions} onChange={department => console.log(department.label, department.value)} /> {/* add attribute onChange={department => ___} */}\n    //         </div>\n    //     </div>\n    // );\n    this.getDepts();\n    const levelList = [\"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\", \"ANY\"];\n    const levelOptions = levelList.map(dept => ({\n      label: dept\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"typeofdept\",\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }\n    }, \"Select a Department\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"typeofdept\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Please select the department of the course/elective you are looking for.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"deptlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"levels\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"levelprompt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, \"Please select the level of the course/elective you are looking for.\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      id: \"levelprompt\",\n      options: levelList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }), \" \")), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger\",\n      id: \"whichdept\",\n      name: \"whichdept\",\n      onclick: this.getTable(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"Select\"));\n  }\n\n}\n\n{\n  /* <DeptList selectedDept={document.getElementById('deptList')} /> */\n}\nexport default Dept;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/src/components/Dept.jsx"],"names":["React","Select","ReactDOM","Dept","Component","constructor","getDepts","bind","DeptList","setState","dept_list","getTable","GEP","url","fetch","method","then","response","json","data","render","document","getElementById","departments","state","deptOptions","dept","map","label","deptValues","dept_code","value_i","value","deptFinal","i","length","department","console","log","levelList","levelOptions"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// need to do:\r\n    // obtain value of selected dept\r\n    // send value of dept to CourseLevel\r\n    // get list of depts from backend\r\nclass Dept extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getDepts = this.getDepts.bind(this)\r\n        this.DeptList = this.DeptList.bind(this)\r\n\r\n        this.setState({\r\n            dept_list: null\r\n        })\r\n    }\r\n\r\n    getTable() {\r\n\r\n    }\r\n\r\n    /* Get List of departments and render select component */\r\n    getDepts() {\r\n        const GEP = this;\r\n        let url = \"http://localhost:5000/getdepts\";\r\n        return fetch( \r\n            url, {\r\n                method: \"GET\"\r\n           }\r\n        ).then(\r\n            response => response.json() // keep here (maybe)\r\n        ).then(\r\n            (data) => {this.setState({dept_list: data},\r\n                () => ReactDOM.render(this.DeptList(), document.getElementById('deptlist'))\r\n            )}\r\n        )\r\n    }\r\n    \r\n    /* Return select component with list of departments */\r\n    DeptList(){\r\n        const departments = this.state.dept_list;\r\n        //console.log(departments);\r\n        const deptOptions = departments.dept.map((dept) => (\r\n            {label: dept}\r\n        ));\r\n        const deptValues = departments.dept_code.map((value_i) => (\r\n            {value: value_i}\r\n        ));\r\n        const deptFinal = [];\r\n        for (var i = 0; i < deptOptions.length; i++) {\r\n            deptFinal[i] = {label: deptOptions[i].label,\r\n                            value: deptValues[i].value}\r\n        }\r\n        //console.log(deptFinal);\r\n        return (\r\n        <div className=\"app\">\r\n            <div className=\"container\">\r\n                <Select id='deptList' options={deptFinal} onChange={department => console.log(department.label, department.value)} /> {/* add attribute onChange={department => ___} */}\r\n            </div>\r\n        </div>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        // this.getDepts()\r\n        // const departments = this.state.dept_list;\r\n        // const departments = this.getDepts().then((result) => {return result});\r\n        // console.log(departments)\r\n        // const deptOptions = departments.map((department, i) => (\r\n        //     { label: department, value: i }\r\n        // ));\r\n\r\n        // const DeptList = () => (\r\n        //     <div className=\"app\">\r\n        //         <div className=\"container\">\r\n        //             <Select id='deptList' options={deptOptions} onChange={department => console.log(department.label, department.value)} /> {/* add attribute onChange={department => ___} */}\r\n        //         </div>\r\n        //     </div>\r\n        // );\r\n        this.getDepts();\r\n        const levelList = [\"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\",\"800\",\"ANY\"];\r\n        const levelOptions = levelList.map((dept) => (\r\n            {label: dept}\r\n        ));\r\n\r\n        return(\r\n            <div id=\"typeofdept\" class=\"text-center\">\r\n                <h2 class=\"mt-5\">Select a Department</h2>\r\n                {/* Gives options for specific department the user is looking for */}\r\n                <label for=\"typeofdept\">Please select the department of the course/elective you are looking for.</label>\r\n                {/* <select id=\"typeofdept\" name = \"typeofdept\" class=\"bg-light\"> */}\r\n                    {/* <!-- TOBEIMPLEMENTED--> */}\r\n\r\n                    <div id=\"deptlist\">\r\n\r\n                    </div>\r\n                \r\n                {/* prompt for levels */ }\r\n                <div id=\"levels\">\r\n                    <label for=\"levelprompt\">Please select the level of the course/elective you are looking for.</label>\r\n                    <div className=\"container\">\r\n                        <Select id='levelprompt' options={levelList} /> {/* add attribute onChange={department => ___} */}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* </select> */}\r\n                <button type=\"button\" class=\"btn btn-danger\" id=\"whichdept\" name=\"whichdept\" onclick={this.getTable()}>Select</button>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n{/* <DeptList selectedDept={document.getElementById('deptList')} /> */}\r\nexport default Dept;"]},"metadata":{},"sourceType":"module"}