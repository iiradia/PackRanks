{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\n\n\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument; // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\n\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\nmodule.exports = SyntheticUIEvent;","map":{"version":3,"sources":["/Users/mathew/EasyA/reactjs/frontend/node_modules/react-simplert/node_modules/react-dom/lib/SyntheticUIEvent.js"],"names":["SyntheticEvent","require","getEventTarget","UIEventInterface","view","event","target","window","doc","ownerDocument","defaultView","parentWindow","detail","SyntheticUIEvent","dispatchConfig","dispatchMarker","nativeEvent","nativeEventTarget","call","augmentClass","module","exports"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AAEA,IAAIC,cAAc,GAAGD,OAAO,CAAC,kBAAD,CAA5B;AAEA;;;;;;AAIA,IAAIE,gBAAgB,GAAG;AACrBC,EAAAA,IAAI,EAAE,UAAUC,KAAV,EAAiB;AACrB,QAAIA,KAAK,CAACD,IAAV,EAAgB;AACd,aAAOC,KAAK,CAACD,IAAb;AACD;;AAED,QAAIE,MAAM,GAAGJ,cAAc,CAACG,KAAD,CAA3B;;AACA,QAAIC,MAAM,CAACC,MAAP,KAAkBD,MAAtB,EAA8B;AAC5B;AACA,aAAOA,MAAP;AACD;;AAED,QAAIE,GAAG,GAAGF,MAAM,CAACG,aAAjB,CAXqB,CAYrB;;AACA,QAAID,GAAJ,EAAS;AACP,aAAOA,GAAG,CAACE,WAAJ,IAAmBF,GAAG,CAACG,YAA9B;AACD,KAFD,MAEO;AACL,aAAOJ,MAAP;AACD;AACF,GAnBoB;AAoBrBK,EAAAA,MAAM,EAAE,UAAUP,KAAV,EAAiB;AACvB,WAAOA,KAAK,CAACO,MAAN,IAAgB,CAAvB;AACD;AAtBoB,CAAvB;AAyBA;;;;;;;AAMA,SAASC,gBAAT,CAA0BC,cAA1B,EAA0CC,cAA1C,EAA0DC,WAA1D,EAAuEC,iBAAvE,EAA0F;AACxF,SAAOjB,cAAc,CAACkB,IAAf,CAAoB,IAApB,EAA0BJ,cAA1B,EAA0CC,cAA1C,EAA0DC,WAA1D,EAAuEC,iBAAvE,CAAP;AACD;;AAEDjB,cAAc,CAACmB,YAAf,CAA4BN,gBAA5B,EAA8CV,gBAA9C;AAEAiB,MAAM,CAACC,OAAP,GAAiBR,gBAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar getEventTarget = require('./getEventTarget');\n\n/**\n * @interface UIEvent\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nvar UIEventInterface = {\n  view: function (event) {\n    if (event.view) {\n      return event.view;\n    }\n\n    var target = getEventTarget(event);\n    if (target.window === target) {\n      // target is a window object\n      return target;\n    }\n\n    var doc = target.ownerDocument;\n    // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n    if (doc) {\n      return doc.defaultView || doc.parentWindow;\n    } else {\n      return window;\n    }\n  },\n  detail: function (event) {\n    return event.detail || 0;\n  }\n};\n\n/**\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {string} dispatchMarker Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @extends {SyntheticEvent}\n */\nfunction SyntheticUIEvent(dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget) {\n  return SyntheticEvent.call(this, dispatchConfig, dispatchMarker, nativeEvent, nativeEventTarget);\n}\n\nSyntheticEvent.augmentClass(SyntheticUIEvent, UIEventInterface);\n\nmodule.exports = SyntheticUIEvent;"]},"metadata":{},"sourceType":"script"}