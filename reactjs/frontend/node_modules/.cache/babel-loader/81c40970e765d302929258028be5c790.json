{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/frontend/src/components/Home/GEP.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport Table from \"./Table\";\nimport ReactDOM from \"react-dom\";\nimport './css/gep.css';\nimport { Button } from 'react-bootstrap';\n\nclass GEP extends React.Component {\n  constructor() {\n    super();\n    this.getTable = this.getTable.bind(this);\n    this.state = {\n      courses: null,\n      select_value: null,\n      loading: false,\n      numCourses_value: null\n    };\n  }\n  /*renderTable() {\n      this.setState({\n          loading: false\n      },\n      ReactDOM.render(\n          <Table data={this.state.courses}/>,\n          document.getElementById(\"id_table\")\n      ))\n  }*/\n\n\n  getTable() {\n    const GEP = this;\n    let url = \"http://localhost:5000/gep\";\n    this.setState({\n      loading: true\n    });\n    fetch(url, {\n      method: \"GET\",\n      //headers: {\"GEP\": document.getElementById(\"gep_list_select\").value, \"term\": this.props.whichterm}\n      headers: {\n        \"GEP\": this.state.select_value,\n        \"num_courses\": this.state.numCourses_value,\n        \"term\": localStorage.getItem(\"term\")\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      courses: data\n    }, () => {\n      ReactDOM.render( /*#__PURE__*/React.createElement(\"p\", {\n        id: \"tableNoteMsg\",\n        class: \"lead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 67\n        }\n      }, \"Note: If you see a higher rated course that is near the bottom of the list, it is either a closed section or it has the same professor as a course higher in the list.\")), document.getElementById(\"tableNote\"));\n      ReactDOM.render( /*#__PURE__*/React.createElement(Table, {\n        data: this.state.courses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }\n      }), document.getElementById('id_table'));\n    }));\n  }\n\n  render() {\n    const gepOptions = ['Health and Exercise Studies', 'Humanities', 'Interdisciplinary Perspectives', 'Mathematical Sciences', 'Natural Sciences', 'Social Sciences', 'US Diversity', 'Additional Breadth', 'Visual and Performing Arts'];\n    const gepLabels = gepOptions.map(option => ({\n      label: option\n    }));\n    const gepOptionValues = [\"HES\", \"HUM\", \"IDP\", \"MATH\", \"SCI\", \"SS\", \"USD\", \"ADDTL\", \"VPA\"];\n    const gepValues = gepOptionValues.map(optionValue => ({\n      value: optionValue\n    }));\n    const gepFinal = [];\n\n    for (var i = 0; i < gepLabels.length; i++) {\n      gepFinal[i] = {\n        label: gepLabels[i].label,\n        value: gepValues[i].value\n      };\n    }\n\n    const numCourses = [{\n      label: 5,\n      value: 5\n    }, {\n      label: 6,\n      value: 6\n    }, {\n      label: 7,\n      value: 7\n    }, {\n      label: 8,\n      value: 8\n    }, {\n      label: 9,\n      value: 9\n    }, {\n      label: 10,\n      value: 10\n    }];\n\n    if (this.state.loading) {\n      this.setState({\n        loading: false\n      });\n      ReactDOM.render( /*#__PURE__*/React.createElement(\"p\", {\n        id: \"loadingMsg\",\n        class: \"lead\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, \"Loading...\"), document.getElementById(\"tableNote\"));\n    } // const GEPList = () => (\n    //     <div className=\"app\">\n    //         <div className=\"container\">\n    //             <div style={{width:\"300px\", margin:\"0 auto\"}}>\n    //                 <Select className=\"gepSelect\"\n    //                         id='gep_list_select' \n    //                         options={gepFinal} \n    //                         //onChange={this.setState({select_value: document.getElementById('gep_list_select').value})}\n    //                         onChange={optionValue => this.setState({select_value: optionValue.value})}\n    //                 />\n    //                 {console.log(this.state.select_value)}\n    //             </div>\n    //         </div>\n    //     </div>\n    // );\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"type\",\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, \"Select a GEP\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"typeofgep\",\n      class: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, \"Please select the type of GEP you are looking for.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"typeofgep\",\n      style: {\n        width: \"300px\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"gepSelect\",\n      id: \"gep_list_select\",\n      options: gepFinal //onChange={this.setState({select_value: document.getElementById('gep_list_select').value})}\n      ,\n      onChange: optionValue => this.setState({\n        select_value: optionValue.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"howmanycourses\",\n      class: \"lead\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, \"How many courses would you like to view?\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"howmanycourses\",\n      style: {\n        width: \"300px\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      className: \"numCourseSelect\",\n      id: \"num_course_select\",\n      options: numCourses //defaultValue={numCourses[0]}\n      ,\n      onChange: optionValue => this.setState({\n        numCourses_value: optionValue.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"whichgepdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"btn btn-danger\",\n      id: \"whichgep\",\n      name: \"whichgep\",\n      onClick: this.getTable,\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 25\n      }\n    }, \"Select\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"tableNote\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"id_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default GEP;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/src/components/Home/GEP.jsx"],"names":["React","Select","Table","ReactDOM","Button","GEP","Component","constructor","getTable","bind","state","courses","select_value","loading","numCourses_value","url","setState","fetch","method","headers","localStorage","getItem","then","response","json","data","render","document","getElementById","gepOptions","gepLabels","map","option","label","gepOptionValues","gepValues","optionValue","value","gepFinal","i","length","numCourses","width","margin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Select from 'react-select';\nimport Table from \"./Table\";\nimport ReactDOM from \"react-dom\";\nimport './css/gep.css'\nimport {Button} from 'react-bootstrap';\n\nclass GEP extends React.Component {\n\n    constructor() {\n        super();\n        this.getTable = this.getTable.bind(this)\n\n        this.state = {\n            courses: null,\n            select_value: null,\n            loading: false,\n            numCourses_value: null\n        };\n    }\n\n    /*renderTable() {\n        this.setState({\n            loading: false\n        },\n        ReactDOM.render(\n            <Table data={this.state.courses}/>,\n            document.getElementById(\"id_table\")\n        ))\n    }*/\n\n    getTable() {\n        const GEP = this;\n        let url = \"http://localhost:5000/gep\";\n        this.setState({loading: true})\n\n        fetch( \n            url, {\n                method: \"GET\",\n                //headers: {\"GEP\": document.getElementById(\"gep_list_select\").value, \"term\": this.props.whichterm}\n                headers: {\"GEP\": this.state.select_value, \"num_courses\": this.state.numCourses_value, \"term\": localStorage.getItem(\"term\")}\n           }\n        ).then(\n           response => response.json()\n        ).then(\n            data => this.setState({\n                courses: data\n            },\n            () => {\n                ReactDOM.render(<p id=\"tableNoteMsg\" class=\"lead\"><em>Note: If you see a higher rated course that is near the bottom of the list, it is either a closed section or it has the same professor as a course higher in the list.</em></p>, document.getElementById(\"tableNote\"))\n                ReactDOM.render(<Table data={this.state.courses} />, document.getElementById('id_table'))\n                }\n            )\n        )\n    }\n\n    render() {\n        const gepOptions = ['Health and Exercise Studies', 'Humanities', 'Interdisciplinary Perspectives', \n                            'Mathematical Sciences', 'Natural Sciences', 'Social Sciences', 'US Diversity',\n                            'Additional Breadth', 'Visual and Performing Arts'];\n        const gepLabels = gepOptions.map((option) => (\n            {label: option}\n        ));\n\n        const gepOptionValues = [\"HES\", \"HUM\", \"IDP\", \"MATH\", \"SCI\", \"SS\", \"USD\", \"ADDTL\", \"VPA\"];\n        const gepValues = gepOptionValues.map((optionValue) => (\n            {value: optionValue}\n        ));\n\n        const gepFinal = [];\n        for (var i = 0; i < gepLabels.length; i++) {\n            gepFinal[i] = {label: gepLabels[i].label,\n                           value: gepValues[i].value}\n        }\n\n        const numCourses = [\n            {label: 5, value: 5}, \n            {label: 6, value: 6},\n            {label: 7, value: 7},\n            {label: 8, value: 8},\n            {label: 9, value: 9},\n            {label: 10, value:10}\n        ]\n\n        if(this.state.loading) {\n            this.setState({loading:false})\n            ReactDOM.render(\n                <p id=\"loadingMsg\" class=\"lead\">Loading...</p>,\n                document.getElementById(\"tableNote\")\n            )\n        }\n        // const GEPList = () => (\n        //     <div className=\"app\">\n        //         <div className=\"container\">\n        //             <div style={{width:\"300px\", margin:\"0 auto\"}}>\n        //                 <Select className=\"gepSelect\"\n        //                         id='gep_list_select' \n        //                         options={gepFinal} \n        //                         //onChange={this.setState({select_value: document.getElementById('gep_list_select').value})}\n        //                         onChange={optionValue => this.setState({select_value: optionValue.value})}\n        //                 />\n        //                 {console.log(this.state.select_value)}\n        //             </div>\n        //         </div>\n        //     </div>\n        // );\n\n        return(\n            <div>\n                <div id=\"type\" class=\"text-center\">\n                    <h2 class=\"mt-5\">Select a GEP</h2>\n                    <label for=\"typeofgep\" class=\"lead\">Please select the type of GEP you are looking for.</label>\n                    {/* selectable options for GEPs */}\n                    {/* <GEPList /> */}\n                    <div id=\"typeofgep\" style={{width:\"300px\", margin:\"0 auto\"}}>\n                        <Select className=\"gepSelect\"\n                                id='gep_list_select' \n                                options={gepFinal} \n                                //onChange={this.setState({select_value: document.getElementById('gep_list_select').value})}\n                                onChange={optionValue => this.setState({select_value: optionValue.value})}\n                        />\n                    </div>\n\n                    {/* Asks user how many courses they would like to view */}\n                    <label for=\"howmanycourses\" class=\"lead\">How many courses would you like to view?</label>\n                    <div id=\"howmanycourses\" style={{width:\"300px\", margin:\"0 auto\"}}>\n                        <Select className=\"numCourseSelect\"\n                                id='num_course_select' \n                                options={numCourses} \n                                //defaultValue={numCourses[0]}\n                                onChange={optionValue => this.setState({numCourses_value: optionValue.value})}\n                        />\n                    </div>\n                    {/* {console.log(this.state.select_value)} */}\n                    {/* button to select a specific GEP TODO: implement onclick */}\n                    <div id=\"whichgepdiv\">\n                        <Button\n                            class=\"btn btn-danger\" \n                            id=\"whichgep\" \n                            name=\"whichgep\" \n                            onClick={this.getTable}\n                            size=\"lg\">\n                            Select\n                        </Button>\n                    </div>\n                    \n                </div>\n\n                <div id =\"tableNote\">\n                </div>\n                <div id = \"id_table\">\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GEP;"]},"metadata":{},"sourceType":"module"}