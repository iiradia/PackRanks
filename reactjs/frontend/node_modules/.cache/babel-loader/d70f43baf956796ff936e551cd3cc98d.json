{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/frontend/src/components/Wishlist/Wishlist.jsx\";\n//imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from '../Home/Table';\nimport jwt from 'jwt-decode';\nimport { Link } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport './wishlist.css';\n\nclass Wishlist extends React.Component {\n  constructor() {\n    super();\n    this.removeCourses = this.removeCourses.bind(this);\n    this.viewWishlist();\n  }\n\n  removeCourses() {\n    //set courses to delete to selected courses\n    let cToDelete = JSON.parse(localStorage.getItem(\"checkedCourses\"));\n    let newCourses = \"\"; //filter out courses that should be removed from array \n\n    console.log(this.state.courses);\n\n    for (var i = 0; i < cToDelete.length; i++) {\n      let currentTermArray = this.state.courses[cToDelete[i][\"Semester\"]];\n      console.log(currentTermArray);\n    }\n    /*let newCourses = this.state.courses.filter(({Course, Semester, Section}) =>\n        !cToDelete.some(exclude => exclude.Course[0] === Course[0] &&exclude.Semester===Semester&&exclude.Section===Section)\n    );*/\n\n\n    console.log(newCourses); //reset checked courses\n\n    localStorage.setItem(\"checkedCourses\", JSON.stringify([])); //update db with call to API\n\n    let url = \"http://localhost:5000/resetWishlist\";\n    fetch(url, {\n      method: \"POST\",\n      body: JSON.stringify({\n        wishlist: newCourses,\n        token: localStorage.token\n      })\n    }).then(response => response.json());\n    ReactDOM.render( /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }\n    }), document.getElementById(\"wishlist\")); //render new table\n\n    if (newCourses.length > 0) {\n      ReactDOM.render( /*#__PURE__*/React.createElement(Table, {\n        data: newCourses,\n        type: \"homepage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }\n      }), document.getElementById('delWish'));\n    } else {\n      ReactDOM.render( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }\n      }), document.getElementById(\"delWish\"));\n    }\n  }\n\n  viewWishlist() {\n    const UserPage = this;\n    let url = \"http://localhost:5000/viewWishlist\";\n    fetch(url, {\n      method: \"GET\",\n      headers: {\n        \"token\": localStorage.token\n      }\n    }).then(response => response.json()).then(data => this.setState({\n      courses: data\n    }, () => {\n      // Code to show wishlist by terms \n      if (JSON.stringify(data).length > 0) {\n        //Loop through each term returned by flask\n        Object.keys(data).map(key => {\n          console.log(key);\n          const term_div = document.getElementById(\"wishlist\").appendChild(document.createElement('div'));\n          /* Set id of the key on the term div */\n\n          term_div.setAttribute(\"id\", key); //<Table data={data[key]} type=\"homepage\" />\n          //Render many rows of the table based on terms \n\n          ReactDOM.render( /*#__PURE__*/React.createElement(\"div\", {\n            id: key + \"section\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"h2\", {\n            id: \"termWishlistHeader\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }\n          }, key), /*#__PURE__*/React.createElement(Table, {\n            id: \"termWishlist\",\n            data: data[key],\n            type: \"homepage\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }\n          })), term_div);\n        });\n        /*\n        Object.keys(data).forEach(function(key) {\n            //ReactDOM.render(<h3>{key}</h3>, document.getElementById(\"termName\"));\n            //ReactDOM.render(<Table data={data[key]} type=\"homepage\" />, document.getElementById('wishlist'))\n            ReactDOM.render(\n                <div id={key}>\n                    <h3>{key}</h3>\n                    <Table data={data[key]} type=\"homepage\" />\n                </div>,\n                document.getElementById('wishlist')\n            )\n        });*/\n      }\n    }));\n  }\n\n  render() {\n    let identity = jwt(localStorage.token).identity;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      id: \"welcome\",\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 51\n      }\n    }, identity.first_name, \"'s\"), \" Wishlist\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"backtohomepage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/homepage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-danger\",\n      id: \"backtohmpg\",\n      name: \"backtohmpg\",\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, \"Back\"))), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"termName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"wishlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"delWish\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"deleteItems\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-danger\",\n      id: \"delWishlist\",\n      name: \"delWishlist\",\n      size: \"lg\",\n      onClick: this.removeCourses,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 25\n      }\n    }, \"Delete Selected Rows from Wishlist\")));\n  }\n\n}\n\nexport default Wishlist;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/src/components/Wishlist/Wishlist.jsx"],"names":["React","ReactDOM","Table","jwt","Link","Button","Wishlist","Component","constructor","removeCourses","bind","viewWishlist","cToDelete","JSON","parse","localStorage","getItem","newCourses","console","log","state","courses","i","length","currentTermArray","setItem","stringify","url","fetch","method","body","wishlist","token","then","response","json","render","document","getElementById","UserPage","headers","data","setState","Object","keys","map","key","term_div","appendChild","createElement","setAttribute","identity","first_name"],"mappings":"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","sourcesContent":["//imports\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Table from '../Home/Table';\nimport jwt from 'jwt-decode';\nimport {Link} from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\nimport './wishlist.css';\n\nclass Wishlist extends React.Component {\n\n    constructor() {\n        super();\n        \n        this.removeCourses = this.removeCourses.bind(this);\n\n        this.viewWishlist();\n    }\n\n    removeCourses() {\n        //set courses to delete to selected courses\n        let cToDelete = JSON.parse(localStorage.getItem(\"checkedCourses\"))\n        let newCourses = \"\";\n        //filter out courses that should be removed from array \n        console.log(this.state.courses);\n        for (var i = 0; i < cToDelete.length; i++) {\n            let currentTermArray = this.state.courses[cToDelete[i][\"Semester\"]];\n            console.log(currentTermArray);\n        }\n        /*let newCourses = this.state.courses.filter(({Course, Semester, Section}) =>\n            !cToDelete.some(exclude => exclude.Course[0] === Course[0] &&exclude.Semester===Semester&&exclude.Section===Section)\n        );*/\n        console.log(newCourses);\n        //reset checked courses\n        localStorage.setItem(\"checkedCourses\", JSON.stringify([]));\n        //update db with call to API\n        let url = \"http://localhost:5000/resetWishlist\"\n        fetch( \n            url, {\n                method: \"POST\",\n                body: JSON.stringify(\n                    {wishlist:newCourses,\n                    token: localStorage.token\n                    }\n                )\n            }\n        ).then(\n        response => response.json()\n        )\n        ReactDOM.render(<p></p>, document.getElementById(\"wishlist\"))\n        //render new table\n        if (newCourses.length > 0) {\n            ReactDOM.render(<Table data={newCourses} type=\"homepage\" />, document.getElementById('delWish'))\n        }\n        else {\n            ReactDOM.render(<p></p>, document.getElementById(\"delWish\"))\n        }\n    }\n\n    viewWishlist() {\n        const UserPage = this;\n        let url = \"http://localhost:5000/viewWishlist\";\n        fetch( \n            url, {\n                method: \"GET\",\n                headers: {\"token\": localStorage.token }\n            }\n        ).then(\n        response => response.json()\n        ).then(\n            data => this.setState({\n                courses: data\n            },\n            () => {\n\n                // Code to show wishlist by terms \n                if (JSON.stringify(data).length > 0) {\n                    \n                    //Loop through each term returned by flask\n                    Object.keys(data).map( (key) => { \n                        console.log(key);\n                        const term_div = document.getElementById(\"wishlist\").appendChild(document.createElement('div'));\n                        /* Set id of the key on the term div */\n                        term_div.setAttribute(\"id\", key);\n                        //<Table data={data[key]} type=\"homepage\" />\n                        //Render many rows of the table based on terms \n                        ReactDOM.render(\n                            <div id={key+\"section\"}>\n                                <h2 id=\"termWishlistHeader\">{key}</h2>\n                                <Table id=\"termWishlist\" data={data[key]} type=\"homepage\" />\n                            </div>,\n                            term_div\n                        )\n                    })\n                    /*\n                    Object.keys(data).forEach(function(key) {\n                        //ReactDOM.render(<h3>{key}</h3>, document.getElementById(\"termName\"));\n                        //ReactDOM.render(<Table data={data[key]} type=\"homepage\" />, document.getElementById('wishlist'))\n                        ReactDOM.render(\n                            <div id={key}>\n                                <h3>{key}</h3>\n                                <Table data={data[key]} type=\"homepage\" />\n                            </div>,\n                            document.getElementById('wishlist')\n                        )\n                   });*/\n                }\n            }\n            )\n        )\n    }\n\n    render() {\n        let identity = jwt(localStorage.token).identity;\n        return (\n            <div>\n                <h1 id=\"welcome\" className=\"mt-5\"><strong>{identity.first_name}'s</strong> Wishlist</h1>\n                \n                <div id=\"backtohomepage\">\n                        {/* Added link to wishlist */}\n                        <Link to=\"/homepage\">\n                            <Button\n                            className=\"btn btn-danger\" \n                                    id=\"backtohmpg\" \n                                    name=\"backtohmpg\" \n                                    size=\"lg\">\n                                Back\n                            </Button>\n                        </Link>\n                </div>\n\n                <div id=\"termName\">\n\n                </div>\n                <div id=\"wishlist\">\n\n                </div>\n\n                <div id=\"delWish\">\n\n                </div>\n\n                <div id=\"deleteItems\">\n                        {/* Added delete wishlist course functionality. */}\n                        <Button\n                            className=\"btn btn-danger\" \n                            id=\"delWishlist\"\n                            name=\"delWishlist\" \n                            size=\"lg\"\n                            onClick={this.removeCourses}>\n                            Delete Selected Rows from Wishlist\n                        </Button>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Wishlist;"]},"metadata":{},"sourceType":"module"}