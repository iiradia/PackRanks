{"ast":null,"code":"import getBorders from \"./getBorders.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getWindow from \"./getWindow.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\"; // Borders + scrollbars\n\nexport default function getDecorations(element) {\n  var win = getWindow(element);\n  var borders = getBorders(element);\n  var isHTML = getNodeName(element) === 'html';\n  var winScrollBarX = getWindowScrollBarX(element);\n  var x = element.clientWidth + borders.right;\n  var y = element.clientHeight + borders.bottom; // HACK:\n  // document.documentElement.clientHeight on iOS reports the height of the\n  // viewport including the bottom bar, even if the bottom bar isn't visible.\n  // If the difference between window innerHeight and html clientHeight is more\n  // than 50, we assume it's a mobile bottom bar and ignore scrollbars.\n  // * A 50px thick scrollbar is likely non-existent (macOS is 15px and Windows\n  //   is about 17px)\n  // * The mobile bar is 114px tall\n\n  if (isHTML && win.innerHeight - element.clientHeight > 50) {\n    y = win.innerHeight - borders.bottom;\n  }\n\n  return {\n    top: isHTML ? 0 : element.clientTop,\n    right: // RTL scrollbar (scrolling containers only)\n    element.clientLeft > borders.left ? borders.right : // LTR scrollbar\n    isHTML ? win.innerWidth - x - winScrollBarX : element.offsetWidth - x,\n    bottom: isHTML ? win.innerHeight - y : element.offsetHeight - y,\n    left: isHTML ? winScrollBarX : element.clientLeft\n  };\n}","map":{"version":3,"sources":["/mnt/c/Users/Harry-PC/Documents/ProgrammingProjects/EasyA/reactjs/frontend/node_modules/@popperjs/core/lib/dom-utils/getDecorations.js"],"names":["getBorders","getNodeName","getWindow","getWindowScrollBarX","getDecorations","element","win","borders","isHTML","winScrollBarX","x","clientWidth","right","y","clientHeight","bottom","innerHeight","top","clientTop","clientLeft","left","innerWidth","offsetWidth","offsetHeight"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,iBAAvB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,SAAP,MAAsB,gBAAtB;AACA,OAAOC,mBAAP,MAAgC,0BAAhC,C,CAA4D;;AAE5D,eAAe,SAASC,cAAT,CAAwBC,OAAxB,EAAiC;AAC9C,MAAIC,GAAG,GAAGJ,SAAS,CAACG,OAAD,CAAnB;AACA,MAAIE,OAAO,GAAGP,UAAU,CAACK,OAAD,CAAxB;AACA,MAAIG,MAAM,GAAGP,WAAW,CAACI,OAAD,CAAX,KAAyB,MAAtC;AACA,MAAII,aAAa,GAAGN,mBAAmB,CAACE,OAAD,CAAvC;AACA,MAAIK,CAAC,GAAGL,OAAO,CAACM,WAAR,GAAsBJ,OAAO,CAACK,KAAtC;AACA,MAAIC,CAAC,GAAGR,OAAO,CAACS,YAAR,GAAuBP,OAAO,CAACQ,MAAvC,CAN8C,CAMC;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAIP,MAAM,IAAIF,GAAG,CAACU,WAAJ,GAAkBX,OAAO,CAACS,YAA1B,GAAyC,EAAvD,EAA2D;AACzDD,IAAAA,CAAC,GAAGP,GAAG,CAACU,WAAJ,GAAkBT,OAAO,CAACQ,MAA9B;AACD;;AAED,SAAO;AACLE,IAAAA,GAAG,EAAET,MAAM,GAAG,CAAH,GAAOH,OAAO,CAACa,SADrB;AAELN,IAAAA,KAAK,EAAE;AACPP,IAAAA,OAAO,CAACc,UAAR,GAAqBZ,OAAO,CAACa,IAA7B,GAAoCb,OAAO,CAACK,KAA5C,GAAoD;AACpDJ,IAAAA,MAAM,GAAGF,GAAG,CAACe,UAAJ,GAAiBX,CAAjB,GAAqBD,aAAxB,GAAwCJ,OAAO,CAACiB,WAAR,GAAsBZ,CAJ/D;AAKLK,IAAAA,MAAM,EAAEP,MAAM,GAAGF,GAAG,CAACU,WAAJ,GAAkBH,CAArB,GAAyBR,OAAO,CAACkB,YAAR,GAAuBV,CALzD;AAMLO,IAAAA,IAAI,EAAEZ,MAAM,GAAGC,aAAH,GAAmBJ,OAAO,CAACc;AANlC,GAAP;AAQD","sourcesContent":["import getBorders from \"./getBorders.js\";\nimport getNodeName from \"./getNodeName.js\";\nimport getWindow from \"./getWindow.js\";\nimport getWindowScrollBarX from \"./getWindowScrollBarX.js\"; // Borders + scrollbars\n\nexport default function getDecorations(element) {\n  var win = getWindow(element);\n  var borders = getBorders(element);\n  var isHTML = getNodeName(element) === 'html';\n  var winScrollBarX = getWindowScrollBarX(element);\n  var x = element.clientWidth + borders.right;\n  var y = element.clientHeight + borders.bottom; // HACK:\n  // document.documentElement.clientHeight on iOS reports the height of the\n  // viewport including the bottom bar, even if the bottom bar isn't visible.\n  // If the difference between window innerHeight and html clientHeight is more\n  // than 50, we assume it's a mobile bottom bar and ignore scrollbars.\n  // * A 50px thick scrollbar is likely non-existent (macOS is 15px and Windows\n  //   is about 17px)\n  // * The mobile bar is 114px tall\n\n  if (isHTML && win.innerHeight - element.clientHeight > 50) {\n    y = win.innerHeight - borders.bottom;\n  }\n\n  return {\n    top: isHTML ? 0 : element.clientTop,\n    right: // RTL scrollbar (scrolling containers only)\n    element.clientLeft > borders.left ? borders.right : // LTR scrollbar\n    isHTML ? win.innerWidth - x - winScrollBarX : element.offsetWidth - x,\n    bottom: isHTML ? win.innerHeight - y : element.offsetHeight - y,\n    left: isHTML ? winScrollBarX : element.clientLeft\n  };\n}"]},"metadata":{},"sourceType":"module"}