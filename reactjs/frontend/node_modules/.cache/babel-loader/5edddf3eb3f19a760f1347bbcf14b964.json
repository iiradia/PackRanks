{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\n\nvar traverseAllChildren = require('./traverseAllChildren');\n\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\n\n\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\n\n\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n\n  var result = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n\n  return result;\n}\n\nmodule.exports = flattenChildren;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/node_modules/react-simplert/node_modules/react-dom/lib/flattenChildren.js"],"names":["KeyEscapeUtils","require","traverseAllChildren","warning","ReactComponentTreeHook","process","env","NODE_ENV","flattenSingleChildIntoContext","traverseContext","child","name","selfDebugID","result","keyUnique","undefined","unescape","getStackAddendumByID","flattenChildren","children","module","exports"],"mappings":"AAAA;;;;;;;;AASA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAD,CAA5B;;AACA,IAAIC,mBAAmB,GAAGD,OAAO,CAAC,uBAAD,CAAjC;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,kBAAD,CAArB;;AAEA,IAAIG,sBAAJ;;AAEA,IAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAA1C,IAAiDD,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAA9E,EAAsF;AACpF;AACA;AACA;AACA;AACA;AACAH,EAAAA,sBAAsB,GAAGH,OAAO,CAAC,kCAAD,CAAhC;AACD;AAED;;;;;;;;AAMA,SAASO,6BAAT,CAAuCC,eAAvC,EAAwDC,KAAxD,EAA+DC,IAA/D,EAAqEC,WAArE,EAAkF;AAChF;AACA,MAAIH,eAAe,IAAI,OAAOA,eAAP,KAA2B,QAAlD,EAA4D;AAC1D,QAAII,MAAM,GAAGJ,eAAb;AACA,QAAIK,SAAS,GAAGD,MAAM,CAACF,IAAD,CAAN,KAAiBI,SAAjC;;AACA,QAAIV,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,UAAI,CAACH,sBAAL,EAA6B;AAC3BA,QAAAA,sBAAsB,GAAGH,OAAO,CAAC,kCAAD,CAAhC;AACD;;AACD,UAAI,CAACa,SAAL,EAAgB;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCJ,OAAO,CAAC,KAAD,EAAQ,uEAAuE,uEAAvE,GAAiJ,iCAAzJ,EAA4LH,cAAc,CAACgB,QAAf,CAAwBL,IAAxB,CAA5L,EAA2NP,sBAAsB,CAACa,oBAAvB,CAA4CL,WAA5C,CAA3N,CAA/C,GAAsU,KAAK,CAA3U;AACD;AACF;;AACD,QAAIE,SAAS,IAAIJ,KAAK,IAAI,IAA1B,EAAgC;AAC9BG,MAAAA,MAAM,CAACF,IAAD,CAAN,GAAeD,KAAf;AACD;AACF;AACF;AAED;;;;;;;AAKA,SAASQ,eAAT,CAAyBC,QAAzB,EAAmCP,WAAnC,EAAgD;AAC9C,MAAIO,QAAQ,IAAI,IAAhB,EAAsB;AACpB,WAAOA,QAAP;AACD;;AACD,MAAIN,MAAM,GAAG,EAAb;;AAEA,MAAIR,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCL,IAAAA,mBAAmB,CAACiB,QAAD,EAAW,UAAUV,eAAV,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwC;AACpE,aAAOH,6BAA6B,CAACC,eAAD,EAAkBC,KAAlB,EAAyBC,IAAzB,EAA+BC,WAA/B,CAApC;AACD,KAFkB,EAEhBC,MAFgB,CAAnB;AAGD,GAJD,MAIO;AACLX,IAAAA,mBAAmB,CAACiB,QAAD,EAAWX,6BAAX,EAA0CK,MAA1C,CAAnB;AACD;;AACD,SAAOA,MAAP;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBH,eAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nvar KeyEscapeUtils = require('./KeyEscapeUtils');\nvar traverseAllChildren = require('./traverseAllChildren');\nvar warning = require('fbjs/lib/warning');\n\nvar ReactComponentTreeHook;\n\nif (typeof process !== 'undefined' && process.env && process.env.NODE_ENV === 'test') {\n  // Temporary hack.\n  // Inline requires don't work well with Jest:\n  // https://github.com/facebook/react/issues/7240\n  // Remove the inline requires when we don't need them anymore:\n  // https://github.com/facebook/react/pull/7178\n  ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n}\n\n/**\n * @param {function} traverseContext Context passed through traversal.\n * @param {?ReactComponent} child React child component.\n * @param {!string} name String name of key path to child.\n * @param {number=} selfDebugID Optional debugID of the current internal instance.\n */\nfunction flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID) {\n  // We found a component instance.\n  if (traverseContext && typeof traverseContext === 'object') {\n    var result = traverseContext;\n    var keyUnique = result[name] === undefined;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!ReactComponentTreeHook) {\n        ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n      }\n      if (!keyUnique) {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'flattenChildren(...): Encountered two children with the same key, ' + '`%s`. Child keys must be unique; when two children share a key, only ' + 'the first child will be used.%s', KeyEscapeUtils.unescape(name), ReactComponentTreeHook.getStackAddendumByID(selfDebugID)) : void 0;\n      }\n    }\n    if (keyUnique && child != null) {\n      result[name] = child;\n    }\n  }\n}\n\n/**\n * Flattens children that are typically specified as `props.children`. Any null\n * children will not be included in the resulting object.\n * @return {!object} flattened children keyed by name.\n */\nfunction flattenChildren(children, selfDebugID) {\n  if (children == null) {\n    return children;\n  }\n  var result = {};\n\n  if (process.env.NODE_ENV !== 'production') {\n    traverseAllChildren(children, function (traverseContext, child, name) {\n      return flattenSingleChildIntoContext(traverseContext, child, name, selfDebugID);\n    }, result);\n  } else {\n    traverseAllChildren(children, flattenSingleChildIntoContext, result);\n  }\n  return result;\n}\n\nmodule.exports = flattenChildren;"]},"metadata":{},"sourceType":"script"}