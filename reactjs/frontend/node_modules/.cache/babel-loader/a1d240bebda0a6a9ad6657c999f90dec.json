{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nvar getScrollParent = function (node) {\n  var parent = node;\n\n  while (parent = parent.parentElement) {\n    var overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body) return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\") return parent;\n  }\n\n  return window;\n};\n\nvar offsetTill = function (node, target) {\n  var current = node;\n  var offset = 0; // If target is not an offsetParent itself, subtract its offsetTop and set correct target\n\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n\n  return offset;\n};\n\nvar stickyProp = null;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\")) stickyProp = \"sticky\";else if (CSS.supports(\"position\", \"-webkit-sticky\")) stickyProp = \"-webkit-sticky\";\n} // Inspired by https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n\n\nvar passiveArg = false;\n\ntry {\n  var opts = Object.defineProperty({}, \"passive\", {\n    // eslint-disable-next-line getter-return\n    get: function get() {\n      passiveArg = {\n        passive: true\n      };\n    }\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nvar StickyBox = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(StickyBox, _React$Component);\n\n  function StickyBox(props) {\n    var _this = _React$Component.call(this, props) || this;\n\n    _this.addListener = function (element, event, handler, passive) {\n      element.addEventListener(event, handler, passive);\n\n      _this.unsubscribes.push(function () {\n        return element.removeEventListener(event, handler);\n      });\n    };\n\n    _this.addResizeObserver = function (node, handler) {\n      var ro = new ResizeObserver(handler);\n      ro.observe(node);\n\n      _this.unsubscribes.push(function () {\n        return ro.disconnect();\n      });\n    };\n\n    _this.registerContainerRef = function (n) {\n      if (!stickyProp) return;\n      _this.node = n;\n\n      if (n) {\n        _this.scrollPane = getScrollParent(_this.node);\n        _this.latestScrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n\n        _this.addListener(_this.scrollPane, \"scroll\", _this.handleScroll, passiveArg);\n\n        _this.addListener(_this.scrollPane, \"mousewheel\", _this.handleScroll, passiveArg);\n\n        if (_this.scrollPane === window) {\n          _this.addListener(window, \"resize\", _this.handleWindowResize);\n\n          _this.handleWindowResize();\n        } else {\n          _this.addResizeObserver(_this.scrollPane, _this.handleScrollPaneResize);\n\n          _this.handleScrollPaneResize();\n        }\n\n        _this.addResizeObserver(_this.node.parentNode, _this.handleParentNodeResize);\n\n        _this.handleParentNodeResize();\n\n        _this.addResizeObserver(_this.node, _this.handleNodeResize);\n\n        _this.handleNodeResize({\n          initial: true\n        });\n\n        _this.initial();\n      } else {\n        _this.unsubscribes.forEach(function (fn) {\n          return fn();\n        });\n\n        _this.unsubscribes = [];\n        _this.scrollPane = null;\n      }\n    };\n\n    _this.getCurrentOffset = function () {\n      if (_this.mode === \"relative\") return _this.offset;\n      var _this$props = _this.props,\n          offsetTop = _this$props.offsetTop,\n          offsetBottom = _this$props.offsetBottom;\n\n      if (_this.mode === \"stickyTop\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY - _this.naturalTop + offsetTop);\n      }\n\n      if (_this.mode === \"stickyBottom\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY + _this.viewPortHeight - (_this.naturalTop + _this.nodeHeight + offsetBottom));\n      }\n    };\n\n    _this.handleWindowResize = function () {\n      _this.viewPortHeight = window.innerHeight;\n      _this.scrollPaneOffset = 0;\n\n      _this.handleScroll();\n    };\n\n    _this.handleScrollPaneResize = function () {\n      _this.viewPortHeight = _this.scrollPane.offsetHeight;\n\n      if (process.env.NODE_ENV !== \"production\" && _this.viewPortHeight === 0) {\n        console.warn(\"react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:\", _this.scrollPane);\n      } // Only applicable if scrollPane is an offsetParent\n\n\n      if (_this.scrollPane.firstChild.offsetParent === _this.scrollPane) {\n        _this.scrollPaneOffset = _this.scrollPane.getBoundingClientRect().top;\n      } else {\n        _this.scrollPaneOffset = 0;\n      }\n\n      _this.handleScroll();\n    };\n\n    _this.handleParentNodeResize = function () {\n      var parentNode = _this.node.parentNode;\n      var computedParentStyle = getComputedStyle(parentNode, null);\n      var parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n      var parentPaddingBottom = parseInt(computedParentStyle.getPropertyValue(\"padding-bottom\"), 10);\n      _this.naturalTop = offsetTill(parentNode, _this.scrollPane) + parentPaddingTop + _this.scrollPaneOffset;\n      var oldParentHeight = _this.parentHeight;\n      _this.parentHeight = parentNode.getBoundingClientRect().height - (parentPaddingTop + parentPaddingBottom);\n\n      if (_this.mode === \"relative\") {\n        if (_this.props.bottom) {\n          _this.changeMode(\"relative\");\n        } else {\n          // If parent height decreased...\n          if (oldParentHeight > _this.parentHeight) {\n            _this.changeToStickyBottomIfBoxTooLow(_this.latestScrollY);\n          }\n        }\n      }\n\n      if (oldParentHeight !== _this.parentHeight && _this.mode === \"relative\") {\n        _this.latestScrollY = Number.POSITIVE_INFINITY;\n\n        _this.handleScroll();\n      }\n    };\n\n    _this.handleNodeResize = function (_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          initial = _ref.initial;\n\n      var prevHeight = _this.nodeHeight;\n      _this.nodeHeight = _this.node.getBoundingClientRect().height;\n\n      if (!initial && prevHeight !== _this.nodeHeight) {\n        var _this$props2 = _this.props,\n            offsetTop = _this$props2.offsetTop,\n            offsetBottom = _this$props2.offsetBottom,\n            bottom = _this$props2.bottom;\n\n        if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n          // Just make it sticky if node smaller than viewport\n          _this.mode = undefined;\n\n          _this.initial();\n        } else {\n          var diff = prevHeight - _this.nodeHeight;\n          var lowestPossible = _this.parentHeight - _this.nodeHeight;\n          var nextOffset = Math.min(lowestPossible, _this.getCurrentOffset() + (bottom ? diff : 0));\n          _this.offset = Math.max(0, nextOffset);\n          if (!bottom || _this.mode !== \"stickyBottom\") _this.changeMode(\"relative\");\n        }\n      }\n    };\n\n    _this.handleScroll = function () {\n      var _this$props3 = _this.props,\n          offsetTop = _this$props3.offsetTop,\n          offsetBottom = _this$props3.offsetBottom;\n      var scrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n      if (scrollY === _this.latestScrollY) return;\n\n      if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n        // Just make it sticky if node smaller than viewport\n        _this.initial();\n\n        _this.latestScrollY = scrollY;\n        return;\n      }\n\n      var scrollDelta = scrollY - _this.latestScrollY;\n      _this.offset = _this.getCurrentOffset();\n\n      if (scrollDelta > 0) {\n        // scroll down\n        if (_this.mode === \"stickyTop\") {\n          if (scrollY + _this.scrollPaneOffset + offsetTop > _this.naturalTop) {\n            if (scrollY + _this.scrollPaneOffset + _this.viewPortHeight <= _this.naturalTop + _this.nodeHeight + _this.offset + offsetBottom) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyBottom\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          _this.changeToStickyBottomIfBoxTooLow(scrollY);\n        }\n      } else {\n        // scroll up\n        if (_this.mode === \"stickyBottom\") {\n          if (_this.scrollPaneOffset + scrollY + _this.viewPortHeight < _this.naturalTop + _this.parentHeight + offsetBottom) {\n            if (_this.scrollPaneOffset + scrollY + offsetTop >= _this.naturalTop + _this.offset) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyTop\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          if (_this.scrollPaneOffset + scrollY + offsetTop < _this.naturalTop + _this.offset) {\n            _this.changeMode(\"stickyTop\");\n          }\n        }\n      }\n\n      _this.latestScrollY = scrollY;\n    };\n\n    if (props.offset && process.env.NODE_ENV !== \"production\") {\n      console.warn(\"react-sticky-box's \\\"offset\\\" prop is deprecated. Please use \\\"offsetTop\\\" instead. It'll be removed in v0.8.\");\n    }\n\n    _this.unsubscribes = [];\n    return _this;\n  }\n\n  var _proto = StickyBox.prototype;\n\n  _proto.changeMode = function changeMode(newMode) {\n    var _this$props4 = this.props,\n        onChangeMode = _this$props4.onChangeMode,\n        offsetTop = _this$props4.offsetTop,\n        offsetBottom = _this$props4.offsetBottom,\n        bottom = _this$props4.bottom;\n    if (this.mode !== newMode) onChangeMode(this.mode, newMode);\n    this.mode = newMode;\n\n    if (newMode === \"relative\") {\n      this.node.style.position = \"relative\";\n\n      if (bottom) {\n        var nextBottom = Math.max(0, this.parentHeight - this.nodeHeight - this.offset);\n        this.node.style.bottom = nextBottom + \"px\";\n      } else {\n        this.node.style.top = this.offset + \"px\";\n      }\n    } else {\n      this.node.style.position = stickyProp;\n\n      if (newMode === \"stickyBottom\") {\n        if (bottom) {\n          this.node.style.bottom = offsetBottom + \"px\";\n        } else {\n          this.node.style.top = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        }\n      } else {\n        // stickyTop\n        if (bottom) {\n          this.node.style.bottom = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        } else {\n          this.node.style.top = offsetTop + \"px\";\n        }\n      }\n    }\n\n    this.offset = this.getCurrentOffset();\n  };\n\n  _proto.initial = function initial() {\n    var bottom = this.props.bottom;\n\n    if (bottom) {\n      if (this.mode !== \"stickyBottom\") this.changeMode(\"stickyBottom\");\n    } else {\n      if (this.mode !== \"stickyTop\") this.changeMode(\"stickyTop\");\n    }\n  };\n\n  _proto.changeToStickyBottomIfBoxTooLow = function changeToStickyBottomIfBoxTooLow(scrollY) {\n    var offsetBottom = this.props.offsetBottom;\n\n    if (scrollY + this.scrollPaneOffset + this.viewPortHeight >= this.naturalTop + this.nodeHeight + this.offset + offsetBottom) {\n      this.changeMode(\"stickyBottom\");\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        children = _this$props5.children,\n        className = _this$props5.className,\n        style = _this$props5.style;\n    return React.createElement(\"div\", {\n      className: className,\n      style: style,\n      ref: this.registerContainerRef\n    }, children);\n  };\n\n  return StickyBox;\n}(React.Component);\n\nexport { StickyBox as default };\nStickyBox.defaultProps = {\n  onChangeMode: function onChangeMode() {},\n  offsetTop: 0,\n  offsetBottom: 0\n};\nprocess.env.NODE_ENV !== \"production\" ? StickyBox.propTypes = {\n  onChangeMode: PropTypes.func,\n  offsetTop: PropTypes.number,\n  offsetBottom: PropTypes.number,\n  bottom: PropTypes.bool\n} : void 0;","map":{"version":3,"sources":["/Users/mathew/EasyA/reactjs/frontend/node_modules/react-sticky-box/dist/es/index.js"],"names":["_inheritsLoose","React","PropTypes","ResizeObserver","getScrollParent","node","parent","parentElement","overflowYVal","getComputedStyle","getPropertyValue","document","body","window","offsetTill","target","current","offset","firstChild","offsetParent","offsetTop","stickyProp","CSS","supports","passiveArg","opts","Object","defineProperty","get","passive","addEventListener","removeEventListener","e","StickyBox","_React$Component","props","_this","call","addListener","element","event","handler","unsubscribes","push","addResizeObserver","ro","observe","disconnect","registerContainerRef","n","scrollPane","latestScrollY","scrollY","scrollTop","handleScroll","handleWindowResize","handleScrollPaneResize","parentNode","handleParentNodeResize","handleNodeResize","initial","forEach","fn","getCurrentOffset","mode","_this$props","offsetBottom","Math","max","scrollPaneOffset","naturalTop","viewPortHeight","nodeHeight","innerHeight","offsetHeight","process","env","NODE_ENV","console","warn","getBoundingClientRect","top","computedParentStyle","parentPaddingTop","parseInt","parentPaddingBottom","oldParentHeight","parentHeight","height","bottom","changeMode","changeToStickyBottomIfBoxTooLow","Number","POSITIVE_INFINITY","_temp","_ref","prevHeight","_this$props2","undefined","diff","lowestPossible","nextOffset","min","_this$props3","scrollDelta","_proto","prototype","newMode","_this$props4","onChangeMode","style","position","nextBottom","render","_this$props5","children","className","createElement","ref","Component","default","defaultProps","propTypes","func","number","bool"],"mappings":"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","sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/inheritsLoose\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nvar getScrollParent = function (node) {\n  var parent = node;\n\n  while (parent = parent.parentElement) {\n    var overflowYVal = getComputedStyle(parent, null).getPropertyValue(\"overflow-y\");\n    if (parent === document.body) return window;\n    if (overflowYVal === \"auto\" || overflowYVal === \"scroll\") return parent;\n  }\n\n  return window;\n};\n\nvar offsetTill = function (node, target) {\n  var current = node;\n  var offset = 0; // If target is not an offsetParent itself, subtract its offsetTop and set correct target\n\n  if (target.firstChild && target.firstChild.offsetParent !== target) {\n    offset += node.offsetTop - target.offsetTop;\n    target = node.offsetParent;\n    offset += -node.offsetTop;\n  }\n\n  do {\n    offset += current.offsetTop;\n    current = current.offsetParent;\n  } while (current && current !== target);\n\n  return offset;\n};\n\nvar stickyProp = null;\n\nif (typeof CSS !== \"undefined\" && CSS.supports) {\n  if (CSS.supports(\"position\", \"sticky\")) stickyProp = \"sticky\";else if (CSS.supports(\"position\", \"-webkit-sticky\")) stickyProp = \"-webkit-sticky\";\n} // Inspired by https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n\n\nvar passiveArg = false;\n\ntry {\n  var opts = Object.defineProperty({}, \"passive\", {\n    // eslint-disable-next-line getter-return\n    get: function get() {\n      passiveArg = {\n        passive: true\n      };\n    }\n  });\n  window.addEventListener(\"testPassive\", null, opts);\n  window.removeEventListener(\"testPassive\", null, opts);\n} catch (e) {}\n\nvar StickyBox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(StickyBox, _React$Component);\n\n  function StickyBox(props) {\n    var _this = _React$Component.call(this, props) || this;\n\n    _this.addListener = function (element, event, handler, passive) {\n      element.addEventListener(event, handler, passive);\n\n      _this.unsubscribes.push(function () {\n        return element.removeEventListener(event, handler);\n      });\n    };\n\n    _this.addResizeObserver = function (node, handler) {\n      var ro = new ResizeObserver(handler);\n      ro.observe(node);\n\n      _this.unsubscribes.push(function () {\n        return ro.disconnect();\n      });\n    };\n\n    _this.registerContainerRef = function (n) {\n      if (!stickyProp) return;\n      _this.node = n;\n\n      if (n) {\n        _this.scrollPane = getScrollParent(_this.node);\n        _this.latestScrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n\n        _this.addListener(_this.scrollPane, \"scroll\", _this.handleScroll, passiveArg);\n\n        _this.addListener(_this.scrollPane, \"mousewheel\", _this.handleScroll, passiveArg);\n\n        if (_this.scrollPane === window) {\n          _this.addListener(window, \"resize\", _this.handleWindowResize);\n\n          _this.handleWindowResize();\n        } else {\n          _this.addResizeObserver(_this.scrollPane, _this.handleScrollPaneResize);\n\n          _this.handleScrollPaneResize();\n        }\n\n        _this.addResizeObserver(_this.node.parentNode, _this.handleParentNodeResize);\n\n        _this.handleParentNodeResize();\n\n        _this.addResizeObserver(_this.node, _this.handleNodeResize);\n\n        _this.handleNodeResize({\n          initial: true\n        });\n\n        _this.initial();\n      } else {\n        _this.unsubscribes.forEach(function (fn) {\n          return fn();\n        });\n\n        _this.unsubscribes = [];\n        _this.scrollPane = null;\n      }\n    };\n\n    _this.getCurrentOffset = function () {\n      if (_this.mode === \"relative\") return _this.offset;\n      var _this$props = _this.props,\n          offsetTop = _this$props.offsetTop,\n          offsetBottom = _this$props.offsetBottom;\n\n      if (_this.mode === \"stickyTop\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY - _this.naturalTop + offsetTop);\n      }\n\n      if (_this.mode === \"stickyBottom\") {\n        return Math.max(0, _this.scrollPaneOffset + _this.latestScrollY + _this.viewPortHeight - (_this.naturalTop + _this.nodeHeight + offsetBottom));\n      }\n    };\n\n    _this.handleWindowResize = function () {\n      _this.viewPortHeight = window.innerHeight;\n      _this.scrollPaneOffset = 0;\n\n      _this.handleScroll();\n    };\n\n    _this.handleScrollPaneResize = function () {\n      _this.viewPortHeight = _this.scrollPane.offsetHeight;\n\n      if (process.env.NODE_ENV !== \"production\" && _this.viewPortHeight === 0) {\n        console.warn(\"react-sticky-box's scroll pane has a height of 0. This seems odd. Please check this node:\", _this.scrollPane);\n      } // Only applicable if scrollPane is an offsetParent\n\n\n      if (_this.scrollPane.firstChild.offsetParent === _this.scrollPane) {\n        _this.scrollPaneOffset = _this.scrollPane.getBoundingClientRect().top;\n      } else {\n        _this.scrollPaneOffset = 0;\n      }\n\n      _this.handleScroll();\n    };\n\n    _this.handleParentNodeResize = function () {\n      var parentNode = _this.node.parentNode;\n      var computedParentStyle = getComputedStyle(parentNode, null);\n      var parentPaddingTop = parseInt(computedParentStyle.getPropertyValue(\"padding-top\"), 10);\n      var parentPaddingBottom = parseInt(computedParentStyle.getPropertyValue(\"padding-bottom\"), 10);\n      _this.naturalTop = offsetTill(parentNode, _this.scrollPane) + parentPaddingTop + _this.scrollPaneOffset;\n      var oldParentHeight = _this.parentHeight;\n      _this.parentHeight = parentNode.getBoundingClientRect().height - (parentPaddingTop + parentPaddingBottom);\n\n      if (_this.mode === \"relative\") {\n        if (_this.props.bottom) {\n          _this.changeMode(\"relative\");\n        } else {\n          // If parent height decreased...\n          if (oldParentHeight > _this.parentHeight) {\n            _this.changeToStickyBottomIfBoxTooLow(_this.latestScrollY);\n          }\n        }\n      }\n\n      if (oldParentHeight !== _this.parentHeight && _this.mode === \"relative\") {\n        _this.latestScrollY = Number.POSITIVE_INFINITY;\n\n        _this.handleScroll();\n      }\n    };\n\n    _this.handleNodeResize = function (_temp) {\n      var _ref = _temp === void 0 ? {} : _temp,\n          initial = _ref.initial;\n\n      var prevHeight = _this.nodeHeight;\n      _this.nodeHeight = _this.node.getBoundingClientRect().height;\n\n      if (!initial && prevHeight !== _this.nodeHeight) {\n        var _this$props2 = _this.props,\n            offsetTop = _this$props2.offsetTop,\n            offsetBottom = _this$props2.offsetBottom,\n            bottom = _this$props2.bottom;\n\n        if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n          // Just make it sticky if node smaller than viewport\n          _this.mode = undefined;\n\n          _this.initial();\n        } else {\n          var diff = prevHeight - _this.nodeHeight;\n          var lowestPossible = _this.parentHeight - _this.nodeHeight;\n          var nextOffset = Math.min(lowestPossible, _this.getCurrentOffset() + (bottom ? diff : 0));\n          _this.offset = Math.max(0, nextOffset);\n          if (!bottom || _this.mode !== \"stickyBottom\") _this.changeMode(\"relative\");\n        }\n      }\n    };\n\n    _this.handleScroll = function () {\n      var _this$props3 = _this.props,\n          offsetTop = _this$props3.offsetTop,\n          offsetBottom = _this$props3.offsetBottom;\n      var scrollY = _this.scrollPane === window ? window.scrollY : _this.scrollPane.scrollTop;\n      if (scrollY === _this.latestScrollY) return;\n\n      if (_this.nodeHeight + offsetTop + offsetBottom <= _this.viewPortHeight) {\n        // Just make it sticky if node smaller than viewport\n        _this.initial();\n\n        _this.latestScrollY = scrollY;\n        return;\n      }\n\n      var scrollDelta = scrollY - _this.latestScrollY;\n      _this.offset = _this.getCurrentOffset();\n\n      if (scrollDelta > 0) {\n        // scroll down\n        if (_this.mode === \"stickyTop\") {\n          if (scrollY + _this.scrollPaneOffset + offsetTop > _this.naturalTop) {\n            if (scrollY + _this.scrollPaneOffset + _this.viewPortHeight <= _this.naturalTop + _this.nodeHeight + _this.offset + offsetBottom) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyBottom\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          _this.changeToStickyBottomIfBoxTooLow(scrollY);\n        }\n      } else {\n        // scroll up\n        if (_this.mode === \"stickyBottom\") {\n          if (_this.scrollPaneOffset + scrollY + _this.viewPortHeight < _this.naturalTop + _this.parentHeight + offsetBottom) {\n            if (_this.scrollPaneOffset + scrollY + offsetTop >= _this.naturalTop + _this.offset) {\n              _this.changeMode(\"relative\");\n            } else {\n              _this.changeMode(\"stickyTop\");\n            }\n          }\n        } else if (_this.mode === \"relative\") {\n          if (_this.scrollPaneOffset + scrollY + offsetTop < _this.naturalTop + _this.offset) {\n            _this.changeMode(\"stickyTop\");\n          }\n        }\n      }\n\n      _this.latestScrollY = scrollY;\n    };\n\n    if (props.offset && process.env.NODE_ENV !== \"production\") {\n      console.warn(\"react-sticky-box's \\\"offset\\\" prop is deprecated. Please use \\\"offsetTop\\\" instead. It'll be removed in v0.8.\");\n    }\n\n    _this.unsubscribes = [];\n    return _this;\n  }\n\n  var _proto = StickyBox.prototype;\n\n  _proto.changeMode = function changeMode(newMode) {\n    var _this$props4 = this.props,\n        onChangeMode = _this$props4.onChangeMode,\n        offsetTop = _this$props4.offsetTop,\n        offsetBottom = _this$props4.offsetBottom,\n        bottom = _this$props4.bottom;\n    if (this.mode !== newMode) onChangeMode(this.mode, newMode);\n    this.mode = newMode;\n\n    if (newMode === \"relative\") {\n      this.node.style.position = \"relative\";\n\n      if (bottom) {\n        var nextBottom = Math.max(0, this.parentHeight - this.nodeHeight - this.offset);\n        this.node.style.bottom = nextBottom + \"px\";\n      } else {\n        this.node.style.top = this.offset + \"px\";\n      }\n    } else {\n      this.node.style.position = stickyProp;\n\n      if (newMode === \"stickyBottom\") {\n        if (bottom) {\n          this.node.style.bottom = offsetBottom + \"px\";\n        } else {\n          this.node.style.top = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        }\n      } else {\n        // stickyTop\n        if (bottom) {\n          this.node.style.bottom = this.viewPortHeight - this.nodeHeight - offsetBottom + \"px\";\n        } else {\n          this.node.style.top = offsetTop + \"px\";\n        }\n      }\n    }\n\n    this.offset = this.getCurrentOffset();\n  };\n\n  _proto.initial = function initial() {\n    var bottom = this.props.bottom;\n\n    if (bottom) {\n      if (this.mode !== \"stickyBottom\") this.changeMode(\"stickyBottom\");\n    } else {\n      if (this.mode !== \"stickyTop\") this.changeMode(\"stickyTop\");\n    }\n  };\n\n  _proto.changeToStickyBottomIfBoxTooLow = function changeToStickyBottomIfBoxTooLow(scrollY) {\n    var offsetBottom = this.props.offsetBottom;\n\n    if (scrollY + this.scrollPaneOffset + this.viewPortHeight >= this.naturalTop + this.nodeHeight + this.offset + offsetBottom) {\n      this.changeMode(\"stickyBottom\");\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props5 = this.props,\n        children = _this$props5.children,\n        className = _this$props5.className,\n        style = _this$props5.style;\n    return React.createElement(\"div\", {\n      className: className,\n      style: style,\n      ref: this.registerContainerRef\n    }, children);\n  };\n\n  return StickyBox;\n}(React.Component);\n\nexport { StickyBox as default };\nStickyBox.defaultProps = {\n  onChangeMode: function onChangeMode() {},\n  offsetTop: 0,\n  offsetBottom: 0\n};\nprocess.env.NODE_ENV !== \"production\" ? StickyBox.propTypes = {\n  onChangeMode: PropTypes.func,\n  offsetTop: PropTypes.number,\n  offsetBottom: PropTypes.number,\n  bottom: PropTypes.bool\n} : void 0;"]},"metadata":{},"sourceType":"module"}