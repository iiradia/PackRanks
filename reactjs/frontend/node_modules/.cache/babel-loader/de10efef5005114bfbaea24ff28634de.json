{"ast":null,"code":"import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager from \"./ToastManager\";\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\n\nclass Toaster {\n  constructor() {\n    this.closeAll = () => {\n      if (this.removeAll) {\n        this.removeAll();\n      }\n    };\n\n    this.bindNotify = (fn, removeAll, closeToast) => {\n      this.createNotification = fn;\n      this.removeAll = removeAll;\n      this.closeToast = closeToast;\n    };\n\n    this.notify = (message, options = {}) => {\n      if (this.createNotification) {\n        return this.createNotification(message, options);\n      }\n    };\n\n    this.close = (id, position) => {\n      if (this.closeToast) {\n        this.closeToast(id, position);\n      }\n    };\n\n    if (!isBrowser) {\n      return;\n    }\n\n    let portalElement;\n    const existingPortalElement = document.getElementById(PORTAL_ID);\n\n    if (existingPortalElement) {\n      portalElement = existingPortalElement;\n    } else {\n      const el = document.createElement(\"div\");\n      el.id = PORTAL_ID;\n      el.className = \"Toaster\";\n\n      if (document.body != null) {\n        document.body.appendChild(el);\n      }\n\n      portalElement = el;\n    }\n\n    ReactDOM.render(React.createElement(ToastManager, {\n      notify: this.bindNotify\n    }), portalElement);\n  }\n\n}\n\nexport default Toaster;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/node_modules/toasted-notes/lib/Toast.js"],"names":["ReactDOM","React","ToastManager","isBrowser","window","document","PORTAL_ID","Toaster","constructor","closeAll","removeAll","bindNotify","fn","closeToast","createNotification","notify","message","options","close","id","position","portalElement","existingPortalElement","getElementById","el","createElement","className","body","appendChild","render"],"mappings":"AAAA,OAAO,KAAKA,QAAZ,MAA0B,WAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,MAAMC,SAAS,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOA,MAAM,CAACC,QAAd,KAA2B,WAA9E;AACA,MAAMC,SAAS,GAAG,aAAlB;;AACA,MAAMC,OAAN,CAAc;AACVC,EAAAA,WAAW,GAAG;AACV,SAAKC,QAAL,GAAgB,MAAM;AAClB,UAAI,KAAKC,SAAT,EAAoB;AAChB,aAAKA,SAAL;AACH;AACJ,KAJD;;AAKA,SAAKC,UAAL,GAAkB,CAACC,EAAD,EAAKF,SAAL,EAAgBG,UAAhB,KAA+B;AAC7C,WAAKC,kBAAL,GAA0BF,EAA1B;AACA,WAAKF,SAAL,GAAiBA,SAAjB;AACA,WAAKG,UAAL,GAAkBA,UAAlB;AACH,KAJD;;AAKA,SAAKE,MAAL,GAAc,CAACC,OAAD,EAAUC,OAAO,GAAG,EAApB,KAA2B;AACrC,UAAI,KAAKH,kBAAT,EAA6B;AACzB,eAAO,KAAKA,kBAAL,CAAwBE,OAAxB,EAAiCC,OAAjC,CAAP;AACH;AACJ,KAJD;;AAKA,SAAKC,KAAL,GAAa,CAACC,EAAD,EAAKC,QAAL,KAAkB;AAC3B,UAAI,KAAKP,UAAT,EAAqB;AACjB,aAAKA,UAAL,CAAgBM,EAAhB,EAAoBC,QAApB;AACH;AACJ,KAJD;;AAKA,QAAI,CAACjB,SAAL,EAAgB;AACZ;AACH;;AACD,QAAIkB,aAAJ;AACA,UAAMC,qBAAqB,GAAGjB,QAAQ,CAACkB,cAAT,CAAwBjB,SAAxB,CAA9B;;AACA,QAAIgB,qBAAJ,EAA2B;AACvBD,MAAAA,aAAa,GAAGC,qBAAhB;AACH,KAFD,MAGK;AACD,YAAME,EAAE,GAAGnB,QAAQ,CAACoB,aAAT,CAAuB,KAAvB,CAAX;AACAD,MAAAA,EAAE,CAACL,EAAH,GAAQb,SAAR;AACAkB,MAAAA,EAAE,CAACE,SAAH,GAAe,SAAf;;AACA,UAAIrB,QAAQ,CAACsB,IAAT,IAAiB,IAArB,EAA2B;AACvBtB,QAAAA,QAAQ,CAACsB,IAAT,CAAcC,WAAd,CAA0BJ,EAA1B;AACH;;AACDH,MAAAA,aAAa,GAAGG,EAAhB;AACH;;AACDxB,IAAAA,QAAQ,CAAC6B,MAAT,CAAgB5B,KAAK,CAACwB,aAAN,CAAoBvB,YAApB,EAAkC;AAAEa,MAAAA,MAAM,EAAE,KAAKJ;AAAf,KAAlC,CAAhB,EAAgFU,aAAhF;AACH;;AAxCS;;AA0Cd,eAAed,OAAf","sourcesContent":["import * as ReactDOM from \"react-dom\";\nimport * as React from \"react\";\nimport ToastManager from \"./ToastManager\";\nconst isBrowser = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\nconst PORTAL_ID = \"react-toast\";\nclass Toaster {\n    constructor() {\n        this.closeAll = () => {\n            if (this.removeAll) {\n                this.removeAll();\n            }\n        };\n        this.bindNotify = (fn, removeAll, closeToast) => {\n            this.createNotification = fn;\n            this.removeAll = removeAll;\n            this.closeToast = closeToast;\n        };\n        this.notify = (message, options = {}) => {\n            if (this.createNotification) {\n                return this.createNotification(message, options);\n            }\n        };\n        this.close = (id, position) => {\n            if (this.closeToast) {\n                this.closeToast(id, position);\n            }\n        };\n        if (!isBrowser) {\n            return;\n        }\n        let portalElement;\n        const existingPortalElement = document.getElementById(PORTAL_ID);\n        if (existingPortalElement) {\n            portalElement = existingPortalElement;\n        }\n        else {\n            const el = document.createElement(\"div\");\n            el.id = PORTAL_ID;\n            el.className = \"Toaster\";\n            if (document.body != null) {\n                document.body.appendChild(el);\n            }\n            portalElement = el;\n        }\n        ReactDOM.render(React.createElement(ToastManager, { notify: this.bindNotify }), portalElement);\n    }\n}\nexport default Toaster;\n"]},"metadata":{},"sourceType":"module"}