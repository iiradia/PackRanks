{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventListener = require('fbjs/lib/EventListener');\n\nvar EventPropagators = require('./EventPropagators');\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar SyntheticAnimationEvent = require('./SyntheticAnimationEvent');\n\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\n\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\n\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\n\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\n\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\n\nvar SyntheticTransitionEvent = require('./SyntheticTransitionEvent');\n\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\n\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar getEventCharCode = require('./getEventCharCode');\n\nvar invariant = require('fbjs/lib/invariant');\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: ['topAbort'],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = {\n *   'topAbort': { sameConfig }\n * };\n */\n\n\nvar eventTypes = {};\nvar topLevelEventsToDispatchConfig = {};\n['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  var onEvent = 'on' + capitalizedEvent;\n  var topEvent = 'top' + capitalizedEvent;\n  var type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent]\n  };\n  eventTypes[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n});\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nvar SimpleEventPlugin = {\n  eventTypes: eventTypes,\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n\n    if (!dispatchConfig) {\n      return null;\n    }\n\n    var EventConstructor;\n\n    switch (topLevelType) {\n      case 'topAbort':\n      case 'topCanPlay':\n      case 'topCanPlayThrough':\n      case 'topDurationChange':\n      case 'topEmptied':\n      case 'topEncrypted':\n      case 'topEnded':\n      case 'topError':\n      case 'topInput':\n      case 'topInvalid':\n      case 'topLoad':\n      case 'topLoadedData':\n      case 'topLoadedMetadata':\n      case 'topLoadStart':\n      case 'topPause':\n      case 'topPlay':\n      case 'topPlaying':\n      case 'topProgress':\n      case 'topRateChange':\n      case 'topReset':\n      case 'topSeeked':\n      case 'topSeeking':\n      case 'topStalled':\n      case 'topSubmit':\n      case 'topSuspend':\n      case 'topTimeUpdate':\n      case 'topVolumeChange':\n      case 'topWaiting':\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n\n      case 'topKeyPress':\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n\n      /* falls through */\n\n      case 'topKeyDown':\n      case 'topKeyUp':\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n\n      case 'topBlur':\n      case 'topFocus':\n        EventConstructor = SyntheticFocusEvent;\n        break;\n\n      case 'topClick':\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n\n      /* falls through */\n\n      case 'topDoubleClick':\n      case 'topMouseDown':\n      case 'topMouseMove':\n      case 'topMouseUp': // TODO: Disabled elements should not respond to mouse events\n\n      /* falls through */\n\n      case 'topMouseOut':\n      case 'topMouseOver':\n      case 'topContextMenu':\n        EventConstructor = SyntheticMouseEvent;\n        break;\n\n      case 'topDrag':\n      case 'topDragEnd':\n      case 'topDragEnter':\n      case 'topDragExit':\n      case 'topDragLeave':\n      case 'topDragOver':\n      case 'topDragStart':\n      case 'topDrop':\n        EventConstructor = SyntheticDragEvent;\n        break;\n\n      case 'topTouchCancel':\n      case 'topTouchEnd':\n      case 'topTouchMove':\n      case 'topTouchStart':\n        EventConstructor = SyntheticTouchEvent;\n        break;\n\n      case 'topAnimationEnd':\n      case 'topAnimationIteration':\n      case 'topAnimationStart':\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n\n      case 'topTransitionEnd':\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n\n      case 'topScroll':\n        EventConstructor = SyntheticUIEvent;\n        break;\n\n      case 'topWheel':\n        EventConstructor = SyntheticWheelEvent;\n        break;\n\n      case 'topCopy':\n      case 'topCut':\n      case 'topPaste':\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n};\nmodule.exports = SimpleEventPlugin;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/node_modules/react-simplert/node_modules/react-dom/lib/SimpleEventPlugin.js"],"names":["_prodInvariant","require","EventListener","EventPropagators","ReactDOMComponentTree","SyntheticAnimationEvent","SyntheticClipboardEvent","SyntheticEvent","SyntheticFocusEvent","SyntheticKeyboardEvent","SyntheticMouseEvent","SyntheticDragEvent","SyntheticTouchEvent","SyntheticTransitionEvent","SyntheticUIEvent","SyntheticWheelEvent","emptyFunction","getEventCharCode","invariant","eventTypes","topLevelEventsToDispatchConfig","forEach","event","capitalizedEvent","toUpperCase","slice","onEvent","topEvent","type","phasedRegistrationNames","bubbled","captured","dependencies","onClickListeners","getDictionaryKey","inst","_rootNodeID","isInteractive","tag","SimpleEventPlugin","extractEvents","topLevelType","targetInst","nativeEvent","nativeEventTarget","dispatchConfig","EventConstructor","button","process","env","NODE_ENV","getPooled","accumulateTwoPhaseDispatches","didPutListener","registrationName","listener","_tag","key","node","getNodeFromInstance","listen","willDeleteListener","remove","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar EventListener = require('fbjs/lib/EventListener');\nvar EventPropagators = require('./EventPropagators');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar SyntheticAnimationEvent = require('./SyntheticAnimationEvent');\nvar SyntheticClipboardEvent = require('./SyntheticClipboardEvent');\nvar SyntheticEvent = require('./SyntheticEvent');\nvar SyntheticFocusEvent = require('./SyntheticFocusEvent');\nvar SyntheticKeyboardEvent = require('./SyntheticKeyboardEvent');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\nvar SyntheticDragEvent = require('./SyntheticDragEvent');\nvar SyntheticTouchEvent = require('./SyntheticTouchEvent');\nvar SyntheticTransitionEvent = require('./SyntheticTransitionEvent');\nvar SyntheticUIEvent = require('./SyntheticUIEvent');\nvar SyntheticWheelEvent = require('./SyntheticWheelEvent');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar getEventCharCode = require('./getEventCharCode');\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Turns\n * ['abort', ...]\n * into\n * eventTypes = {\n *   'abort': {\n *     phasedRegistrationNames: {\n *       bubbled: 'onAbort',\n *       captured: 'onAbortCapture',\n *     },\n *     dependencies: ['topAbort'],\n *   },\n *   ...\n * };\n * topLevelEventsToDispatchConfig = {\n *   'topAbort': { sameConfig }\n * };\n */\nvar eventTypes = {};\nvar topLevelEventsToDispatchConfig = {};\n['abort', 'animationEnd', 'animationIteration', 'animationStart', 'blur', 'canPlay', 'canPlayThrough', 'click', 'contextMenu', 'copy', 'cut', 'doubleClick', 'drag', 'dragEnd', 'dragEnter', 'dragExit', 'dragLeave', 'dragOver', 'dragStart', 'drop', 'durationChange', 'emptied', 'encrypted', 'ended', 'error', 'focus', 'input', 'invalid', 'keyDown', 'keyPress', 'keyUp', 'load', 'loadedData', 'loadedMetadata', 'loadStart', 'mouseDown', 'mouseMove', 'mouseOut', 'mouseOver', 'mouseUp', 'paste', 'pause', 'play', 'playing', 'progress', 'rateChange', 'reset', 'scroll', 'seeked', 'seeking', 'stalled', 'submit', 'suspend', 'timeUpdate', 'touchCancel', 'touchEnd', 'touchMove', 'touchStart', 'transitionEnd', 'volumeChange', 'waiting', 'wheel'].forEach(function (event) {\n  var capitalizedEvent = event[0].toUpperCase() + event.slice(1);\n  var onEvent = 'on' + capitalizedEvent;\n  var topEvent = 'top' + capitalizedEvent;\n\n  var type = {\n    phasedRegistrationNames: {\n      bubbled: onEvent,\n      captured: onEvent + 'Capture'\n    },\n    dependencies: [topEvent]\n  };\n  eventTypes[event] = type;\n  topLevelEventsToDispatchConfig[topEvent] = type;\n});\n\nvar onClickListeners = {};\n\nfunction getDictionaryKey(inst) {\n  // Prevents V8 performance issue:\n  // https://github.com/facebook/react/pull/7232\n  return '.' + inst._rootNodeID;\n}\n\nfunction isInteractive(tag) {\n  return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';\n}\n\nvar SimpleEventPlugin = {\n  eventTypes: eventTypes,\n\n  extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n    var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];\n    if (!dispatchConfig) {\n      return null;\n    }\n    var EventConstructor;\n    switch (topLevelType) {\n      case 'topAbort':\n      case 'topCanPlay':\n      case 'topCanPlayThrough':\n      case 'topDurationChange':\n      case 'topEmptied':\n      case 'topEncrypted':\n      case 'topEnded':\n      case 'topError':\n      case 'topInput':\n      case 'topInvalid':\n      case 'topLoad':\n      case 'topLoadedData':\n      case 'topLoadedMetadata':\n      case 'topLoadStart':\n      case 'topPause':\n      case 'topPlay':\n      case 'topPlaying':\n      case 'topProgress':\n      case 'topRateChange':\n      case 'topReset':\n      case 'topSeeked':\n      case 'topSeeking':\n      case 'topStalled':\n      case 'topSubmit':\n      case 'topSuspend':\n      case 'topTimeUpdate':\n      case 'topVolumeChange':\n      case 'topWaiting':\n        // HTML Events\n        // @see http://www.w3.org/TR/html5/index.html#events-0\n        EventConstructor = SyntheticEvent;\n        break;\n      case 'topKeyPress':\n        // Firefox creates a keypress event for function keys too. This removes\n        // the unwanted keypress events. Enter is however both printable and\n        // non-printable. One would expect Tab to be as well (but it isn't).\n        if (getEventCharCode(nativeEvent) === 0) {\n          return null;\n        }\n      /* falls through */\n      case 'topKeyDown':\n      case 'topKeyUp':\n        EventConstructor = SyntheticKeyboardEvent;\n        break;\n      case 'topBlur':\n      case 'topFocus':\n        EventConstructor = SyntheticFocusEvent;\n        break;\n      case 'topClick':\n        // Firefox creates a click event on right mouse clicks. This removes the\n        // unwanted click events.\n        if (nativeEvent.button === 2) {\n          return null;\n        }\n      /* falls through */\n      case 'topDoubleClick':\n      case 'topMouseDown':\n      case 'topMouseMove':\n      case 'topMouseUp':\n      // TODO: Disabled elements should not respond to mouse events\n      /* falls through */\n      case 'topMouseOut':\n      case 'topMouseOver':\n      case 'topContextMenu':\n        EventConstructor = SyntheticMouseEvent;\n        break;\n      case 'topDrag':\n      case 'topDragEnd':\n      case 'topDragEnter':\n      case 'topDragExit':\n      case 'topDragLeave':\n      case 'topDragOver':\n      case 'topDragStart':\n      case 'topDrop':\n        EventConstructor = SyntheticDragEvent;\n        break;\n      case 'topTouchCancel':\n      case 'topTouchEnd':\n      case 'topTouchMove':\n      case 'topTouchStart':\n        EventConstructor = SyntheticTouchEvent;\n        break;\n      case 'topAnimationEnd':\n      case 'topAnimationIteration':\n      case 'topAnimationStart':\n        EventConstructor = SyntheticAnimationEvent;\n        break;\n      case 'topTransitionEnd':\n        EventConstructor = SyntheticTransitionEvent;\n        break;\n      case 'topScroll':\n        EventConstructor = SyntheticUIEvent;\n        break;\n      case 'topWheel':\n        EventConstructor = SyntheticWheelEvent;\n        break;\n      case 'topCopy':\n      case 'topCut':\n      case 'topPaste':\n        EventConstructor = SyntheticClipboardEvent;\n        break;\n    }\n    !EventConstructor ? process.env.NODE_ENV !== 'production' ? invariant(false, 'SimpleEventPlugin: Unhandled event type, `%s`.', topLevelType) : _prodInvariant('86', topLevelType) : void 0;\n    var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);\n    EventPropagators.accumulateTwoPhaseDispatches(event);\n    return event;\n  },\n\n  didPutListener: function (inst, registrationName, listener) {\n    // Mobile Safari does not fire properly bubble click events on\n    // non-interactive elements, which means delegated click listeners do not\n    // fire. The workaround for this bug involves attaching an empty click\n    // listener on the target node.\n    // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      var node = ReactDOMComponentTree.getNodeFromInstance(inst);\n      if (!onClickListeners[key]) {\n        onClickListeners[key] = EventListener.listen(node, 'click', emptyFunction);\n      }\n    }\n  },\n\n  willDeleteListener: function (inst, registrationName) {\n    if (registrationName === 'onClick' && !isInteractive(inst._tag)) {\n      var key = getDictionaryKey(inst);\n      onClickListeners[key].remove();\n      delete onClickListeners[key];\n    }\n  }\n};\n\nmodule.exports = SimpleEventPlugin;"]},"metadata":{},"sourceType":"script"}