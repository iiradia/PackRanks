{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueNull = false;\n\nfunction handleElement(debugID, element) {\n  if (element == null) {\n    return;\n  }\n\n  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {\n    return;\n  }\n\n  if (element.props != null && element.props.value === null && !didWarnValueNull) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n    didWarnValueNull = true;\n  }\n}\n\nvar ReactDOMNullInputValuePropHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  }\n};\nmodule.exports = ReactDOMNullInputValuePropHook;","map":{"version":3,"sources":["/Users/mathew/EasyA/reactjs/frontend/node_modules/react-simplert/node_modules/react-dom/lib/ReactDOMNullInputValuePropHook.js"],"names":["ReactComponentTreeHook","require","warning","didWarnValueNull","handleElement","debugID","element","type","props","value","process","env","NODE_ENV","getStackAddendumByID","ReactDOMNullInputValuePropHook","onBeforeMountComponent","onBeforeUpdateComponent","module","exports"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,kCAAD,CAApC;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,kBAAD,CAArB;;AAEA,IAAIE,gBAAgB,GAAG,KAAvB;;AAEA,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,OAAhC,EAAyC;AACvC,MAAIA,OAAO,IAAI,IAAf,EAAqB;AACnB;AACD;;AACD,MAAIA,OAAO,CAACC,IAAR,KAAiB,OAAjB,IAA4BD,OAAO,CAACC,IAAR,KAAiB,UAA7C,IAA2DD,OAAO,CAACC,IAAR,KAAiB,QAAhF,EAA0F;AACxF;AACD;;AACD,MAAID,OAAO,CAACE,KAAR,IAAiB,IAAjB,IAAyBF,OAAO,CAACE,KAAR,CAAcC,KAAd,KAAwB,IAAjD,IAAyD,CAACN,gBAA9D,EAAgF;AAC9EO,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCV,OAAO,CAAC,KAAD,EAAQ,8CAA8C,wEAA9C,GAAyH,gCAAjI,EAAmKI,OAAO,CAACC,IAA3K,EAAiLP,sBAAsB,CAACa,oBAAvB,CAA4CR,OAA5C,CAAjL,CAA/C,GAAwR,KAAK,CAA7R;AAEAF,IAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF;;AAED,IAAIW,8BAA8B,GAAG;AACnCC,EAAAA,sBAAsB,EAAE,UAAUV,OAAV,EAAmBC,OAAnB,EAA4B;AAClDF,IAAAA,aAAa,CAACC,OAAD,EAAUC,OAAV,CAAb;AACD,GAHkC;AAInCU,EAAAA,uBAAuB,EAAE,UAAUX,OAAV,EAAmBC,OAAnB,EAA4B;AACnDF,IAAAA,aAAa,CAACC,OAAD,EAAUC,OAAV,CAAb;AACD;AANkC,CAArC;AASAW,MAAM,CAACC,OAAP,GAAiBJ,8BAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar ReactComponentTreeHook = require('react/lib/ReactComponentTreeHook');\n\nvar warning = require('fbjs/lib/warning');\n\nvar didWarnValueNull = false;\n\nfunction handleElement(debugID, element) {\n  if (element == null) {\n    return;\n  }\n  if (element.type !== 'input' && element.type !== 'textarea' && element.type !== 'select') {\n    return;\n  }\n  if (element.props != null && element.props.value === null && !didWarnValueNull) {\n    process.env.NODE_ENV !== 'production' ? warning(false, '`value` prop on `%s` should not be null. ' + 'Consider using the empty string to clear the component or `undefined` ' + 'for uncontrolled components.%s', element.type, ReactComponentTreeHook.getStackAddendumByID(debugID)) : void 0;\n\n    didWarnValueNull = true;\n  }\n}\n\nvar ReactDOMNullInputValuePropHook = {\n  onBeforeMountComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  },\n  onBeforeUpdateComponent: function (debugID, element) {\n    handleElement(debugID, element);\n  }\n};\n\nmodule.exports = ReactDOMNullInputValuePropHook;"]},"metadata":{},"sourceType":"script"}