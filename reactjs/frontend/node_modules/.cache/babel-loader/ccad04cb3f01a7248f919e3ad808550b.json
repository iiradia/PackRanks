{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/frontend/src/components/Home/Table.jsx\";\nimport React from 'react';\nimport Table from 'react-bootstrap/Table';\nimport \"./css/table.css\";\nimport ReactTooltip from 'react-tooltip';\nimport ReactDOM from 'react-dom'; //when wishlist button is pressed\n\nconst onWishlist = props => {\n  console.log(props);\n  let url = \"http://localhost:5000/addWishlist\";\n  fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify({\n      course_data: props,\n      token: localStorage.token\n    })\n  }).then(response => response.json()).then(data => data.success ? alert(\"Successfully added course to wishlist\") : alert(\"Failed to add course to your wishlist, please try again.\"));\n}; // Put data into each row \n\n\nconst RenderRow = props => {\n  console.log(props);\n  return props.keys.map((key, index) => {\n    /* Check if key is professor */\n    if (key === \"Professor\" || key === \"Location\" || key === \"Course\") {\n      /* If there is no link, just return professor name. */\n      if (props.data[key][1] === 'None') {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: props.data[key][0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 53\n          }\n        }, props.data[key][0]));\n      } else {\n        /* Else, return hyperlink that opens in new tab. */\n        return /*#__PURE__*/React.createElement(\"td\", {\n          key: props.data[key][0],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 24\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: \"tablelinks\",\n          className: \"tablelinks\",\n          href: props.data[key][1],\n          target: \"_blank\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }\n        }, props.data[key][0])));\n      }\n    } //if section and user is authenticated, show option for adding to wishlist\n    else if (key === \"Section\" && localStorage.token !== undefined && props.type !== \"homepage\") {\n        return /*#__PURE__*/React.createElement(\"td\", {\n          id: \"sectionLink\",\n          key: props.data[key],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 20\n          }\n        }, /*#__PURE__*/React.createElement(\"a\", {\n          id: \"tablelinks\",\n          onClick: () => onWishlist(props.data),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          id: \"tablelinks\",\n          \"data-tip\": \"Add to Wishlist\",\n          \"data-for\": \"ctool\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 33\n          }\n        }, props.data[key])), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"cdiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(ReactTooltip, {\n          id: \"ctool\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }\n        }))));\n      }\n      /* If normal element, return normal table */\n      else {\n          return /*#__PURE__*/React.createElement(\"td\", {\n            key: props.data[key],\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 20\n            }\n          }, /*#__PURE__*/React.createElement(\"strong\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 46\n            }\n          }, props.data[key]));\n        }\n  });\n};\n\nclass table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getKeys = function () {\n      return Object.keys(this.props.data[0]);\n    };\n\n    this.getHeader = function () {\n      var keys = this.getKeys();\n      keys = keys.concat(\"Hi\");\n      return keys.map((key, index) => {\n        return /*#__PURE__*/React.createElement(\"th\", {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 20\n          }\n        }, key.toUpperCase());\n      });\n    };\n\n    this.getRowsData = function () {\n      var items = this.props.data;\n      var keys = this.getKeys();\n      return items.map((row, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(RenderRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          type: this.props.type,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 34\n          }\n        }));\n      });\n    };\n\n    this.getHeader = this.getHeader.bind(this);\n    this.getRowsData = this.getRowsData.bind(this);\n    this.getKeys = this.getKeys.bind(this);\n  } // Gets the keys of the whole table \n\n\n  // If it is the homepage, give an option to delete items from wishlist.\n  componentDidMount() {\n    if (this.props.type === \"homepage\") {\n      ReactDOM.render( /*#__PURE__*/React.createElement(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, \"Hi\"), document.getElementById(\"deleteHeader\"));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      varaint: \"dark\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"deleteHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, this.getHeader())), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, this.getRowsData())));\n  }\n\n}\n\nexport default table;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/frontend/src/components/Home/Table.jsx"],"names":["React","Table","ReactTooltip","ReactDOM","onWishlist","props","console","log","url","fetch","method","body","JSON","stringify","course_data","token","localStorage","then","response","json","data","success","alert","RenderRow","keys","map","key","index","undefined","type","table","Component","constructor","getKeys","Object","getHeader","concat","toUpperCase","getRowsData","items","row","bind","componentDidMount","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Table from 'react-bootstrap/Table'\nimport \"./css/table.css\"\nimport ReactTooltip from 'react-tooltip';\nimport ReactDOM from 'react-dom';\n\n//when wishlist button is pressed\nconst onWishlist= (props) => {\n    console.log(props);\n    let url = \"http://localhost:5000/addWishlist\"\n    fetch( \n        url, {\n            method: \"POST\",\n            body: JSON.stringify(\n                {course_data:props,\n                token: localStorage.token\n                }\n            )\n        }\n    ).then(\n       response => response.json()\n    ).then(\n        data => data.success ? alert(\"Successfully added course to wishlist\")\n        : alert(\"Failed to add course to your wishlist, please try again.\")\n    )\n}\n\n// Put data into each row \nconst RenderRow = (props) =>{\n    console.log(props);\n    return props.keys.map((key, index)=>{\n\n        /* Check if key is professor */\n        if (key === \"Professor\" || key === \"Location\" || key===\"Course\") {\n\n            /* If there is no link, just return professor name. */\n            if (props.data[key][1] === 'None') {\n                return <td key={props.data[key][0]}><strong>{props.data[key][0]}</strong></td>\n            }\n            else { \n                /* Else, return hyperlink that opens in new tab. */   \n                return <td key={props.data[key][0]}>\n                            <a id=\"tablelinks\" className=\"tablelinks\" href={props.data[key][1]} target=\"_blank\">\n                                <strong>{props.data[key][0]}</strong>\n                            </a>\n                        </td>\n            }\n        }\n        //if section and user is authenticated, show option for adding to wishlist\n        \n        else if (key===\"Section\" && localStorage.token !== undefined && props.type !== \"homepage\") {\n            return <td id=\"sectionLink\" key={props.data[key]}>\n                <a id=\"tablelinks\" onClick={()=>onWishlist(props.data)}>\n                        <strong><p  id=\"tablelinks\"\n                                    data-tip=\"Add to Wishlist\"\n                                    data-for=\"ctool\">\n                            {props.data[key]}</p>\n                        </strong>\n                        <div id =\"cdiv\">\n                            <ReactTooltip  id=\"ctool\"/>\n                        </div>   \n                </a>\n                    </td>\n        }\n        /* If normal element, return normal table */\n        else{\n            return <td key={props.data[key]}><strong>{props.data[key]}</strong></td>\n        }\n    })\n   }\n\nclass table extends React.Component {\n \n    \n    constructor(props){\n        super(props);\n        this.getHeader = this.getHeader.bind(this);\n        this.getRowsData = this.getRowsData.bind(this);\n        this.getKeys = this.getKeys.bind(this);\n    }\n    \n    // Gets the keys of the whole table \n    getKeys = function(){\n        return Object.keys(this.props.data[0]);\n    }\n    \n    // Gets the headers of table from the keys \n    getHeader = function(){\n        var keys = this.getKeys();\n        keys = keys.concat(\"Hi\");\n        return keys.map((key, index)=>{\n            return <th key={key}>{key.toUpperCase()}</th>\n        })\n    }\n    \n\n    getRowsData = function(){\n        var items = this.props.data;\n        var keys = this.getKeys();\n        return items.map((row, index)=>{\n          \n            \n          return <tr key={index}><RenderRow key={index} data={row} keys={keys} type={this.props.type}/></tr>\n        \n        })\n      }\n    \n    // If it is the homepage, give an option to delete items from wishlist.\n    componentDidMount() {\n        \n        if (this.props.type === \"homepage\") {\n            ReactDOM.render(\n                <th>Hi</th>,\n                document.getElementById(\"deleteHeader\")\n            );\n        }\n    }\n\n    render() {\n\n        return (\n        <div>\n            <Table striped bordered hover varaint = \"dark\">\n            <thead>\n                <div id=\"deleteHeader\"></div>\n                <tr>{this.getHeader()}</tr>\n            </thead>\n            <tbody>\n                {this.getRowsData()}\n            </tbody>\n        </Table>\n        </div>\n    \n     );\n    }\n   }\n\n\nexport default table; "]},"metadata":{},"sourceType":"module"}