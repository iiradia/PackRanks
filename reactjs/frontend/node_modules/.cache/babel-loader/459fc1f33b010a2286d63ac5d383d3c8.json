{"ast":null,"code":"/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\n\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\n\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\n\nvar invariant = require('fbjs/lib/invariant');\n\nvar warning = require('fbjs/lib/warning');\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\n\n\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n\n  if (componentOrElement == null) {\n    return null;\n  }\n\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;","map":{"version":3,"sources":["/Users/mathew/EasyA/reactjs/frontend/node_modules/react-simplert/node_modules/react-dom/lib/findDOMNode.js"],"names":["_prodInvariant","require","ReactCurrentOwner","ReactDOMComponentTree","ReactInstanceMap","getHostComponentFromComposite","invariant","warning","findDOMNode","componentOrElement","process","env","NODE_ENV","owner","current","_warnedAboutRefsInRender","getName","nodeType","inst","get","getNodeFromInstance","render","Object","keys","module","exports"],"mappings":"AAAA;;;;;;;AAQA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,sBAAD,CAA5B;;AAEA,IAAIC,iBAAiB,GAAGD,OAAO,CAAC,6BAAD,CAA/B;;AACA,IAAIE,qBAAqB,GAAGF,OAAO,CAAC,yBAAD,CAAnC;;AACA,IAAIG,gBAAgB,GAAGH,OAAO,CAAC,oBAAD,CAA9B;;AAEA,IAAII,6BAA6B,GAAGJ,OAAO,CAAC,iCAAD,CAA3C;;AACA,IAAIK,SAAS,GAAGL,OAAO,CAAC,oBAAD,CAAvB;;AACA,IAAIM,OAAO,GAAGN,OAAO,CAAC,kBAAD,CAArB;AAEA;;;;;;;;;;AAQA,SAASO,WAAT,CAAqBC,kBAArB,EAAyC;AACvC,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,QAAIC,KAAK,GAAGX,iBAAiB,CAACY,OAA9B;;AACA,QAAID,KAAK,KAAK,IAAd,EAAoB;AAClBH,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCL,OAAO,CAACM,KAAK,CAACE,wBAAP,EAAiC,sDAAsD,mEAAtD,GAA4H,oEAA5H,GAAmM,iEAAnM,GAAuQ,6BAAxS,EAAuUF,KAAK,CAACG,OAAN,MAAmB,aAA1V,CAA/C,GAA0Z,KAAK,CAA/Z;AACAH,MAAAA,KAAK,CAACE,wBAAN,GAAiC,IAAjC;AACD;AACF;;AACD,MAAIN,kBAAkB,IAAI,IAA1B,EAAgC;AAC9B,WAAO,IAAP;AACD;;AACD,MAAIA,kBAAkB,CAACQ,QAAnB,KAAgC,CAApC,EAAuC;AACrC,WAAOR,kBAAP;AACD;;AAED,MAAIS,IAAI,GAAGd,gBAAgB,CAACe,GAAjB,CAAqBV,kBAArB,CAAX;;AACA,MAAIS,IAAJ,EAAU;AACRA,IAAAA,IAAI,GAAGb,6BAA6B,CAACa,IAAD,CAApC;AACA,WAAOA,IAAI,GAAGf,qBAAqB,CAACiB,mBAAtB,CAA0CF,IAA1C,CAAH,GAAqD,IAAhE;AACD;;AAED,MAAI,OAAOT,kBAAkB,CAACY,MAA1B,KAAqC,UAAzC,EAAqD;AACnD,KAAC,KAAD,GAASX,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,SAAS,CAAC,KAAD,EAAQ,mDAAR,CAAjD,GAAgHN,cAAc,CAAC,IAAD,CAAvI,GAAgJ,KAAK,CAArJ;AACD,GAFD,MAEO;AACL,KAAC,KAAD,GAASU,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,SAAS,CAAC,KAAD,EAAQ,qEAAR,EAA+EgB,MAAM,CAACC,IAAP,CAAYd,kBAAZ,CAA/E,CAAjD,GAAmKT,cAAc,CAAC,IAAD,EAAOsB,MAAM,CAACC,IAAP,CAAYd,kBAAZ,CAAP,CAA1L,GAAoO,KAAK,CAAzO;AACD;AACF;;AAEDe,MAAM,CAACC,OAAP,GAAiBjB,WAAjB","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n'use strict';\n\nvar _prodInvariant = require('./reactProdInvariant');\n\nvar ReactCurrentOwner = require('react/lib/ReactCurrentOwner');\nvar ReactDOMComponentTree = require('./ReactDOMComponentTree');\nvar ReactInstanceMap = require('./ReactInstanceMap');\n\nvar getHostComponentFromComposite = require('./getHostComponentFromComposite');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * Returns the DOM node rendered by this element.\n *\n * See https://facebook.github.io/react/docs/top-level-api.html#reactdom.finddomnode\n *\n * @param {ReactComponent|DOMElement} componentOrElement\n * @return {?DOMElement} The root node of this element.\n */\nfunction findDOMNode(componentOrElement) {\n  if (process.env.NODE_ENV !== 'production') {\n    var owner = ReactCurrentOwner.current;\n    if (owner !== null) {\n      process.env.NODE_ENV !== 'production' ? warning(owner._warnedAboutRefsInRender, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', owner.getName() || 'A component') : void 0;\n      owner._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrElement == null) {\n    return null;\n  }\n  if (componentOrElement.nodeType === 1) {\n    return componentOrElement;\n  }\n\n  var inst = ReactInstanceMap.get(componentOrElement);\n  if (inst) {\n    inst = getHostComponentFromComposite(inst);\n    return inst ? ReactDOMComponentTree.getNodeFromInstance(inst) : null;\n  }\n\n  if (typeof componentOrElement.render === 'function') {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findDOMNode was called on an unmounted component.') : _prodInvariant('44') : void 0;\n  } else {\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Element appears to be neither ReactComponent nor DOMNode (keys: %s)', Object.keys(componentOrElement)) : _prodInvariant('45', Object.keys(componentOrElement)) : void 0;\n  }\n}\n\nmodule.exports = findDOMNode;"]},"metadata":{},"sourceType":"script"}