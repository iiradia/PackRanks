{"ast":null,"code":"var _jsxFileName = \"/home/iiradia/EasyA/reactjs/src/components/Dept.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport ReactDOM from 'react-dom';\nimport Table from \"./Table\"; // need to do:\n// obtain value of selected dept\n// send value of dept to CourseLevel\n// get list of depts from backend\n\nclass Dept extends React.Component {\n  constructor() {\n    super();\n    this.getDepts = this.getDepts.bind(this);\n    this.DeptList = this.DeptList.bind(this);\n    this.courseTable = this.courseTable.bind(this);\n    this.setState({\n      dept_list: null,\n      courses: null,\n      select_value: null,\n      level_value: null\n    });\n    /* Call depts function */\n\n    this.getDepts();\n  }\n\n  courseTable() {\n    const Dept = this;\n    let dept_url = \"http://localhost:5000/dept\"; //let select_value = document.getElementById(\"dept_list_select\").value;\n    //let level_value = document.getElementById(\"levelprompt\").value;\n\n    fetch(dept_url, {\n      method: \"GET\",\n      headers: {\n        \"Dept\": this.state.select_value,\n        \"term\": this.props.whichterm,\n        \"level\": this.state.level_value\n      }\n    }).then(response => response.json()).then(data => {\n      data ? this.setState({\n        courses: data\n      }, () => ReactDOM.render( /*#__PURE__*/React.createElement(Table, {\n        data: this.state.courses,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 35\n        }\n      }), document.getElementById('id_dept_table'))) : ReactDOM.render( /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }\n      }, \"There is no course offered with these parameters.\"), document.getElementById('id_dept_table'));\n    });\n  }\n  /* Get List of departments and render select component */\n\n\n  getDepts() {\n    const Dept = this;\n    let url = \"http://localhost:5000/getdepts\";\n    return fetch(url, {\n      method: \"GET\"\n    }).then(response => response.json() // keep here (maybe)\n    ).then(data => {\n      this.setState({\n        dept_list: data\n      }, () => ReactDOM.render(this.DeptList(), document.getElementById('deptlist')));\n    });\n  }\n  /* Return select component with list of departments */\n\n\n  DeptList() {\n    const departments = this.state.dept_list; //console.log(departments);\n\n    const deptOptions = departments.dept.map(dept => ({\n      label: dept\n    }));\n    const deptValues = departments.dept_code.map(value_i => ({\n      value: value_i\n    }));\n    const deptFinal = [];\n\n    for (var i = 0; i < deptOptions.length; i++) {\n      deptFinal[i] = {\n        label: deptOptions[i].label,\n        value: deptValues[i].value\n      };\n    } //console.log(deptFinal);\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      id: \"dept_list_select\",\n      options: deptFinal,\n      onChange: dept => this.setState({\n        select_value: dept.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }), \" \"));\n  }\n\n  render() {\n    /* Save list of levels and options for dropdown */\n    const levelList = [\"ANY\", \"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\", \"800\"];\n    const levelOptions = levelList.map(level => ({\n      label: level,\n      value: level\n    }));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      class: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      class: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Select a Department\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"typeofdept\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, \"Please select the department of the course/elective you are looking for.\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"deptlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"levelprompt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Please select the level of the course/elective you are looking for.\"), /*#__PURE__*/React.createElement(Select, {\n      id: \"levelprompt\",\n      options: levelOptions,\n      onChange: dept => this.setState({\n        level_value: dept.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      class: \"btn btn-danger\",\n      id: \"whichdept\",\n      name: \"whichdept\",\n      onClick: this.courseTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, \"Select\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"id_dept_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n{\n  /* <DeptList selectedDept={document.getElementById('deptList')} /> */\n}\nexport default Dept;","map":{"version":3,"sources":["/home/iiradia/EasyA/reactjs/src/components/Dept.jsx"],"names":["React","Select","ReactDOM","Table","Dept","Component","constructor","getDepts","bind","DeptList","courseTable","setState","dept_list","courses","select_value","level_value","dept_url","fetch","method","headers","state","props","whichterm","then","response","json","data","render","document","getElementById","url","departments","deptOptions","dept","map","label","deptValues","dept_code","value_i","value","deptFinal","i","length","levelList","levelOptions","level"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport Select from 'react-select';\r\nimport ReactDOM from 'react-dom';\r\nimport Table from \"./Table\";\r\n\r\n// need to do:\r\n    // obtain value of selected dept\r\n    // send value of dept to CourseLevel\r\n    // get list of depts from backend\r\nclass Dept extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getDepts = this.getDepts.bind(this)\r\n        this.DeptList = this.DeptList.bind(this)\r\n        this.courseTable = this.courseTable.bind(this)\r\n\r\n        this.setState({\r\n            dept_list: null,\r\n            courses: null,\r\n            select_value: null,\r\n            level_value: null\r\n        })\r\n        /* Call depts function */\r\n        this.getDepts();\r\n    }\r\n\r\n    courseTable() {\r\n        const Dept = this;\r\n        let dept_url = \"http://localhost:5000/dept\";\r\n        //let select_value = document.getElementById(\"dept_list_select\").value;\r\n        //let level_value = document.getElementById(\"levelprompt\").value;\r\n        fetch( \r\n            dept_url, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Dept\": this.state.select_value,\r\n                    \"term\": this.props.whichterm,\r\n                    \"level\": this.state.level_value\r\n                }\r\n           }\r\n        ).then(\r\n           response => response.json()\r\n        ).then(\r\n            data => {data ? this.setState({\r\n                courses: data\r\n            },\r\n            () => ReactDOM.render(<Table data={this.state.courses} />, document.getElementById('id_dept_table'))\r\n            ) : ReactDOM.render(<p>There is no course offered with these parameters.</p>, document.getElementById('id_dept_table'))\r\n        }\r\n        )\r\n    }\r\n\r\n    /* Get List of departments and render select component */\r\n    getDepts() {\r\n        const Dept = this;\r\n        let url = \"http://localhost:5000/getdepts\";\r\n        return fetch( \r\n            url, {\r\n                method: \"GET\"\r\n           }\r\n        ).then(\r\n            response => response.json() // keep here (maybe)\r\n        ).then(\r\n            (data) => {this.setState({dept_list: data},\r\n                () => ReactDOM.render(this.DeptList(), document.getElementById('deptlist'))\r\n            )}\r\n        )\r\n    }\r\n    \r\n    /* Return select component with list of departments */\r\n    DeptList(){\r\n        const departments = this.state.dept_list;\r\n        //console.log(departments);\r\n        const deptOptions = departments.dept.map((dept) => (\r\n            {label: dept}\r\n        ));\r\n        const deptValues = departments.dept_code.map((value_i) => (\r\n            {value: value_i}\r\n        ));\r\n        const deptFinal = [];\r\n        for (var i = 0; i < deptOptions.length; i++) {\r\n            deptFinal[i] = {label: deptOptions[i].label,\r\n                            value: deptValues[i].value}\r\n        }\r\n        //console.log(deptFinal);\r\n        return (\r\n        <div className=\"app\">\r\n            <div className=\"container\">\r\n                <Select id='dept_list_select' options={deptFinal} onChange={dept => this.setState({select_value:dept.value})} /> {/* add attribute onChange={department => ___} */}\r\n            </div>\r\n        </div>\r\n        )\r\n    };\r\n\r\n    render() {\r\n    \r\n        /* Save list of levels and options for dropdown */\r\n        const levelList = [\"ANY\", \"100\", \"200\", \"300\", \"400\", \"500\", \"600\", \"700\",\"800\"];\r\n        const levelOptions = levelList.map((level) => (\r\n            {label: level, value: level}\r\n        ));\r\n    \r\n        return(\r\n            <div class=\"text-center\">\r\n                <h2 class=\"mt-5\">Select a Department</h2>\r\n                {/* Gives options for specific department the user is looking for */}\r\n                <label for=\"typeofdept\">Please select the department of the course/elective you are looking for.</label>\r\n                {/* <select id=\"typeofdept\" name = \"typeofdept\" class=\"bg-light\"> */}\r\n                    {/* <!-- TOBEIMPLEMENTED--> */}\r\n\r\n                    <div id=\"deptlist\">\r\n\r\n                    </div>\r\n                \r\n                {/* prompt for levels */ }\r\n                <label for=\"levelprompt\">Please select the level of the course/elective you are looking for.</label>\r\n                <Select id=\"levelprompt\" options={levelOptions} onChange={dept => this.setState({level_value:dept.value})} /> {/* add attribute onChange={department => ___} */}\r\n                   \r\n                {/* </select> */}\r\n                <button type=\"button\" class=\"btn btn-danger\" id=\"whichdept\" name=\"whichdept\" onClick={this.courseTable}>Select</button>\r\n\r\n                { /* Div for course table */ }\r\n                <div id=\"id_dept_table\">\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n{/* <DeptList selectedDept={document.getElementById('deptList')} /> */}\r\nexport default Dept;"]},"metadata":{},"sourceType":"module"}