{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar React = require(\"react\");\n\nvar gridHeader_1 = require(\"./gridHeader\");\n\nvar gridBody_1 = require(\"./gridBody\");\n\nvar gridFooter_1 = require(\"./gridFooter\");\n\nvar polyfills_1 = require(\"./polyfills\");\n\npolyfills_1.polyfills();\n\nvar JsonTable =\n/** @class */\nfunction (_super) {\n  __extends(JsonTable, _super);\n\n  function JsonTable() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.defaultSettings = {\n      header: true,\n      noRowsMessage: 'No items',\n      classPrefix: 'json'\n    };\n    _this.headerGrouping = false;\n    return _this;\n  }\n\n  JsonTable.prototype.render = function () {\n    this.createSettings();\n    this.columns = this.createColumns();\n    this.className = this.props.className || this.settings.classPrefix + \"Table\";\n    var header = this.settings.header ? React.createElement(gridHeader_1.GridHeader, {\n      theadClassName: this.props.theadClassName,\n      key: 'jt-header',\n      settings: this.settings,\n      columns: this.columns,\n      onClickHeader: this.props.onClickHeader,\n      grouping: this.headerGrouping\n    }) : null;\n    var caption = this.props.caption ? React.createElement(\"caption\", null, this.props.caption) : null;\n    var table = React.createElement(\"div\", null, React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        overflow: \"hidden\"\n      }\n    }, React.createElement(\"table\", {\n      className: this.className,\n      key: 'jt-table'\n    }, caption, header, React.createElement(gridBody_1.GridBody, {\n      key: 'jt-body',\n      settings: this.settings,\n      columns: this.columns,\n      rows: this.props.rows,\n      onClickRow: this.props.onClickRow,\n      onClickCell: this.props.onClickCell\n    }), React.createElement(gridFooter_1.GridFooter, {\n      key: 'jt-footer'\n    }))));\n    return this.settings.freezeHeader ? React.createElement(\"div\", {\n      className: \"scrollingtable\"\n    }, React.createElement(\"div\", null, React.createElement(\"div\", null, table))) : table;\n  };\n\n  JsonTable.prototype.createSettings = function () {\n    if (this.props.settings) {\n      this.settings = this.props.settings;\n    } else {\n      this.settings = this.defaultSettings;\n    }\n\n    if (this.settings.header == null) this.settings.header = true;\n    if (this.settings.noRowsMessage == null) this.settings.noRowsMessage = this.defaultSettings.noRowsMessage;\n    if (this.settings.classPrefix == null) this.settings.classPrefix = this.defaultSettings.classPrefix;\n  };\n\n  JsonTable.prototype.createColumns = function () {\n    var _this = this;\n\n    if (!this.props.rows || this.props.rows.length === 0) {\n      return [];\n    }\n\n    var columns;\n\n    if (!this.props.columns) {\n      columns = Object.keys(this.props.rows[0]).map(function (key) {\n        return {\n          key: key,\n          label: key,\n          cell: _this.settings.cellRenderer || key\n        };\n      });\n    } else {\n      columns = this.props.columns.map(function (column) {\n        if (typeof column == 'string') {\n          return {\n            key: column,\n            label: column,\n            cell: _this.settings.cellRenderer || column\n          };\n        }\n\n        if (typeof column == 'object') {\n          var key = column.key || column.label;\n          if (column.group) _this.headerGrouping = true;\n          return {\n            key: key,\n            label: column.label || key,\n            cell: _this.settings.cellRenderer || column.cell || key,\n            objectDisplayStyle: column.objectDisplayStyle,\n            group: column.group\n          };\n        }\n      });\n    }\n\n    if (this.props.excludeColumns && this.props.excludeColumns.length !== 0) {\n      var toDelete_1 = [];\n      this.props.excludeColumns.forEach(function (key) {\n        toDelete_1.push(columns.findIndex(function (column) {\n          return column.key === key;\n        }));\n      });\n      toDelete_1.forEach(function (index) {\n        if (index !== -1) columns.splice(index, 1);\n      });\n    }\n\n    var copyObject = function (index, columnDefinition) {\n      if (index !== -1) {\n        Object.keys(columnDefinition).forEach(function (key) {\n          columns[index][key] = columnDefinition[key];\n        });\n        return true;\n      }\n\n      return false;\n    };\n\n    if (this.props.columnDefinitions && this.props.columnDefinitions.length > 0) {\n      this.props.columnDefinitions.forEach(function (def) {\n        var index = columns.findIndex(function (column) {\n          return column.key === def.key;\n        });\n\n        if (!copyObject(index, def)) {\n          var dotIndex_1 = def.key.indexOf('.');\n\n          if (dotIndex_1 !== -1) {\n            index = columns.findIndex(function (column) {\n              return column.key === def.key.substring(0, dotIndex_1);\n            });\n\n            if (copyObject(index, def)) {\n              columns[index].cell = _this.settings.cellRenderer || def.cell || def.key;\n            } else {\n              index = columns.findIndex(function (column) {\n                return column.key.indexOf(def.key.substring(0, dotIndex_1 + 1)) !== -1;\n              });\n\n              if (index !== -1) {\n                var newIndex = index + 1;\n                columns.splice(newIndex, 0, def);\n                copyObject(newIndex, def);\n                columns[newIndex].cell = _this.settings.cellRenderer || def.cell || def.key;\n              }\n            }\n          }\n        }\n\n        if (def.group) _this.headerGrouping = true;\n      });\n    }\n\n    if (this.headerGrouping) {\n      var group_1;\n      var colSpans_1 = new Map();\n      var colSpan_1 = 1;\n      columns.forEach(function (column) {\n        if (column.group) {\n          if (column.group === group_1) {\n            colSpans_1.set(column.group, ++colSpan_1);\n          } else {\n            group_1 = column.group;\n            column.groupIndex = 0;\n            colSpan_1 = 1;\n          }\n        }\n      });\n      Array.from(colSpans_1.keys()).forEach(function (group) {\n        var index = columns.findIndex(function (column) {\n          return column.group === group && column.groupIndex === 0;\n        });\n        columns[index].colSpan = colSpans_1.get(group);\n      });\n    }\n\n    return columns;\n  };\n\n  return JsonTable;\n}(React.Component);\n\nexports.JsonTable = JsonTable;\nmodule.exports = JsonTable;","map":{"version":3,"sources":["../src/grid.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar React = require(\"react\");\r\nvar gridHeader_1 = require(\"./gridHeader\");\r\nvar gridBody_1 = require(\"./gridBody\");\r\nvar gridFooter_1 = require(\"./gridFooter\");\r\nvar polyfills_1 = require(\"./polyfills\");\r\npolyfills_1.polyfills();\r\nvar JsonTable = /** @class */ (function (_super) {\r\n    __extends(JsonTable, _super);\r\n    function JsonTable() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.defaultSettings = {\r\n            header: true,\r\n            noRowsMessage: 'No items',\r\n            classPrefix: 'json',\r\n        };\r\n        _this.headerGrouping = false;\r\n        return _this;\r\n    }\r\n    JsonTable.prototype.render = function () {\r\n        this.createSettings();\r\n        this.columns = this.createColumns();\r\n        this.className = this.props.className || this.settings.classPrefix + \"Table\";\r\n        var header = this.settings.header ? React.createElement(gridHeader_1.GridHeader, { theadClassName: this.props.theadClassName, key: 'jt-header', settings: this.settings, columns: this.columns, onClickHeader: this.props.onClickHeader, grouping: this.headerGrouping }) : null;\r\n        var caption = this.props.caption ? React.createElement(\"caption\", null, this.props.caption) : null;\r\n        var table = React.createElement(\"div\", null,\r\n            React.createElement(\"div\", { style: { position: \"relative\", overflow: \"hidden\" } },\r\n                React.createElement(\"table\", { className: this.className, key: 'jt-table' },\r\n                    caption,\r\n                    header,\r\n                    React.createElement(gridBody_1.GridBody, { key: 'jt-body', settings: this.settings, columns: this.columns, rows: this.props.rows, onClickRow: this.props.onClickRow, onClickCell: this.props.onClickCell }),\r\n                    React.createElement(gridFooter_1.GridFooter, { key: 'jt-footer' }))));\r\n        return this.settings.freezeHeader ?\r\n            React.createElement(\"div\", { className: \"scrollingtable\" },\r\n                React.createElement(\"div\", null,\r\n                    React.createElement(\"div\", null, table))) : table;\r\n    };\r\n    JsonTable.prototype.createSettings = function () {\r\n        if (this.props.settings) {\r\n            this.settings = this.props.settings;\r\n        }\r\n        else {\r\n            this.settings = this.defaultSettings;\r\n        }\r\n        if (this.settings.header == null)\r\n            this.settings.header = true;\r\n        if (this.settings.noRowsMessage == null)\r\n            this.settings.noRowsMessage = this.defaultSettings.noRowsMessage;\r\n        if (this.settings.classPrefix == null)\r\n            this.settings.classPrefix = this.defaultSettings.classPrefix;\r\n    };\r\n    JsonTable.prototype.createColumns = function () {\r\n        var _this = this;\r\n        if (!this.props.rows || this.props.rows.length === 0) {\r\n            return [];\r\n        }\r\n        var columns;\r\n        if (!this.props.columns) {\r\n            columns = Object.keys(this.props.rows[0]).map(function (key) {\r\n                return {\r\n                    key: key,\r\n                    label: key,\r\n                    cell: _this.settings.cellRenderer || key,\r\n                };\r\n            });\r\n        }\r\n        else {\r\n            columns = this.props.columns.map(function (column) {\r\n                if (typeof column == 'string') {\r\n                    return {\r\n                        key: column,\r\n                        label: column,\r\n                        cell: _this.settings.cellRenderer || column\r\n                    };\r\n                }\r\n                if (typeof column == 'object') {\r\n                    var key = column.key || column.label;\r\n                    if (column.group)\r\n                        _this.headerGrouping = true;\r\n                    return {\r\n                        key: key,\r\n                        label: column.label || key,\r\n                        cell: _this.settings.cellRenderer || column.cell || key,\r\n                        objectDisplayStyle: column.objectDisplayStyle,\r\n                        group: column.group\r\n                    };\r\n                }\r\n            });\r\n        }\r\n        if (this.props.excludeColumns && this.props.excludeColumns.length !== 0) {\r\n            var toDelete_1 = [];\r\n            this.props.excludeColumns.forEach(function (key) {\r\n                toDelete_1.push(columns.findIndex(function (column) { return column.key === key; }));\r\n            });\r\n            toDelete_1.forEach(function (index) {\r\n                if (index !== -1)\r\n                    columns.splice(index, 1);\r\n            });\r\n        }\r\n        var copyObject = function (index, columnDefinition) {\r\n            if (index !== -1) {\r\n                Object.keys(columnDefinition).forEach(function (key) {\r\n                    columns[index][key] = columnDefinition[key];\r\n                });\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n        if (this.props.columnDefinitions && this.props.columnDefinitions.length > 0) {\r\n            this.props.columnDefinitions.forEach(function (def) {\r\n                var index = columns.findIndex(function (column) { return column.key === def.key; });\r\n                if (!copyObject(index, def)) {\r\n                    var dotIndex_1 = def.key.indexOf('.');\r\n                    if (dotIndex_1 !== -1) {\r\n                        index = columns.findIndex(function (column) { return column.key === def.key.substring(0, dotIndex_1); });\r\n                        if (copyObject(index, def)) {\r\n                            columns[index].cell = _this.settings.cellRenderer || def.cell || def.key;\r\n                        }\r\n                        else {\r\n                            index = columns.findIndex(function (column) { return column.key.indexOf(def.key.substring(0, dotIndex_1 + 1)) !== -1; });\r\n                            if (index !== -1) {\r\n                                var newIndex = index + 1;\r\n                                columns.splice(newIndex, 0, def);\r\n                                copyObject(newIndex, def);\r\n                                columns[newIndex].cell = _this.settings.cellRenderer || def.cell || def.key;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if (def.group)\r\n                    _this.headerGrouping = true;\r\n            });\r\n        }\r\n        if (this.headerGrouping) {\r\n            var group_1;\r\n            var colSpans_1 = new Map();\r\n            var colSpan_1 = 1;\r\n            columns.forEach(function (column) {\r\n                if (column.group) {\r\n                    if (column.group === group_1) {\r\n                        colSpans_1.set(column.group, ++colSpan_1);\r\n                    }\r\n                    else {\r\n                        group_1 = column.group;\r\n                        column.groupIndex = 0;\r\n                        colSpan_1 = 1;\r\n                    }\r\n                }\r\n            });\r\n            Array.from(colSpans_1.keys()).forEach(function (group) {\r\n                var index = columns.findIndex(function (column) { return column.group === group && column.groupIndex === 0; });\r\n                columns[index].colSpan = colSpans_1.get(group);\r\n            });\r\n        }\r\n        return columns;\r\n    };\r\n    return JsonTable;\r\n}(React.Component));\r\nexports.JsonTable = JsonTable;\r\nmodule.exports = JsonTable;\r\n//# sourceMappingURL=grid.js.map"]},"metadata":{},"sourceType":"script"}